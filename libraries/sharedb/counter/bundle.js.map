{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://counter/./node_modules/async/dist/async.js","webpack://counter/./node_modules/events/events.js","webpack://counter/./node_modules/fast-deep-equal/index.js","webpack://counter/./node_modules/hat/index.js","webpack://counter/./node_modules/ot-json0/lib/bootstrapTransform.js","webpack://counter/./node_modules/ot-json0/lib/index.js","webpack://counter/./node_modules/ot-json0/lib/json0.js","webpack://counter/./node_modules/ot-json0/lib/text0.js","webpack://counter/./node_modules/sharedb/lib/client/connection.js","webpack://counter/./node_modules/sharedb/lib/client/doc.js","webpack://counter/./node_modules/sharedb/lib/client/index.js","webpack://counter/./node_modules/sharedb/lib/client/presence/doc-presence.js","webpack://counter/./node_modules/sharedb/lib/client/presence/local-doc-presence.js","webpack://counter/./node_modules/sharedb/lib/client/presence/local-presence.js","webpack://counter/./node_modules/sharedb/lib/client/presence/presence.js","webpack://counter/./node_modules/sharedb/lib/client/presence/remote-doc-presence.js","webpack://counter/./node_modules/sharedb/lib/client/presence/remote-presence.js","webpack://counter/./node_modules/sharedb/lib/client/query.js","webpack://counter/./node_modules/sharedb/lib/client/snapshot-request/snapshot-request.js","webpack://counter/./node_modules/sharedb/lib/client/snapshot-request/snapshot-timestamp-request.js","webpack://counter/./node_modules/sharedb/lib/client/snapshot-request/snapshot-version-request.js","webpack://counter/./node_modules/sharedb/lib/emitter.js","webpack://counter/./node_modules/sharedb/lib/error.js","webpack://counter/./node_modules/sharedb/lib/logger/index.js","webpack://counter/./node_modules/sharedb/lib/logger/logger.js","webpack://counter/./node_modules/sharedb/lib/ot.js","webpack://counter/./node_modules/sharedb/lib/snapshot.js","webpack://counter/./node_modules/sharedb/lib/types.js","webpack://counter/./node_modules/sharedb/lib/util.js","webpack://counter/webpack/bootstrap","webpack://counter/webpack/runtime/global","webpack://counter/webpack/runtime/node module decorator","webpack://counter/./index.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.async = global.async || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction slice(arrayLike, start) {\n    start = start|0;\n    var newLen = Math.max(arrayLike.length - start, 0);\n    var newArr = Array(newLen);\n    for(var idx = 0; idx < newLen; idx++)  {\n        newArr[idx] = arrayLike[start + idx];\n    }\n    return newArr;\n}\n\n/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @returns {Function} the partially-applied function\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nvar apply = function(fn/*, ...args*/) {\n    var args = slice(arguments, 1);\n    return function(/*callArgs*/) {\n        var callArgs = slice(arguments);\n        return fn.apply(null, args.concat(callArgs));\n    };\n};\n\nvar initialParams = function (fn) {\n    return function (/*...args, callback*/) {\n        var args = slice(arguments);\n        var callback = args.pop();\n        fn.call(this, args, callback);\n    };\n};\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return function (fn/*, ...args*/) {\n        var args = slice(arguments, 1);\n        defer(function () {\n            fn.apply(null, args);\n        });\n    };\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (isObject(result) && typeof result.then === 'function') {\n            result.then(function(value) {\n                invokeCallback(callback, null, value);\n            }, function(err) {\n                invokeCallback(callback, err.message ? err : new Error(err));\n            });\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (e) {\n        setImmediate$1(rethrow, e);\n    }\n}\n\nfunction rethrow(error) {\n    throw error;\n}\n\nvar supportsSymbol = typeof Symbol === 'function';\n\nfunction isAsync(fn) {\n    return supportsSymbol && fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction wrapAsync(asyncFn) {\n    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;\n}\n\nfunction applyEach$1(eachfn) {\n    return function(fns/*, ...args*/) {\n        var args = slice(arguments, 1);\n        var go = initialParams(function(args, callback) {\n            var that = this;\n            return eachfn(fns, function (fn, cb) {\n                wrapAsync(fn).apply(that, args.concat(cb));\n            }, callback);\n        });\n        if (args.length) {\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n}\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Built-in value references. */\nvar Symbol$1 = root.Symbol;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]';\nvar funcTag = '[object Function]';\nvar genTag = '[object GeneratorFunction]';\nvar proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nvar breakLoop = {};\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nfunction once(fn) {\n    return function () {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nvar iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;\n\nvar getIterator = function (coll) {\n    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();\n};\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto$3.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/** `Object#toString` result references. */\nvar argsTag$1 = '[object Arguments]';\nvar arrayTag = '[object Array]';\nvar boolTag = '[object Boolean]';\nvar dateTag = '[object Date]';\nvar errorTag = '[object Error]';\nvar funcTag$1 = '[object Function]';\nvar mapTag = '[object Map]';\nvar numberTag = '[object Number]';\nvar objectTag = '[object Object]';\nvar regexpTag = '[object RegExp]';\nvar setTag = '[object Set]';\nvar stringTag = '[object String]';\nvar weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\nvar dataViewTag = '[object DataView]';\nvar float32Tag = '[object Float32Array]';\nvar float64Tag = '[object Float64Array]';\nvar int8Tag = '[object Int8Array]';\nvar int16Tag = '[object Int16Array]';\nvar int32Tag = '[object Int32Array]';\nvar uint8Tag = '[object Uint8Array]';\nvar uint8ClampedTag = '[object Uint8ClampedArray]';\nvar uint16Tag = '[object Uint16Array]';\nvar uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag$1] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Detect free variable `exports`. */\nvar freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports$1 && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule$1 && freeModule$1.require && freeModule$1.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$2.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$1.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$5 = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;\n\n  return value === proto;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? {value: coll[i], key: i} : null;\n    }\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done)\n            return null;\n        i++;\n        return {value: item.value, key: i};\n    }\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = keys(obj);\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        return i < len ? {value: obj[key], key: key} : null;\n    };\n}\n\nfunction iterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function() {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nfunction _eachOfLimit(limit) {\n    return function (obj, iteratee, callback) {\n        callback = once(callback || noop);\n        if (limit <= 0 || !obj) {\n            return callback(null);\n        }\n        var nextElem = iterator(obj);\n        var done = false;\n        var running = 0;\n        var looping = false;\n\n        function iterateeCallback(err, value) {\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            }\n            else if (value === breakLoop || (done && running <= 0)) {\n                done = true;\n                return callback(null);\n            }\n            else if (!looping) {\n                replenish();\n            }\n        }\n\n        function replenish () {\n            looping = true;\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n            looping = false;\n        }\n\n        replenish();\n    };\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n    _eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);\n}\n\nfunction doLimit(fn, limit) {\n    return function (iterable, iteratee, callback) {\n        return fn(iterable, limit, iteratee, callback);\n    };\n}\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback || noop);\n    var index = 0,\n        completed = 0,\n        length = coll.length;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err) {\n            callback(err);\n        } else if ((++completed === length) || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = doLimit(eachOfLimit, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nvar eachOf = function(coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    eachOfImplementation(coll, wrapAsync(iteratee), callback);\n};\n\nfunction doParallel(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOf, obj, wrapAsync(iteratee), callback);\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    callback = callback || noop;\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n    var _iteratee = wrapAsync(iteratee);\n\n    eachfn(arr, function (value, _, callback) {\n        var index = counter++;\n        _iteratee(value, function (err, v) {\n            results[index] = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nvar map = doParallel(_asyncMap);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument, `fns`, is provided, it will\n * return a function which lets you pass in the arguments as if it were a single\n * function call. The signature is `(..args, callback)`. If invoked with any\n * arguments, `callback` is required.\n * @example\n *\n * async.applyEach([enableSearch, updateSchema], 'bucket', callback);\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async.applyEach([enableSearch, updateSchema]),\n *     callback\n * );\n */\nvar applyEach = applyEach$1(map);\n\nfunction doParallelLimit(fn) {\n    return function (obj, limit, iteratee, callback) {\n        return fn(_eachOfLimit(limit), obj, wrapAsync(iteratee), callback);\n    };\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapLimit = doParallelLimit(_asyncMap);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapSeries = doLimit(mapLimit, 1);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument is provided, it will return\n * a function which lets you pass in the arguments as if it were a single\n * function call.\n */\nvar applyEachSeries = applyEach$1(mapSeries);\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\n/**\n * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * {@link AsyncFunction}s also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the {@link AsyncFunction} itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns undefined\n * @example\n *\n * async.auto({\n *     // this function will just be passed a callback\n *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n *     showData: ['readData', function(results, cb) {\n *         // results.readData is the file's contents\n *         // ...\n *     }]\n * }, callback);\n *\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         console.log('in write_file', JSON.stringify(results));\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         console.log('in email_link', JSON.stringify(results));\n *         // once the file is written let's email a link to it...\n *         // results.write_file contains the filename returned by write_file.\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('results = ', results);\n * });\n */\nvar auto = function (tasks, concurrency, callback) {\n    if (typeof concurrency === 'function') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || noop);\n    var keys$$1 = keys(tasks);\n    var numTasks = keys$$1.length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    baseForOwn(tasks, function (task, key) {\n        if (!isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        arrayEach(dependencies, function (dependencyName) {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key +\n                    '` has a non-existent dependency `' +\n                    dependencyName + '` in ' +\n                    dependencies.join(', '));\n            }\n            addListener(dependencyName, function () {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(function () {\n            runTask(key, task);\n        });\n    }\n\n    function processQueue() {\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while(readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        arrayEach(taskListeners, function (fn) {\n            fn();\n        });\n        processQueue();\n    }\n\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce(function(err, result) {\n            runningTasks--;\n            if (arguments.length > 2) {\n                result = slice(arguments, 1);\n            }\n            if (err) {\n                var safeResults = {};\n                baseForOwn(results, function(val, rkey) {\n                    safeResults[rkey] = val;\n                });\n                safeResults[key] = result;\n                hasError = true;\n                listeners = Object.create(null);\n\n                callback(err, safeResults);\n            } else {\n                results[key] = result;\n                taskComplete(key);\n            }\n        });\n\n        runningTasks++;\n        var taskFn = wrapAsync(task[task.length - 1]);\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            arrayEach(getDependents(currentTask), function (dependent) {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error(\n                'async.auto cannot execute tasks due to a recursive dependency'\n            );\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        baseForOwn(tasks, function (task, key) {\n            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n};\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;\nvar symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f';\nvar reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f';\nvar rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff';\nvar rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\nvar rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange$1 = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange$1 = '\\\\u0300-\\\\u036f';\nvar reComboHalfMarksRange$1 = '\\\\ufe20-\\\\ufe2f';\nvar rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20ff';\nvar rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;\nvar rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange$1 + ']';\nvar rsCombo = '[' + rsComboRange$1 + ']';\nvar rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nvar rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\nvar rsNonAstral = '[^' + rsAstralRange$1 + ']';\nvar rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nvar rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nvar rsZWJ$1 = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?';\nvar rsOptVar = '[' + rsVarRange$1 + ']?';\nvar rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrim, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nvar FN_ARGS = /^(?:async\\s+)?(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\nfunction parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function (arg){\n        return trim(arg.replace(FN_ARG, ''));\n    });\n    return func;\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    baseForOwn(tasks, function (taskFn, key) {\n        var params;\n        var fnIsAsync = isAsync(taskFn);\n        var hasNoDeps =\n            (!fnIsAsync && taskFn.length === 1) ||\n            (fnIsAsync && taskFn.length === 0);\n\n        if (isArray(taskFn)) {\n            params = taskFn.slice(0, -1);\n            taskFn = taskFn[taskFn.length - 1];\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (hasNoDeps) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if (taskFn.length === 0 && !fnIsAsync && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            // remove callback param\n            if (!fnIsAsync) params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = arrayMap(params, function (name) {\n                return results[name];\n            });\n            newArgs.push(taskCb);\n            wrapAsync(taskFn).apply(null, newArgs);\n        }\n    });\n\n    auto(newTasks, callback);\n}\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nfunction DLL() {\n    this.head = this.tail = null;\n    this.length = 0;\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nDLL.prototype.removeLink = function(node) {\n    if (node.prev) node.prev.next = node.next;\n    else this.head = node.next;\n    if (node.next) node.next.prev = node.prev;\n    else this.tail = node.prev;\n\n    node.prev = node.next = null;\n    this.length -= 1;\n    return node;\n};\n\nDLL.prototype.empty = function () {\n    while(this.head) this.shift();\n    return this;\n};\n\nDLL.prototype.insertAfter = function(node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next) node.next.prev = newNode;\n    else this.tail = newNode;\n    node.next = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.insertBefore = function(node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) node.prev.next = newNode;\n    else this.head = newNode;\n    node.prev = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.unshift = function(node) {\n    if (this.head) this.insertBefore(this.head, node);\n    else setInitial(this, node);\n};\n\nDLL.prototype.push = function(node) {\n    if (this.tail) this.insertAfter(this.tail, node);\n    else setInitial(this, node);\n};\n\nDLL.prototype.shift = function() {\n    return this.head && this.removeLink(this.head);\n};\n\nDLL.prototype.pop = function() {\n    return this.tail && this.removeLink(this.tail);\n};\n\nDLL.prototype.toArray = function () {\n    var arr = Array(this.length);\n    var curr = this.head;\n    for(var idx = 0; idx < this.length; idx++) {\n        arr[idx] = curr.data;\n        curr = curr.next;\n    }\n    return arr;\n};\n\nDLL.prototype.remove = function (testFn) {\n    var curr = this.head;\n    while(!!curr) {\n        var next = curr.next;\n        if (testFn(curr)) {\n            this.removeLink(curr);\n        }\n        curr = next;\n    }\n    return this;\n};\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    }\n    else if(concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    var _worker = wrapAsync(worker);\n    var numRunning = 0;\n    var workersList = [];\n\n    var processingScheduled = false;\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function() {\n                q.drain();\n            });\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                callback: callback || noop\n            };\n\n            if (insertAtFront) {\n                q._tasks.unshift(item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n\n        if (!processingScheduled) {\n            processingScheduled = true;\n            setImmediate$1(function() {\n                processingScheduled = false;\n                q.process();\n            });\n        }\n    }\n\n    function _next(tasks) {\n        return function(err){\n            numRunning -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n\n                var index = baseIndexOf(workersList, task, 0);\n                if (index === 0) {\n                    workersList.shift();\n                } else if (index > 0) {\n                    workersList.splice(index, 1);\n                }\n\n                task.callback.apply(task, arguments);\n\n                if (err != null) {\n                    q.error(err, task.data);\n                }\n            }\n\n            if (numRunning <= (q.concurrency - q.buffer) ) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n            q.process();\n        };\n    }\n\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        concurrency: concurrency,\n        payload: payload,\n        saturated: noop,\n        unsaturated:noop,\n        buffer: concurrency / 4,\n        empty: noop,\n        drain: noop,\n        error: noop,\n        started: false,\n        paused: false,\n        push: function (data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function () {\n            q.drain = noop;\n            q._tasks.empty();\n        },\n        unshift: function (data, callback) {\n            _insert(data, true, callback);\n        },\n        remove: function (testFn) {\n            q._tasks.remove(testFn);\n        },\n        process: function () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while(!q.paused && numRunning < q.concurrency && q._tasks.length){\n                var tasks = [], data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    workersList.push(node);\n                    data.push(node.data);\n                }\n\n                numRunning += 1;\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n\n                if (numRunning === q.concurrency) {\n                    q.saturated();\n                }\n\n                var cb = onlyOnce(_next(tasks));\n                _worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length: function () {\n            return q._tasks.length;\n        },\n        running: function () {\n            return numRunning;\n        },\n        workersList: function () {\n            return workersList;\n        },\n        idle: function() {\n            return q._tasks.length + numRunning === 0;\n        },\n        pause: function () {\n            q.paused = true;\n        },\n        resume: function () {\n            if (q.paused === false) { return; }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    return q;\n}\n\n/**\n * A cargo of tasks for the worker function to complete. Cargo inherits all of\n * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.\n * @typedef {Object} CargoObject\n * @memberOf module:ControlFlow\n * @property {Function} length - A function returning the number of items\n * waiting to be processed. Invoke like `cargo.length()`.\n * @property {number} payload - An `integer` for determining how many tasks\n * should be process per round. This property can be changed after a `cargo` is\n * created to alter the payload on-the-fly.\n * @property {Function} push - Adds `task` to the `queue`. The callback is\n * called once the `worker` has finished processing the task. Instead of a\n * single task, an array of `tasks` can be submitted. The respective callback is\n * used for every task in the list. Invoke like `cargo.push(task, [callback])`.\n * @property {Function} saturated - A callback that is called when the\n * `queue.length()` hits the concurrency and further tasks will be queued.\n * @property {Function} empty - A callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - A callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke like `cargo.idle()`.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke like `cargo.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke like `cargo.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.\n */\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargo.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n */\nfunction cargo(worker, payload) {\n    return queue(worker, 1, payload);\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachOfSeries = doLimit(eachOfLimit, 1);\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee complete with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @example\n *\n * async.reduce([1,2,3], 0, function(memo, item, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         callback(null, memo + item)\n *     });\n * }, function(err, result) {\n *     // result is now equal to the last value of memo, which is 6\n * });\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n    eachOfSeries(coll, function(x, i, callback) {\n        _iteratee(memo, x, function(err, v) {\n            memo = v;\n            callback(err);\n        });\n    }, function(err) {\n        callback(err, memo);\n    });\n}\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nfunction seq(/*...functions*/) {\n    var _functions = arrayMap(arguments, wrapAsync);\n    return function(/*...args*/) {\n        var args = slice(arguments);\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = noop;\n        }\n\n        reduce(_functions, args, function(newargs, fn, cb) {\n            fn.apply(that, newargs.concat(function(err/*, ...nextargs*/) {\n                var nextargs = slice(arguments, 1);\n                cb(err, nextargs);\n            }));\n        },\n        function(err, results) {\n            cb.apply(that, [err].concat(results));\n        });\n    };\n}\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nvar compose = function(/*...args*/) {\n    return seq.apply(null, slice(arguments).reverse());\n};\n\nvar _concat = Array.prototype.concat;\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.\n *\n * @name concatLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatLimit = function(coll, limit, iteratee, callback) {\n    callback = callback || noop;\n    var _iteratee = wrapAsync(iteratee);\n    mapLimit(coll, limit, function(val, callback) {\n        _iteratee(val, function(err /*, ...args*/) {\n            if (err) return callback(err);\n            return callback(null, slice(arguments, 1));\n        });\n    }, function(err, mapResults) {\n        var result = [];\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                result = _concat.apply(result, mapResults[i]);\n            }\n        }\n\n        return callback(err, result);\n    });\n};\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. There is no guarantee that the\n * results array will be returned in the original order of `coll` passed to the\n * `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @example\n *\n * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n *     // files is now a list of filenames that exist in the 3 directories\n * });\n */\nvar concat = doLimit(concatLimit, Infinity);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.\n * The iteratee should complete with an array an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatSeries = doLimit(concatLimit, 1);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {AsyncFunction} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nvar constant = function(/*...values*/) {\n    var values = slice(arguments);\n    var args = [null].concat(values);\n    return function (/*...ignoredArgs, callback*/) {\n        var callback = arguments[arguments.length - 1];\n        return callback.apply(this, args);\n    };\n};\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nfunction _createTester(check, getResult) {\n    return function(eachfn, arr, iteratee, cb) {\n        cb = cb || noop;\n        var testPassed = false;\n        var testResult;\n        eachfn(arr, function(value, _, callback) {\n            iteratee(value, function(err, result) {\n                if (err) {\n                    callback(err);\n                } else if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    callback(null, breakLoop);\n                } else {\n                    callback();\n                }\n            });\n        }, function(err) {\n            if (err) {\n                cb(err);\n            } else {\n                cb(null, testPassed ? testResult : getResult(false));\n            }\n        });\n    };\n}\n\nfunction _findGetResult(v, x) {\n    return x;\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @example\n *\n * async.detect(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // result now equals the first file in the list that exists\n * });\n */\nvar detect = doParallel(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectLimit = doParallelLimit(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectSeries = doLimit(detectLimit, 1);\n\nfunction consoleFunc(name) {\n    return function (fn/*, ...args*/) {\n        var args = slice(arguments, 1);\n        args.push(function (err/*, ...args*/) {\n            var args = slice(arguments, 1);\n            if (typeof console === 'object') {\n                if (err) {\n                    if (console.error) {\n                        console.error(err);\n                    }\n                } else if (console[name]) {\n                    arrayEach(args, function (x) {\n                        console[name](x);\n                    });\n                }\n            }\n        });\n        wrapAsync(fn).apply(null, args);\n    };\n}\n\n/**\n * Logs the result of an [`async` function]{@link AsyncFunction} to the\n * `console` using `console.dir` to display the properties of the resulting object.\n * Only works in Node.js or in browsers that support `console.dir` and\n * `console.error` (such as FF and Chrome).\n * If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in\n * the order of operations, the arguments `test` and `fn` are switched.\n *\n * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.\n * @name doDuring\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.during]{@link module:ControlFlow.during}\n * @category Control Flow\n * @param {AsyncFunction} fn - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error if one occurred, otherwise `null`.\n */\nfunction doDuring(fn, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var _fn = wrapAsync(fn);\n    var _test = wrapAsync(test);\n\n    function next(err/*, ...args*/) {\n        if (err) return callback(err);\n        var args = slice(arguments, 1);\n        args.push(check);\n        _test.apply(this, args);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        _fn(next);\n    }\n\n    check(null, true);\n\n}\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - A function which is called each time `test`\n * passes. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with any non-error callback results of\n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n    var next = function(err/*, ...args*/) {\n        if (err) return callback(err);\n        var args = slice(arguments, 1);\n        if (test.apply(this, args)) return _iteratee(next);\n        callback.apply(null, [null].concat(args));\n    };\n    _iteratee(next);\n}\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with any non-error callback results of\n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n */\nfunction doUntil(iteratee, test, callback) {\n    doWhilst(iteratee, function() {\n        return !test.apply(this, arguments);\n    }, callback);\n}\n\n/**\n * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that\n * is passed a callback in the form of `function (err, truth)`. If error is\n * passed to `test` or `fn`, the main callback is immediately called with the\n * value of the error.\n *\n * @name during\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (callback).\n * @param {AsyncFunction} fn - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error, if one occurred, otherwise `null`.\n * @example\n *\n * var count = 0;\n *\n * async.during(\n *     function (callback) {\n *         return callback(null, count < 5);\n *     },\n *     function (callback) {\n *         count++;\n *         setTimeout(callback, 1000);\n *     },\n *     function (err) {\n *         // 5 seconds have passed\n *     }\n * );\n */\nfunction during(test, fn, callback) {\n    callback = onlyOnce(callback || noop);\n    var _fn = wrapAsync(fn);\n    var _test = wrapAsync(test);\n\n    function next(err) {\n        if (err) return callback(err);\n        _test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        _fn(next);\n    }\n\n    _test(check);\n}\n\nfunction _withoutIndex(iteratee) {\n    return function (value, index, callback) {\n        return iteratee(value, callback);\n    };\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to\n * each item in `coll`. Invoked with (item, callback).\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * // assuming openFiles is an array of file names and saveFile is a function\n * // to save the modified contents of that file:\n *\n * async.each(openFiles, saveFile, function(err){\n *   // if any of the saves produced an error, err would equal that error\n * });\n *\n * // assuming openFiles is an array of file names\n * async.each(openFiles, function(file, callback) {\n *\n *     // Perform operation on file here.\n *     console.log('Processing file ' + file);\n *\n *     if( file.length > 32 ) {\n *       console.log('This file name is too long');\n *       callback('File name too long');\n *     } else {\n *       // Do work to process file here\n *       console.log('File processed');\n *       callback();\n *     }\n * }, function(err) {\n *     // if any of the file processing produced an error, err would equal that error\n *     if( err ) {\n *       // One of the iterations produced an error.\n *       // All processing will now stop.\n *       console.log('A file failed to process');\n *     } else {\n *       console.log('All files have been processed successfully');\n *     }\n * });\n */\nfunction eachLimit(coll, iteratee, callback) {\n    eachOf(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n    _eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfSeries`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachSeries = doLimit(eachLimit$1, 1);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained. ES2017 `async` functions are returned as-is -- they are immune\n * to Zalgo's corrupting influences, as they always resolve on a later tick.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {AsyncFunction} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    if (isAsync(fn)) return fn;\n    return initialParams(function (args, callback) {\n        var sync = true;\n        args.push(function () {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate$1(function () {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    });\n}\n\nfunction notId(v) {\n    return !v;\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @example\n *\n * async.every(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then every file exists\n * });\n */\nvar every = doParallel(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everyLimit = doParallelLimit(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in series.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everySeries = doLimit(everyLimit, 1);\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            truthValues[index] = !!v;\n            callback(err);\n        });\n    }, function (err) {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            if (err) {\n                callback(err);\n            } else {\n                if (v) {\n                    results.push({index: index, value: x});\n                }\n                callback();\n            }\n        });\n    }, function (err) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, arrayMap(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), baseProperty('value')));\n        }\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    filter(eachfn, coll, wrapAsync(iteratee), callback || noop);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.filter(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of the existing files\n * });\n */\nvar filter = doParallel(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar filterLimit = doParallelLimit(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n */\nvar filterSeries = doLimit(filterLimit, 1);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the callback then `errback` is called with the\n * error, and execution stops, otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} fn - an async function to call repeatedly.\n * Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback || noop);\n    var task = wrapAsync(ensureAsync(fn));\n\n    function next(err) {\n        if (err) return done(err);\n        task(next);\n    }\n    next();\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupByLimit = function(coll, limit, iteratee, callback) {\n    callback = callback || noop;\n    var _iteratee = wrapAsync(iteratee);\n    mapLimit(coll, limit, function(val, callback) {\n        _iteratee(val, function(err, key) {\n            if (err) return callback(err);\n            return callback(null, {key: key, val: val});\n        });\n    }, function(err, mapResults) {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var key = mapResults[i].key;\n                var val = mapResults[i].val;\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n};\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @example\n *\n * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {\n *     db.findById(userId, function(err, user) {\n *         if (err) return callback(err);\n *         return callback(null, user.age);\n *     });\n * }, function(err, result) {\n *     // result is object containing the userIds grouped by age\n *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};\n * });\n */\nvar groupBy = doLimit(groupByLimit, Infinity);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupBySeries = doLimit(groupByLimit, 1);\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback || noop);\n    var newObj = {};\n    var _iteratee = wrapAsync(iteratee);\n    eachOfLimit(obj, limit, function(val, key, next) {\n        _iteratee(val, key, function (err, result) {\n            if (err) return next(err);\n            newObj[key] = result;\n            next();\n        });\n    }, function (err) {\n        callback(err, newObj);\n    });\n}\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @example\n *\n * async.mapValues({\n *     f1: 'file1',\n *     f2: 'file2',\n *     f3: 'file3'\n * }, function (file, key, callback) {\n *   fs.stat(file, callback);\n * }, function(err, result) {\n *     // result is now a map of stats for each file, e.g.\n *     // {\n *     //     f1: [stats for file1],\n *     //     f2: [stats for file2],\n *     //     f3: [stats for file3]\n *     // }\n * });\n */\n\nvar mapValues = doLimit(mapValuesLimit, Infinity);\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nvar mapValuesSeries = doLimit(mapValuesLimit, 1);\n\nfunction has(obj, key) {\n    return key in obj;\n}\n\n/**\n * Caches the results of an async function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {AsyncFunction} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    hasher = hasher || identity;\n    var _fn = wrapAsync(fn);\n    var memoized = initialParams(function memoized(args, callback) {\n        var key = hasher.apply(null, args);\n        if (has(memo, key)) {\n            setImmediate$1(function() {\n                callback.apply(null, memo[key]);\n            });\n        } else if (has(queues, key)) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            _fn.apply(null, args.concat(function(/*args*/) {\n                var args = slice(arguments);\n                memo[key] = args;\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i].apply(null, args);\n                }\n            }));\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `process.nextTick`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.setImmediate]{@link module:Utils.setImmediate}\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nfunction _parallel(eachfn, tasks, callback) {\n    callback = callback || noop;\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, function (task, key, callback) {\n        wrapAsync(task)(function (err, result) {\n            if (arguments.length > 2) {\n                result = slice(arguments, 1);\n            }\n            results[key] = result;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n *\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n *\n * @example\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // the results array will equal ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equals to: {one: 1, two: 2}\n * });\n */\nfunction parallelLimit(tasks, callback) {\n    _parallel(eachOf, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n */\nfunction parallelLimit$1(tasks, limit, callback) {\n    _parallel(_eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Object} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {Function} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {Function} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {Function} remove - remove items from the queue that match a test\n * function.  The test function will be passed an object with a `data` property,\n * and a `priority` property, if this is a\n * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.\n * Invoked with `queue.remove(testFn)`, where `testFn` is of the form\n * `function ({data, priority}) {}` and returns a Boolean.\n * @property {Function} saturated - a callback that is called when the number of\n * running workers hits the `concurrency` limit, and further tasks will be\n * queued.\n * @property {Function} unsaturated - a callback that is called when the number\n * of running workers is less than the `concurrency` & `buffer` limits, and\n * further tasks will not be queued.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - a callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} error - a callback that is called when a task errors.\n * Has the signature `function(error, task)`.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. No more tasks\n * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`. Invoked with (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain = function() {\n *     console.log('all items have been processed');\n * };\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * q.push({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nvar queue$1 = function (worker, concurrency) {\n    var _worker = wrapAsync(worker);\n    return queue(function (items, cb) {\n        _worker(items[0], cb);\n    }, concurrency, 1);\n};\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`.\n * Invoked with (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * The `unshift` method was removed.\n */\nvar priorityQueue = function(worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    // Override push to accept second parameter representing priority\n    q.push = function(data, priority, callback) {\n        if (callback == null) callback = noop;\n        if (typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function() {\n                q.drain();\n            });\n        }\n\n        priority = priority || 0;\n        var nextNode = q._tasks.head;\n        while (nextNode && priority >= nextNode.priority) {\n            nextNode = nextNode.next;\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                priority: priority,\n                callback: callback\n            };\n\n            if (nextNode) {\n                q._tasks.insertBefore(nextNode, item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    };\n\n    // Remove unshift function\n    delete q.unshift;\n\n    return q;\n};\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}\n * to run. Each function can complete with an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns undefined\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        wrapAsync(tasks[i])(callback);\n    }\n}\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee complete with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n */\nfunction reduceRight (array, memo, iteratee, callback) {\n    var reversed = slice(array).reverse();\n    reduce(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the async function in another function that always completes with a\n * result object, even when it errors.\n *\n * The result object has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    var _fn = wrapAsync(fn);\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push(function callback(error, cbArg) {\n            if (error) {\n                reflectCallback(null, { error: error });\n            } else {\n                var value;\n                if (arguments.length <= 2) {\n                    value = cbArg;\n                } else {\n                    value = slice(arguments, 1);\n                }\n                reflectCallback(null, { value: value });\n            }\n        });\n\n        return _fn.apply(this, args);\n    });\n}\n\n/**\n * A helper function that wraps an array or an object of functions with `reflect`.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array|Object|Iterable} tasks - The collection of\n * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.\n * @returns {Array} Returns an array of async functions, each wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (isArray(tasks)) {\n        results = arrayMap(tasks, reflect);\n    } else {\n        results = {};\n        baseForOwn(tasks, function(task, key) {\n            results[key] = reflect.call(this, task);\n        });\n    }\n    return results;\n}\n\nfunction reject$1(eachfn, arr, iteratee, callback) {\n    _filter(eachfn, arr, function(value, cb) {\n        iteratee(value, function(err, v) {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.reject(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of missing files\n *     createFiles(results);\n * });\n */\nvar reject = doParallel(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectLimit = doParallelLimit(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectSeries = doLimit(rejectLimit, 1);\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant$1(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @see [async.retryable]{@link module:ControlFlow.retryable}\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {AsyncFunction} task - An async function to retry.\n * Invoked with (callback).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n *\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // to retry individual methods that are not as reliable within other\n * // control flow functions, use the `retryable` wrapper:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retryable(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nfunction retry(opts, task, callback) {\n    var DEFAULT_TIMES = 5;\n    var DEFAULT_INTERVAL = 0;\n\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    function parseTimes(acc, t) {\n        if (typeof t === 'object') {\n            acc.times = +t.times || DEFAULT_TIMES;\n\n            acc.intervalFunc = typeof t.interval === 'function' ?\n                t.interval :\n                constant$1(+t.interval || DEFAULT_INTERVAL);\n\n            acc.errorFilter = t.errorFilter;\n        } else if (typeof t === 'number' || typeof t === 'string') {\n            acc.times = +t || DEFAULT_TIMES;\n        } else {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n    }\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || noop;\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || noop;\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var _task = wrapAsync(task);\n\n    var attempt = 1;\n    function retryAttempt() {\n        _task(function(err) {\n            if (err && attempt++ < options.times &&\n                (typeof options.errorFilter != 'function' ||\n                    options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt));\n            } else {\n                callback.apply(null, arguments);\n            }\n        });\n    }\n\n    retryAttempt();\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n * wraps a task and makes it retryable, rather than immediately calling it\n * with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`\n * @param {AsyncFunction} task - the asynchronous function to wrap.\n * This function will be passed any arguments passed to the returned wrapper.\n * Invoked with (...args, callback).\n * @returns {AsyncFunction} The wrapped function, which when invoked, will\n * retry on an error, based on the parameters specified in `opts`.\n * This function will accept the same parameters as `task`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nvar retryable = function (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    var _task = wrapAsync(task);\n    return initialParams(function (args, callback) {\n        function taskFn(cb) {\n            _task.apply(null, args.concat(cb));\n        }\n\n        if (opts) retry(opts, taskFn, callback);\n        else retry(taskFn, callback);\n\n    });\n};\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing\n * [async functions]{@link AsyncFunction} to run in series.\n * Each function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @example\n * async.series([\n *     function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     },\n *     function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // results is now equal to ['one', 'two']\n * });\n *\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback){\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equal to: {one: 1, two: 2}\n * });\n */\nfunction series(tasks, callback) {\n    _parallel(eachOfSeries, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nvar some = doParallel(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someLimit = doParallelLimit(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in series.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someSeries = doLimit(someLimit, 1);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a value to use as the sort criteria as\n * its `result`.\n * Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @example\n *\n * async.sortBy(['file1','file2','file3'], function(file, callback) {\n *     fs.stat(file, function(err, stats) {\n *         callback(err, stats.mtime);\n *     });\n * }, function(err, results) {\n *     // results is now the original array of files sorted by\n *     // modified date\n * });\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x);\n * }, function(err,result) {\n *     // result callback\n * });\n *\n * // descending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n * }, function(err,result) {\n *     // result callback\n * });\n */\nfunction sortBy (coll, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    map(coll, function (x, callback) {\n        _iteratee(x, function (err, criteria) {\n            if (err) return callback(err);\n            callback(null, {value: x, criteria: criteria});\n        });\n    }, function (err, results) {\n        if (err) return callback(err);\n        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria, b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} asyncFn - The async function to limit in time.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {AsyncFunction} Returns a wrapped function that can be used with any\n * of the control flow functions.\n * Invoke this function with the same parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var fn = wrapAsync(asyncFn);\n\n    return initialParams(function (args, callback) {\n        var timedOut = false;\n        var timer;\n\n        function timeoutCallback() {\n            var name = asyncFn.name || 'anonymous';\n            var error  = new Error('Callback function \"' + name + '\" timed out.');\n            error.code = 'ETIMEDOUT';\n            if (info) {\n                error.info = info;\n            }\n            timedOut = true;\n            callback(error);\n        }\n\n        args.push(function () {\n            if (!timedOut) {\n                callback.apply(null, arguments);\n                clearTimeout(timer);\n            }\n        });\n\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        fn.apply(null, args);\n    });\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\nvar nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n */\nfunction timeLimit(count, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    mapLimit(baseRange(0, count, 1), limit, _iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nvar times = doLimit(timeLimit, Infinity);\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n */\nvar timesSeries = doLimit(timeLimit, 1);\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in series, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @example\n *\n * async.transform([1,2,3], function(acc, item, index, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         acc.push(item * 2)\n *         callback(null)\n *     });\n * }, function(err, result) {\n *     // result is now equal to [2, 4, 6]\n * });\n *\n * @example\n *\n * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {\n *     setImmediate(function () {\n *         obj[key] = val * 2;\n *         callback();\n *     })\n * }, function (err, result) {\n *     // result is equal to {a: 2, b: 4, c: 6}\n * })\n */\nfunction transform (coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3) {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = isArray(coll) ? [] : {};\n    }\n    callback = once(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n\n    eachOf(coll, function(v, k, cb) {\n        _iteratee(accumulator, v, k, cb);\n    }, function(err) {\n        callback(err, accumulator);\n    });\n}\n\n/**\n * It runs each task in series but stops whenever any of the functions were\n * successful. If one of the tasks were successful, the `callback` will be\n * passed the result of the successful task. If all tasks fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name tryEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to\n * run, each function is passed a `callback(err, result)` it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback which is called when one\n * of the tasks has succeeded, or all have failed. It receives the `err` and\n * `result` arguments of the last attempt at completing the `task`. Invoked with\n * (err, results).\n * @example\n * async.tryEach([\n *     function getDataFromFirstWebsite(callback) {\n *         // Try getting the data from the first website\n *         callback(err, data);\n *     },\n *     function getDataFromSecondWebsite(callback) {\n *         // First website failed,\n *         // Try getting the data from the backup website\n *         callback(err, data);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     Now do something with the data.\n * });\n *\n */\nfunction tryEach(tasks, callback) {\n    var error = null;\n    var result;\n    callback = callback || noop;\n    eachSeries(tasks, function(task, callback) {\n        wrapAsync(task)(function (err, res/*, ...args*/) {\n            if (arguments.length > 2) {\n                result = slice(arguments, 1);\n            } else {\n                result = res;\n            }\n            error = err;\n            callback(!err);\n        });\n    }, function () {\n        callback(error, result);\n    });\n}\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {AsyncFunction} fn - the memoized function\n * @returns {AsyncFunction} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns undefined\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function() { return count < 5; },\n *     function(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n    if (!test()) return callback(null);\n    var next = function(err/*, ...args*/) {\n        if (err) return callback(err);\n        if (test()) return _iteratee(next);\n        var args = slice(arguments, 1);\n        callback.apply(null, [null].concat(args));\n    };\n    _iteratee(next);\n}\n\n/**\n * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `iteratee`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n */\nfunction until(test, iteratee, callback) {\n    whilst(function() {\n        return !test.apply(this, arguments);\n    }, iteratee, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nvar waterfall = function(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = wrapAsync(tasks[taskIndex++]);\n        args.push(onlyOnce(next));\n        task.apply(null, args);\n    }\n\n    function next(err/*, ...args*/) {\n        if (err || taskIndex === tasks.length) {\n            return callback.apply(null, arguments);\n        }\n        nextTask(slice(arguments, 1));\n    }\n\n    nextTask([]);\n};\n\n/**\n * An \"async function\" in the context of Async is an asynchronous function with\n * a variable number of parameters, with the final parameter being a callback.\n * (`function (arg1, arg2, ..., callback) {}`)\n * The final callback is of the form `callback(err, results...)`, which must be\n * called once the function is completed.  The callback should be called with a\n * Error as its first argument to signal that an error occurred.\n * Otherwise, if no error occurred, it should be called with `null` as the first\n * argument, and any additional `result` arguments that may apply, to signal\n * successful completion.\n * The callback must be called exactly once, ideally on a later tick of the\n * JavaScript event loop.\n *\n * This type of function is also referred to as a \"Node-style async function\",\n * or a \"continuation passing-style function\" (CPS). Most of the methods of this\n * library are themselves CPS/Node-style async functions, or functions that\n * return CPS/Node-style async functions.\n *\n * Wherever we accept a Node-style async function, we also directly accept an\n * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.\n * In this case, the `async` function will not be passed a final callback\n * argument, and any thrown error will be used as the `err` argument of the\n * implicit callback, and the return value will be used as the `result` value.\n * (i.e. a `rejected` of the returned Promise becomes the `err` callback\n * argument, and a `resolved` value becomes the `result`.)\n *\n * Note, due to JavaScript limitations, we can only detect native `async`\n * functions and not transpilied implementations.\n * Your environment must have `async`/`await` support for this to work.\n * (e.g. Node > v7.6, or a recent version of a modern browser).\n * If you are using `async` functions through a transpiler (e.g. Babel), you\n * must still wrap the function with [asyncify]{@link module:Utils.asyncify},\n * because the `async function` will be compiled to an ordinary function that\n * returns a promise.\n *\n * @typedef {Function} AsyncFunction\n * @static\n */\n\n/**\n * Async is a utility module which provides straight-forward, powerful functions\n * for working with asynchronous JavaScript. Although originally designed for\n * use with [Node.js](http://nodejs.org) and installable via\n * `npm install --save async`, it can also be used directly in the browser.\n * @module async\n * @see AsyncFunction\n */\n\n\n/**\n * A collection of `async` functions for manipulating collections, such as\n * arrays and objects.\n * @module Collections\n */\n\n/**\n * A collection of `async` functions for controlling the flow through a script.\n * @module ControlFlow\n */\n\n/**\n * A collection of `async` utility functions.\n * @module Utils\n */\n\nvar index = {\n    apply: apply,\n    applyEach: applyEach,\n    applyEachSeries: applyEachSeries,\n    asyncify: asyncify,\n    auto: auto,\n    autoInject: autoInject,\n    cargo: cargo,\n    compose: compose,\n    concat: concat,\n    concatLimit: concatLimit,\n    concatSeries: concatSeries,\n    constant: constant,\n    detect: detect,\n    detectLimit: detectLimit,\n    detectSeries: detectSeries,\n    dir: dir,\n    doDuring: doDuring,\n    doUntil: doUntil,\n    doWhilst: doWhilst,\n    during: during,\n    each: eachLimit,\n    eachLimit: eachLimit$1,\n    eachOf: eachOf,\n    eachOfLimit: eachOfLimit,\n    eachOfSeries: eachOfSeries,\n    eachSeries: eachSeries,\n    ensureAsync: ensureAsync,\n    every: every,\n    everyLimit: everyLimit,\n    everySeries: everySeries,\n    filter: filter,\n    filterLimit: filterLimit,\n    filterSeries: filterSeries,\n    forever: forever,\n    groupBy: groupBy,\n    groupByLimit: groupByLimit,\n    groupBySeries: groupBySeries,\n    log: log,\n    map: map,\n    mapLimit: mapLimit,\n    mapSeries: mapSeries,\n    mapValues: mapValues,\n    mapValuesLimit: mapValuesLimit,\n    mapValuesSeries: mapValuesSeries,\n    memoize: memoize,\n    nextTick: nextTick,\n    parallel: parallelLimit,\n    parallelLimit: parallelLimit$1,\n    priorityQueue: priorityQueue,\n    queue: queue$1,\n    race: race,\n    reduce: reduce,\n    reduceRight: reduceRight,\n    reflect: reflect,\n    reflectAll: reflectAll,\n    reject: reject,\n    rejectLimit: rejectLimit,\n    rejectSeries: rejectSeries,\n    retry: retry,\n    retryable: retryable,\n    seq: seq,\n    series: series,\n    setImmediate: setImmediate$1,\n    some: some,\n    someLimit: someLimit,\n    someSeries: someSeries,\n    sortBy: sortBy,\n    timeout: timeout,\n    times: times,\n    timesLimit: timeLimit,\n    timesSeries: timesSeries,\n    transform: transform,\n    tryEach: tryEach,\n    unmemoize: unmemoize,\n    until: until,\n    waterfall: waterfall,\n    whilst: whilst,\n\n    // aliases\n    all: every,\n    allLimit: everyLimit,\n    allSeries: everySeries,\n    any: some,\n    anyLimit: someLimit,\n    anySeries: someSeries,\n    find: detect,\n    findLimit: detectLimit,\n    findSeries: detectSeries,\n    forEach: eachLimit,\n    forEachSeries: eachSeries,\n    forEachLimit: eachLimit$1,\n    forEachOf: eachOf,\n    forEachOfSeries: eachOfSeries,\n    forEachOfLimit: eachOfLimit,\n    inject: reduce,\n    foldl: reduce,\n    foldr: reduceRight,\n    select: filter,\n    selectLimit: filterLimit,\n    selectSeries: filterSeries,\n    wrapSync: asyncify\n};\n\nexports['default'] = index;\nexports.apply = apply;\nexports.applyEach = applyEach;\nexports.applyEachSeries = applyEachSeries;\nexports.asyncify = asyncify;\nexports.auto = auto;\nexports.autoInject = autoInject;\nexports.cargo = cargo;\nexports.compose = compose;\nexports.concat = concat;\nexports.concatLimit = concatLimit;\nexports.concatSeries = concatSeries;\nexports.constant = constant;\nexports.detect = detect;\nexports.detectLimit = detectLimit;\nexports.detectSeries = detectSeries;\nexports.dir = dir;\nexports.doDuring = doDuring;\nexports.doUntil = doUntil;\nexports.doWhilst = doWhilst;\nexports.during = during;\nexports.each = eachLimit;\nexports.eachLimit = eachLimit$1;\nexports.eachOf = eachOf;\nexports.eachOfLimit = eachOfLimit;\nexports.eachOfSeries = eachOfSeries;\nexports.eachSeries = eachSeries;\nexports.ensureAsync = ensureAsync;\nexports.every = every;\nexports.everyLimit = everyLimit;\nexports.everySeries = everySeries;\nexports.filter = filter;\nexports.filterLimit = filterLimit;\nexports.filterSeries = filterSeries;\nexports.forever = forever;\nexports.groupBy = groupBy;\nexports.groupByLimit = groupByLimit;\nexports.groupBySeries = groupBySeries;\nexports.log = log;\nexports.map = map;\nexports.mapLimit = mapLimit;\nexports.mapSeries = mapSeries;\nexports.mapValues = mapValues;\nexports.mapValuesLimit = mapValuesLimit;\nexports.mapValuesSeries = mapValuesSeries;\nexports.memoize = memoize;\nexports.nextTick = nextTick;\nexports.parallel = parallelLimit;\nexports.parallelLimit = parallelLimit$1;\nexports.priorityQueue = priorityQueue;\nexports.queue = queue$1;\nexports.race = race;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.reflect = reflect;\nexports.reflectAll = reflectAll;\nexports.reject = reject;\nexports.rejectLimit = rejectLimit;\nexports.rejectSeries = rejectSeries;\nexports.retry = retry;\nexports.retryable = retryable;\nexports.seq = seq;\nexports.series = series;\nexports.setImmediate = setImmediate$1;\nexports.some = some;\nexports.someLimit = someLimit;\nexports.someSeries = someSeries;\nexports.sortBy = sortBy;\nexports.timeout = timeout;\nexports.times = times;\nexports.timesLimit = timeLimit;\nexports.timesSeries = timesSeries;\nexports.transform = transform;\nexports.tryEach = tryEach;\nexports.unmemoize = unmemoize;\nexports.until = until;\nexports.waterfall = waterfall;\nexports.whilst = whilst;\nexports.all = every;\nexports.allLimit = everyLimit;\nexports.allSeries = everySeries;\nexports.any = some;\nexports.anyLimit = someLimit;\nexports.anySeries = someSeries;\nexports.find = detect;\nexports.findLimit = detectLimit;\nexports.findSeries = detectSeries;\nexports.forEach = eachLimit;\nexports.forEachSeries = eachSeries;\nexports.forEachLimit = eachLimit$1;\nexports.forEachOf = eachOf;\nexports.forEachOfSeries = eachOfSeries;\nexports.forEachOfLimit = eachOfLimit;\nexports.inject = reduce;\nexports.foldl = reduce;\nexports.foldr = reduceRight;\nexports.select = filter;\nexports.selectLimit = filterLimit;\nexports.selectSeries = filterSeries;\nexports.wrapSync = asyncify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","var hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n\nhat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n        var iters = 0;\n        do {\n            if (iters ++ > 10) {\n                if (expandBy) bits += expandBy;\n                else throw new Error('too many ID collisions, use more bits')\n            }\n            \n            var id = hat(bits, base);\n        } while (Object.hasOwnProperty.call(hats, id));\n        \n        hats[id] = data;\n        return id;\n    };\n    var hats = fn.hats = {};\n    \n    fn.get = function (id) {\n        return fn.hats[id];\n    };\n    \n    fn.set = function (id, value) {\n        fn.hats[id] = value;\n        return fn;\n    };\n    \n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n};\n","// These methods let you build a transform function from a transformComponent\n// function for OT types like JSON0 in which operations are lists of components\n// and transforming them requires N^2 work. I find it kind of nasty that I need\n// this, but I'm not really sure what a better solution is. Maybe I should do\n// this automatically to types that don't have a compose function defined.\n\n// Add transform and transformX functions for an OT type which has\n// transformComponent defined.  transformComponent(destination array,\n// component, other component, side)\nmodule.exports = bootstrapTransform\nfunction bootstrapTransform(type, transformComponent, checkValidOp, append) {\n  var transformComponentX = function(left, right, destLeft, destRight) {\n    transformComponent(destLeft, left, right, 'left');\n    transformComponent(destRight, right, left, 'right');\n  };\n\n  var transformX = type.transformX = function(leftOp, rightOp) {\n    checkValidOp(leftOp);\n    checkValidOp(rightOp);\n    var newRightOp = [];\n\n    for (var i = 0; i < rightOp.length; i++) {\n      var rightComponent = rightOp[i];\n\n      // Generate newLeftOp by composing leftOp by rightComponent\n      var newLeftOp = [];\n      var k = 0;\n      while (k < leftOp.length) {\n        var nextC = [];\n        transformComponentX(leftOp[k], rightComponent, newLeftOp, nextC);\n        k++;\n\n        if (nextC.length === 1) {\n          rightComponent = nextC[0];\n        } else if (nextC.length === 0) {\n          for (var j = k; j < leftOp.length; j++) {\n            append(newLeftOp, leftOp[j]);\n          }\n          rightComponent = null;\n          break;\n        } else {\n          // Recurse.\n          var pair = transformX(leftOp.slice(k), nextC);\n          for (var l = 0; l < pair[0].length; l++) {\n            append(newLeftOp, pair[0][l]);\n          }\n          for (var r = 0; r < pair[1].length; r++) {\n            append(newRightOp, pair[1][r]);\n          }\n          rightComponent = null;\n          break;\n        }\n      }\n\n      if (rightComponent != null) {\n        append(newRightOp, rightComponent);\n      }\n      leftOp = newLeftOp;\n    }\n    return [leftOp, newRightOp];\n  };\n\n  // Transforms op with specified type ('left' or 'right') by otherOp.\n  type.transform = function(op, otherOp, type) {\n    if (!(type === 'left' || type === 'right'))\n      throw new Error(\"type must be 'left' or 'right'\");\n\n    if (otherOp.length === 0) return op;\n\n    if (op.length === 1 && otherOp.length === 1)\n      return transformComponent([], op[0], otherOp[0], type);\n\n    if (type === 'left')\n      return transformX(op, otherOp)[0];\n    else\n      return transformX(otherOp, op)[1];\n  };\n};\n","// Only the JSON type is exported, because the text type is deprecated\n// otherwise. (If you want to use it somewhere, you're welcome to pull it out\n// into a separate module that json0 can depend on).\n\nmodule.exports = {\n  type: require('./json0')\n};\n","/*\n This is the implementation of the JSON OT type.\n\n Spec is here: https://github.com/josephg/ShareJS/wiki/JSON-Operations\n\n Note: This is being made obsolete. It will soon be replaced by the JSON2 type.\n*/\n\n/**\n * UTILITY FUNCTIONS\n */\n\n/**\n * Checks if the passed object is an Array instance. Can't use Array.isArray\n * yet because its not supported on IE8.\n *\n * @param obj\n * @returns {boolean}\n */\nvar isArray = function(obj) {\n  return Object.prototype.toString.call(obj) == '[object Array]';\n};\n\n/**\n * Checks if the passed object is an Object instance.\n * No function call (fast) version\n *\n * @param obj\n * @returns {boolean}\n */\nvar isObject = function(obj) {\n  return (!!obj) && (obj.constructor === Object);\n};\n\n/**\n * Clones the passed object using JSON serialization (which is slow).\n *\n * hax, copied from test/types/json. Apparently this is still the fastest way\n * to deep clone an object, assuming we have browser support for JSON.  @see\n * http://jsperf.com/cloning-an-object/12\n */\nvar clone = function(o) {\n  return JSON.parse(JSON.stringify(o));\n};\n\n/**\n * JSON OT Type\n * @type {*}\n */\nvar json = {\n  name: 'json0',\n  uri: 'http://sharejs.org/types/JSONv0'\n};\n\n// You can register another OT type as a subtype in a JSON document using\n// the following function. This allows another type to handle certain\n// operations instead of the builtin JSON type.\nvar subtypes = {};\njson.registerSubtype = function(subtype) {\n  subtypes[subtype.name] = subtype;\n};\n\njson.create = function(data) {\n  // Null instead of undefined if you don't pass an argument.\n  return data === undefined ? null : clone(data);\n};\n\njson.invertComponent = function(c) {\n  var c_ = {p: c.p};\n\n  // handle subtype ops\n  if (c.t && subtypes[c.t]) {\n    c_.t = c.t;\n    c_.o = subtypes[c.t].invert(c.o);\n  }\n\n  if (c.si !== void 0) c_.sd = c.si;\n  if (c.sd !== void 0) c_.si = c.sd;\n  if (c.oi !== void 0) c_.od = c.oi;\n  if (c.od !== void 0) c_.oi = c.od;\n  if (c.li !== void 0) c_.ld = c.li;\n  if (c.ld !== void 0) c_.li = c.ld;\n  if (c.na !== void 0) c_.na = -c.na;\n\n  if (c.lm !== void 0) {\n    c_.lm = c.p[c.p.length-1];\n    c_.p = c.p.slice(0,c.p.length-1).concat([c.lm]);\n  }\n\n  return c_;\n};\n\njson.invert = function(op) {\n  var op_ = op.slice().reverse();\n  var iop = [];\n  for (var i = 0; i < op_.length; i++) {\n    iop.push(json.invertComponent(op_[i]));\n  }\n  return iop;\n};\n\njson.checkValidOp = function(op) {\n  for (var i = 0; i < op.length; i++) {\n    if (!isArray(op[i].p)) throw new Error('Missing path');\n  }\n};\n\njson.checkList = function(elem) {\n  if (!isArray(elem))\n    throw new Error('Referenced element not a list');\n};\n\njson.checkObj = function(elem) {\n  if (!isObject(elem)) {\n    throw new Error(\"Referenced element not an object (it was \" + JSON.stringify(elem) + \")\");\n  }\n};\n\n// helper functions to convert old string ops to and from subtype ops\nfunction convertFromText(c) {\n  c.t = 'text0';\n  var o = {p: c.p.pop()};\n  if (c.si != null) o.i = c.si;\n  if (c.sd != null) o.d = c.sd;\n  c.o = [o];\n}\n\nfunction convertToText(c) {\n  c.p.push(c.o[0].p);\n  if (c.o[0].i != null) c.si = c.o[0].i;\n  if (c.o[0].d != null) c.sd = c.o[0].d;\n  delete c.t;\n  delete c.o;\n}\n\njson.apply = function(snapshot, op) {\n  json.checkValidOp(op);\n\n  op = clone(op);\n\n  var container = {\n    data: snapshot\n  };\n\n  for (var i = 0; i < op.length; i++) {\n    var c = op[i];\n\n    // convert old string ops to use subtype for backwards compatibility\n    if (c.si != null || c.sd != null)\n      convertFromText(c);\n\n    var parent = null;\n    var parentKey = null;\n    var elem = container;\n    var key = 'data';\n\n    for (var j = 0; j < c.p.length; j++) {\n      var p = c.p[j];\n\n      parent = elem;\n      parentKey = key;\n      elem = elem[key];\n      key = p;\n\n      if (parent == null)\n        throw new Error('Path invalid');\n    }\n\n    // handle subtype ops\n    if (c.t && c.o !== void 0 && subtypes[c.t]) {\n      elem[key] = subtypes[c.t].apply(elem[key], c.o);\n\n    // Number add\n    } else if (c.na !== void 0) {\n      if (typeof elem[key] != 'number')\n        throw new Error('Referenced element not a number');\n\n      elem[key] += c.na;\n    }\n\n    // List replace\n    else if (c.li !== void 0 && c.ld !== void 0) {\n      json.checkList(elem);\n      // Should check the list element matches c.ld\n      elem[key] = c.li;\n    }\n\n    // List insert\n    else if (c.li !== void 0) {\n      json.checkList(elem);\n      elem.splice(key,0, c.li);\n    }\n\n    // List delete\n    else if (c.ld !== void 0) {\n      json.checkList(elem);\n      // Should check the list element matches c.ld here too.\n      elem.splice(key,1);\n    }\n\n    // List move\n    else if (c.lm !== void 0) {\n      json.checkList(elem);\n      if (c.lm != key) {\n        var e = elem[key];\n        // Remove it...\n        elem.splice(key,1);\n        // And insert it back.\n        elem.splice(c.lm,0,e);\n      }\n    }\n\n    // Object insert / replace\n    else if (c.oi !== void 0) {\n      json.checkObj(elem);\n\n      // Should check that elem[key] == c.od\n      elem[key] = c.oi;\n    }\n\n    // Object delete\n    else if (c.od !== void 0) {\n      json.checkObj(elem);\n\n      // Should check that elem[key] == c.od\n      delete elem[key];\n    }\n\n    else {\n      throw new Error('invalid / missing instruction in op');\n    }\n  }\n\n  return container.data;\n};\n\n// Helper to break an operation up into a bunch of small ops.\njson.shatter = function(op) {\n  var results = [];\n  for (var i = 0; i < op.length; i++) {\n    results.push([op[i]]);\n  }\n  return results;\n};\n\n// Helper for incrementally applying an operation to a snapshot. Calls yield\n// after each op component has been applied.\njson.incrementalApply = function(snapshot, op, _yield) {\n  for (var i = 0; i < op.length; i++) {\n    var smallOp = [op[i]];\n    snapshot = json.apply(snapshot, smallOp);\n    // I'd just call this yield, but thats a reserved keyword. Bah!\n    _yield(smallOp, snapshot);\n  }\n\n  return snapshot;\n};\n\n// Checks if two paths, p1 and p2 match.\nvar pathMatches = json.pathMatches = function(p1, p2, ignoreLast) {\n  if (p1.length != p2.length)\n    return false;\n\n  for (var i = 0; i < p1.length; i++) {\n    if (p1[i] !== p2[i] && (!ignoreLast || i !== p1.length - 1))\n      return false;\n  }\n\n  return true;\n};\n\njson.append = function(dest,c) {\n  c = clone(c);\n\n  if (dest.length === 0) {\n    dest.push(c);\n    return;\n  }\n\n  var last = dest[dest.length - 1];\n\n  // convert old string ops to use subtype for backwards compatibility\n  if ((c.si != null || c.sd != null) && (last.si != null || last.sd != null)) {\n    convertFromText(c);\n    convertFromText(last);\n  }\n\n  if (pathMatches(c.p, last.p)) {\n    // handle subtype ops\n    if (c.t && last.t && c.t === last.t && subtypes[c.t]) {\n      last.o = subtypes[c.t].compose(last.o, c.o);\n\n      // convert back to old string ops\n      if (c.si != null || c.sd != null) {\n        var p = c.p;\n        for (var i = 0; i < last.o.length - 1; i++) {\n          c.o = [last.o.pop()];\n          c.p = p.slice();\n          convertToText(c);\n          dest.push(c);\n        }\n\n        convertToText(last);\n      }\n    } else if (last.na != null && c.na != null) {\n      dest[dest.length - 1] = {p: last.p, na: last.na + c.na};\n    } else if (last.li !== undefined && c.li === undefined && c.ld === last.li) {\n      // insert immediately followed by delete becomes a noop.\n      if (last.ld !== undefined) {\n        // leave the delete part of the replace\n        delete last.li;\n      } else {\n        dest.pop();\n      }\n    } else if (last.od !== undefined && last.oi === undefined && c.oi !== undefined && c.od === undefined) {\n      last.oi = c.oi;\n    } else if (last.oi !== undefined && c.od !== undefined) {\n      // The last path component inserted something that the new component deletes (or replaces).\n      // Just merge them.\n      if (c.oi !== undefined) {\n        last.oi = c.oi;\n      } else if (last.od !== undefined) {\n        delete last.oi;\n      } else {\n        // An insert directly followed by a delete turns into a no-op and can be removed.\n        dest.pop();\n      }\n    } else if (c.lm !== undefined && c.p[c.p.length - 1] === c.lm) {\n      // don't do anything\n    } else {\n      dest.push(c);\n    }\n  } else {\n    // convert string ops back\n    if ((c.si != null || c.sd != null) && (last.si != null || last.sd != null)) {\n      convertToText(c);\n      convertToText(last);\n    }\n\n    dest.push(c);\n  }\n};\n\njson.compose = function(op1,op2) {\n  json.checkValidOp(op1);\n  json.checkValidOp(op2);\n\n  var newOp = clone(op1);\n\n  for (var i = 0; i < op2.length; i++) {\n    json.append(newOp,op2[i]);\n  }\n\n  return newOp;\n};\n\njson.normalize = function(op) {\n  var newOp = [];\n\n  op = isArray(op) ? op : [op];\n\n  for (var i = 0; i < op.length; i++) {\n    var c = op[i];\n    if (c.p == null) c.p = [];\n\n    json.append(newOp,c);\n  }\n\n  return newOp;\n};\n\n// Returns the common length of the paths of ops a and b\njson.commonLengthForOps = function(a, b) {\n  var alen = a.p.length;\n  var blen = b.p.length;\n  if (a.na != null || a.t)\n    alen++;\n\n  if (b.na != null || b.t)\n    blen++;\n\n  if (alen === 0) return -1;\n  if (blen === 0) return null;\n\n  alen--;\n  blen--;\n\n  for (var i = 0; i < alen; i++) {\n    var p = a.p[i];\n    if (i >= blen || p !== b.p[i])\n      return null;\n  }\n\n  return alen;\n};\n\n// Returns true if an op can affect the given path\njson.canOpAffectPath = function(op, path) {\n  return json.commonLengthForOps({p:path}, op) != null;\n};\n\n// transform c so it applies to a document with otherC applied.\njson.transformComponent = function(dest, c, otherC, type) {\n  c = clone(c);\n\n  var common = json.commonLengthForOps(otherC, c);\n  var common2 = json.commonLengthForOps(c, otherC);\n  var cplength = c.p.length;\n  var otherCplength = otherC.p.length;\n\n  if (c.na != null || c.t)\n    cplength++;\n\n  if (otherC.na != null || otherC.t)\n    otherCplength++;\n\n  // if c is deleting something, and that thing is changed by otherC, we need to\n  // update c to reflect that change for invertibility.\n  if (common2 != null && otherCplength > cplength && c.p[common2] == otherC.p[common2]) {\n    if (c.ld !== void 0) {\n      var oc = clone(otherC);\n      oc.p = oc.p.slice(cplength);\n      c.ld = json.apply(clone(c.ld),[oc]);\n    } else if (c.od !== void 0) {\n      var oc = clone(otherC);\n      oc.p = oc.p.slice(cplength);\n      c.od = json.apply(clone(c.od),[oc]);\n    }\n  }\n\n  if (common != null) {\n    var commonOperand = cplength == otherCplength;\n\n    // backward compatibility for old string ops\n    var oc = otherC;\n    if ((c.si != null || c.sd != null) && (otherC.si != null || otherC.sd != null)) {\n      convertFromText(c);\n      oc = clone(otherC);\n      convertFromText(oc);\n    }\n\n    // handle subtype ops\n    if (oc.t && subtypes[oc.t]) {\n      if (c.t && c.t === oc.t) {\n        var res = subtypes[c.t].transform(c.o, oc.o, type);\n\n        // convert back to old string ops\n        if (c.si != null || c.sd != null) {\n          var p = c.p;\n          for (var i = 0; i < res.length; i++) {\n            c.o = [res[i]];\n            c.p = p.slice();\n            convertToText(c);\n            json.append(dest, c);\n          }\n        } else if (!isArray(res) || res.length > 0) {\n          c.o = res;\n          json.append(dest, c);\n        }\n\n        return dest;\n      }\n    }\n\n    // transform based on otherC\n    else if (otherC.na !== void 0) {\n      // this case is handled below\n    } else if (otherC.li !== void 0 && otherC.ld !== void 0) {\n      if (otherC.p[common] === c.p[common]) {\n        // noop\n\n        if (!commonOperand) {\n          return dest;\n        } else if (c.ld !== void 0) {\n          // we're trying to delete the same element, -> noop\n          if (c.li !== void 0 && type === 'left') {\n            // we're both replacing one element with another. only one can survive\n            c.ld = clone(otherC.li);\n          } else {\n            return dest;\n          }\n        }\n      }\n    } else if (otherC.li !== void 0) {\n      if (c.li !== void 0 && c.ld === undefined && commonOperand && c.p[common] === otherC.p[common]) {\n        // in li vs. li, left wins.\n        if (type === 'right')\n          c.p[common]++;\n      } else if (otherC.p[common] <= c.p[common]) {\n        c.p[common]++;\n      }\n\n      if (c.lm !== void 0) {\n        if (commonOperand) {\n          // otherC edits the same list we edit\n          if (otherC.p[common] <= c.lm)\n            c.lm++;\n          // changing c.from is handled above.\n        }\n      }\n    } else if (otherC.ld !== void 0) {\n      if (c.lm !== void 0) {\n        if (commonOperand) {\n          if (otherC.p[common] === c.p[common]) {\n            // they deleted the thing we're trying to move\n            return dest;\n          }\n          // otherC edits the same list we edit\n          var p = otherC.p[common];\n          var from = c.p[common];\n          var to = c.lm;\n          if (p < to || (p === to && from < to))\n            c.lm--;\n\n        }\n      }\n\n      if (otherC.p[common] < c.p[common]) {\n        c.p[common]--;\n      } else if (otherC.p[common] === c.p[common]) {\n        if (otherCplength < cplength) {\n          // we're below the deleted element, so -> noop\n          return dest;\n        } else if (c.ld !== void 0) {\n          if (c.li !== void 0) {\n            // we're replacing, they're deleting. we become an insert.\n            delete c.ld;\n          } else {\n            // we're trying to delete the same element, -> noop\n            return dest;\n          }\n        }\n      }\n\n    } else if (otherC.lm !== void 0) {\n      if (c.lm !== void 0 && cplength === otherCplength) {\n        // lm vs lm, here we go!\n        var from = c.p[common];\n        var to = c.lm;\n        var otherFrom = otherC.p[common];\n        var otherTo = otherC.lm;\n        if (otherFrom !== otherTo) {\n          // if otherFrom == otherTo, we don't need to change our op.\n\n          // where did my thing go?\n          if (from === otherFrom) {\n            // they moved it! tie break.\n            if (type === 'left') {\n              c.p[common] = otherTo;\n              if (from === to) // ugh\n                c.lm = otherTo;\n            } else {\n              return dest;\n            }\n          } else {\n            // they moved around it\n            if (from > otherFrom) c.p[common]--;\n            if (from > otherTo) c.p[common]++;\n            else if (from === otherTo) {\n              if (otherFrom > otherTo) {\n                c.p[common]++;\n                if (from === to) // ugh, again\n                  c.lm++;\n              }\n            }\n\n            // step 2: where am i going to put it?\n            if (to > otherFrom) {\n              c.lm--;\n            } else if (to === otherFrom) {\n              if (to > from)\n                c.lm--;\n            }\n            if (to > otherTo) {\n              c.lm++;\n            } else if (to === otherTo) {\n              // if we're both moving in the same direction, tie break\n              if ((otherTo > otherFrom && to > from) ||\n                  (otherTo < otherFrom && to < from)) {\n                if (type === 'right') c.lm++;\n              } else {\n                if (to > from) c.lm++;\n                else if (to === otherFrom) c.lm--;\n              }\n            }\n          }\n        }\n      } else if (c.li !== void 0 && c.ld === undefined && commonOperand) {\n        // li\n        var from = otherC.p[common];\n        var to = otherC.lm;\n        p = c.p[common];\n        if (p > from) c.p[common]--;\n        if (p > to) c.p[common]++;\n      } else {\n        // ld, ld+li, si, sd, na, oi, od, oi+od, any li on an element beneath\n        // the lm\n        //\n        // i.e. things care about where their item is after the move.\n        var from = otherC.p[common];\n        var to = otherC.lm;\n        p = c.p[common];\n        if (p === from) {\n          c.p[common] = to;\n        } else {\n          if (p > from) c.p[common]--;\n          if (p > to) c.p[common]++;\n          else if (p === to && from > to) c.p[common]++;\n        }\n      }\n    }\n    else if (otherC.oi !== void 0 && otherC.od !== void 0) {\n      if (c.p[common] === otherC.p[common]) {\n        if (c.oi !== void 0 && commonOperand) {\n          // we inserted where someone else replaced\n          if (type === 'right') {\n            // left wins\n            return dest;\n          } else {\n            // we win, make our op replace what they inserted\n            c.od = otherC.oi;\n          }\n        } else {\n          // -> noop if the other component is deleting the same object (or any parent)\n          return dest;\n        }\n      }\n    } else if (otherC.oi !== void 0) {\n      if (c.oi !== void 0 && c.p[common] === otherC.p[common]) {\n        // left wins if we try to insert at the same place\n        if (type === 'left') {\n          json.append(dest,{p: c.p, od:otherC.oi});\n        } else {\n          return dest;\n        }\n      }\n    } else if (otherC.od !== void 0) {\n      if (c.p[common] == otherC.p[common]) {\n        if (!commonOperand)\n          return dest;\n        if (c.oi !== void 0) {\n          delete c.od;\n        } else {\n          return dest;\n        }\n      }\n    }\n  }\n\n  json.append(dest,c);\n  return dest;\n};\n\nrequire('./bootstrapTransform')(json, json.transformComponent, json.checkValidOp, json.append);\n\n/**\n * Register a subtype for string operations, using the text0 type.\n */\nvar text = require('./text0');\n\njson.registerSubtype(text);\nmodule.exports = json;\n\n","// DEPRECATED!\n//\n// This type works, but is not exported. Its included here because the JSON0\n// embedded string operations use this library.\n\n\n// A simple text implementation\n//\n// Operations are lists of components. Each component either inserts or deletes\n// at a specified position in the document.\n//\n// Components are either:\n//  {i:'str', p:100}: Insert 'str' at position 100 in the document\n//  {d:'str', p:100}: Delete 'str' at position 100 in the document\n//\n// Components in an operation are executed sequentially, so the position of components\n// assumes previous components have already executed.\n//\n// Eg: This op:\n//   [{i:'abc', p:0}]\n// is equivalent to this op:\n//   [{i:'a', p:0}, {i:'b', p:1}, {i:'c', p:2}]\n\nvar text = module.exports = {\n  name: 'text0',\n  uri: 'http://sharejs.org/types/textv0',\n  create: function(initial) {\n    if ((initial != null) && typeof initial !== 'string') {\n      throw new Error('Initial data must be a string');\n    }\n    return initial || '';\n  }\n};\n\n/** Insert s2 into s1 at pos. */\nvar strInject = function(s1, pos, s2) {\n  return s1.slice(0, pos) + s2 + s1.slice(pos);\n};\n\n/** Check that an operation component is valid. Throws if its invalid. */\nvar checkValidComponent = function(c) {\n  if (typeof c.p !== 'number')\n    throw new Error('component missing position field');\n\n  if ((typeof c.i === 'string') === (typeof c.d === 'string'))\n    throw new Error('component needs an i or d field');\n\n  if (c.p < 0)\n    throw new Error('position cannot be negative');\n};\n\n/** Check that an operation is valid */\nvar checkValidOp = function(op) {\n  for (var i = 0; i < op.length; i++) {\n    checkValidComponent(op[i]);\n  }\n};\n\n/** Apply op to snapshot */\ntext.apply = function(snapshot, op) {\n  var deleted;\n\n  checkValidOp(op);\n  for (var i = 0; i < op.length; i++) {\n    var component = op[i];\n    if (component.i != null) {\n      snapshot = strInject(snapshot, component.p, component.i);\n    } else {\n      deleted = snapshot.slice(component.p, component.p + component.d.length);\n      if (component.d !== deleted)\n        throw new Error(\"Delete component '\" + component.d + \"' does not match deleted text '\" + deleted + \"'\");\n\n      snapshot = snapshot.slice(0, component.p) + snapshot.slice(component.p + component.d.length);\n    }\n  }\n  return snapshot;\n};\n\n/**\n * Append a component to the end of newOp. Exported for use by the random op\n * generator and the JSON0 type.\n */\nvar append = text._append = function(newOp, c) {\n  if (c.i === '' || c.d === '') return;\n\n  if (newOp.length === 0) {\n    newOp.push(c);\n  } else {\n    var last = newOp[newOp.length - 1];\n\n    if (last.i != null && c.i != null && last.p <= c.p && c.p <= last.p + last.i.length) {\n      // Compose the insert into the previous insert\n      newOp[newOp.length - 1] = {i:strInject(last.i, c.p - last.p, c.i), p:last.p};\n\n    } else if (last.d != null && c.d != null && c.p <= last.p && last.p <= c.p + c.d.length) {\n      // Compose the deletes together\n      newOp[newOp.length - 1] = {d:strInject(c.d, last.p - c.p, last.d), p:c.p};\n\n    } else {\n      newOp.push(c);\n    }\n  }\n};\n\n/** Compose op1 and op2 together */\ntext.compose = function(op1, op2) {\n  checkValidOp(op1);\n  checkValidOp(op2);\n  var newOp = op1.slice();\n  for (var i = 0; i < op2.length; i++) {\n    append(newOp, op2[i]);\n  }\n  return newOp;\n};\n\n/** Clean up an op */\ntext.normalize = function(op) {\n  var newOp = [];\n\n  // Normalize should allow ops which are a single (unwrapped) component:\n  // {i:'asdf', p:23}.\n  // There's no good way to test if something is an array:\n  // http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\n  // so this is probably the least bad solution.\n  if (op.i != null || op.p != null) op = [op];\n\n  for (var i = 0; i < op.length; i++) {\n    var c = op[i];\n    if (c.p == null) c.p = 0;\n\n    append(newOp, c);\n  }\n\n  return newOp;\n};\n\n// This helper method transforms a position by an op component.\n//\n// If c is an insert, insertAfter specifies whether the transform\n// is pushed after the insert (true) or before it (false).\n//\n// insertAfter is optional for deletes.\nvar transformPosition = function(pos, c, insertAfter) {\n  // This will get collapsed into a giant ternary by uglify.\n  if (c.i != null) {\n    if (c.p < pos || (c.p === pos && insertAfter)) {\n      return pos + c.i.length;\n    } else {\n      return pos;\n    }\n  } else {\n    // I think this could also be written as: Math.min(c.p, Math.min(c.p -\n    // otherC.p, otherC.d.length)) but I think its harder to read that way, and\n    // it compiles using ternary operators anyway so its no slower written like\n    // this.\n    if (pos <= c.p) {\n      return pos;\n    } else if (pos <= c.p + c.d.length) {\n      return c.p;\n    } else {\n      return pos - c.d.length;\n    }\n  }\n};\n\n// Helper method to transform a cursor position as a result of an op.\n//\n// Like transformPosition above, if c is an insert, insertAfter specifies\n// whether the cursor position is pushed after an insert (true) or before it\n// (false).\ntext.transformCursor = function(position, op, side) {\n  var insertAfter = side === 'right';\n  for (var i = 0; i < op.length; i++) {\n    position = transformPosition(position, op[i], insertAfter);\n  }\n\n  return position;\n};\n\n// Transform an op component by another op component. Asymmetric.\n// The result will be appended to destination.\n//\n// exported for use in JSON type\nvar transformComponent = text._tc = function(dest, c, otherC, side) {\n  //var cIntersect, intersectEnd, intersectStart, newC, otherIntersect, s;\n\n  checkValidComponent(c);\n  checkValidComponent(otherC);\n\n  if (c.i != null) {\n    // Insert.\n    append(dest, {i:c.i, p:transformPosition(c.p, otherC, side === 'right')});\n  } else {\n    // Delete\n    if (otherC.i != null) {\n      // Delete vs insert\n      var s = c.d;\n      if (c.p < otherC.p) {\n        append(dest, {d:s.slice(0, otherC.p - c.p), p:c.p});\n        s = s.slice(otherC.p - c.p);\n      }\n      if (s !== '')\n        append(dest, {d: s, p: c.p + otherC.i.length});\n\n    } else {\n      // Delete vs delete\n      if (c.p >= otherC.p + otherC.d.length)\n        append(dest, {d: c.d, p: c.p - otherC.d.length});\n      else if (c.p + c.d.length <= otherC.p)\n        append(dest, c);\n      else {\n        // They overlap somewhere.\n        var newC = {d: '', p: c.p};\n\n        if (c.p < otherC.p)\n          newC.d = c.d.slice(0, otherC.p - c.p);\n\n        if (c.p + c.d.length > otherC.p + otherC.d.length)\n          newC.d += c.d.slice(otherC.p + otherC.d.length - c.p);\n\n        // This is entirely optional - I'm just checking the deleted text in\n        // the two ops matches\n        var intersectStart = Math.max(c.p, otherC.p);\n        var intersectEnd = Math.min(c.p + c.d.length, otherC.p + otherC.d.length);\n        var cIntersect = c.d.slice(intersectStart - c.p, intersectEnd - c.p);\n        var otherIntersect = otherC.d.slice(intersectStart - otherC.p, intersectEnd - otherC.p);\n        if (cIntersect !== otherIntersect)\n          throw new Error('Delete ops delete different text in the same region of the document');\n\n        if (newC.d !== '') {\n          newC.p = transformPosition(newC.p, otherC);\n          append(dest, newC);\n        }\n      }\n    }\n  }\n\n  return dest;\n};\n\nvar invertComponent = function(c) {\n  return (c.i != null) ? {d:c.i, p:c.p} : {i:c.d, p:c.p};\n};\n\n// No need to use append for invert, because the components won't be able to\n// cancel one another.\ntext.invert = function(op) {\n  // Shallow copy & reverse that sucka.\n  op = op.slice().reverse();\n  for (var i = 0; i < op.length; i++) {\n    op[i] = invertComponent(op[i]);\n  }\n  return op;\n};\n\nrequire('./bootstrapTransform')(text, transformComponent, checkValidOp, append);\n","var Doc = require('./doc');\nvar Query = require('./query');\nvar Presence = require('./presence/presence');\nvar DocPresence = require('./presence/doc-presence');\nvar SnapshotVersionRequest = require('./snapshot-request/snapshot-version-request');\nvar SnapshotTimestampRequest = require('./snapshot-request/snapshot-timestamp-request');\nvar emitter = require('../emitter');\nvar ShareDBError = require('../error');\nvar types = require('../types');\nvar util = require('../util');\nvar logger = require('../logger');\n\nvar ERROR_CODE = ShareDBError.CODES;\n\nfunction connectionState(socket) {\n  if (socket.readyState === 0 || socket.readyState === 1) return 'connecting';\n  return 'disconnected';\n}\n\n/**\n * Handles communication with the sharejs server and provides queries and\n * documents.\n *\n * We create a connection with a socket object\n *   connection = new sharejs.Connection(sockset)\n * The socket may be any object handling the websocket protocol. See the\n * documentation of bindToSocket() for details. We then wait for the connection\n * to connect\n *   connection.on('connected', ...)\n * and are finally able to work with shared documents\n *   connection.get('food', 'steak') // Doc\n *\n * @param socket @see bindToSocket\n */\nmodule.exports = Connection;\nfunction Connection(socket) {\n  emitter.EventEmitter.call(this);\n\n  // Map of collection -> id -> doc object for created documents.\n  // (created documents MUST BE UNIQUE)\n  this.collections = {};\n\n  // Each query and snapshot request is created with an id that the server uses when it sends us\n  // info about the request (updates, etc)\n  this.nextQueryId = 1;\n  this.nextSnapshotRequestId = 1;\n\n  // Map from query ID -> query object.\n  this.queries = {};\n\n  // Maps from channel -> presence objects\n  this._presences = {};\n\n  // Map from snapshot request ID -> snapshot request\n  this._snapshotRequests = {};\n\n  // A unique message number for the given id\n  this.seq = 1;\n\n  // A unique message number for presence\n  this._presenceSeq = 1;\n\n  // Equals agent.src on the server\n  this.id = null;\n\n  // This direct reference from connection to agent is not used internal to\n  // ShareDB, but it is handy for server-side only user code that may cache\n  // state on the agent and read it in middleware\n  this.agent = null;\n\n  this.debug = false;\n\n  this.state = connectionState(socket);\n\n  this.bindToSocket(socket);\n}\nemitter.mixin(Connection);\n\n\n/**\n * Use socket to communicate with server\n *\n * Socket is an object that can handle the websocket protocol. This method\n * installs the onopen, onclose, onmessage and onerror handlers on the socket to\n * handle communication and sends messages by calling socket.send(message). The\n * sockets `readyState` property is used to determine the initaial state.\n *\n * @param socket Handles the websocket protocol\n * @param socket.readyState\n * @param socket.close\n * @param socket.send\n * @param socket.onopen\n * @param socket.onclose\n * @param socket.onmessage\n * @param socket.onerror\n */\nConnection.prototype.bindToSocket = function(socket) {\n  if (this.socket) {\n    this.socket.close();\n    this.socket.onmessage = null;\n    this.socket.onopen = null;\n    this.socket.onerror = null;\n    this.socket.onclose = null;\n  }\n\n  this.socket = socket;\n\n  // State of the connection. The corresponding events are emitted when this changes\n  //\n  // - 'connecting'   The connection is still being established, or we are still\n  //                    waiting on the server to send us the initialization message\n  // - 'connected'    The connection is open and we have connected to a server\n  //                    and recieved the initialization message\n  // - 'disconnected' Connection is closed, but it will reconnect automatically\n  // - 'closed'       The connection was closed by the client, and will not reconnect\n  // - 'stopped'      The connection was closed by the server, and will not reconnect\n  var newState = connectionState(socket);\n  this._setState(newState);\n\n  // This is a helper variable the document uses to see whether we're\n  // currently in a 'live' state. It is true if and only if we're connected\n  this.canSend = false;\n\n  var connection = this;\n\n  socket.onmessage = function(event) {\n    try {\n      var data = (typeof event.data === 'string') ?\n        JSON.parse(event.data) : event.data;\n    } catch (err) {\n      logger.warn('Failed to parse message', event);\n      return;\n    }\n\n    if (connection.debug) logger.info('RECV', JSON.stringify(data));\n\n    var request = {data: data};\n    connection.emit('receive', request);\n    if (!request.data) return;\n\n    try {\n      connection.handleMessage(request.data);\n    } catch (err) {\n      util.nextTick(function() {\n        connection.emit('error', err);\n      });\n    }\n  };\n\n  // If socket is already open, do handshake immediately.\n  if (socket.readyState === 1) {\n    connection._initializeHandshake();\n  }\n  socket.onopen = function() {\n    connection._setState('connecting');\n    connection._initializeHandshake();\n  };\n\n  socket.onerror = function(err) {\n    // This isn't the same as a regular error, because it will happen normally\n    // from time to time. Your connection should probably automatically\n    // reconnect anyway, but that should be triggered off onclose not onerror.\n    // (onclose happens when onerror gets called anyway).\n    connection.emit('connection error', err);\n  };\n\n  socket.onclose = function(reason) {\n    // node-browserchannel reason values:\n    //   'Closed' - The socket was manually closed by calling socket.close()\n    //   'Stopped by server' - The server sent the stop message to tell the client not to try connecting\n    //   'Request failed' - Server didn't respond to request (temporary, usually offline)\n    //   'Unknown session ID' - Server session for client is missing (temporary, will immediately reestablish)\n\n    if (reason === 'closed' || reason === 'Closed') {\n      connection._setState('closed', reason);\n    } else if (reason === 'stopped' || reason === 'Stopped by server') {\n      connection._setState('stopped', reason);\n    } else {\n      connection._setState('disconnected', reason);\n    }\n  };\n};\n\n/**\n * @param {object} message\n * @param {string} message.a action\n */\nConnection.prototype.handleMessage = function(message) {\n  var err = null;\n  if (message.error) {\n    err = wrapErrorData(message.error, message);\n    delete message.error;\n  }\n  // Switch on the message action. Most messages are for documents and are\n  // handled in the doc class.\n  switch (message.a) {\n    case 'init':\n      // Client initialization packet\n      return this._handleLegacyInit(message);\n    case 'hs':\n      return this._handleHandshake(err, message);\n    case 'qf':\n      var query = this.queries[message.id];\n      if (query) query._handleFetch(err, message.data, message.extra);\n      return;\n    case 'qs':\n      var query = this.queries[message.id];\n      if (query) query._handleSubscribe(err, message.data, message.extra);\n      return;\n    case 'qu':\n      // Queries are removed immediately on calls to destroy, so we ignore\n      // replies to query unsubscribes. Perhaps there should be a callback for\n      // destroy, but this is currently unimplemented\n      return;\n    case 'q':\n      // Query message. Pass this to the appropriate query object.\n      var query = this.queries[message.id];\n      if (!query) return;\n      if (err) return query._handleError(err);\n      if (message.diff) query._handleDiff(message.diff);\n      if (message.hasOwnProperty('extra')) query._handleExtra(message.extra);\n      return;\n\n    case 'bf':\n      return this._handleBulkMessage(err, message, '_handleFetch');\n    case 'bs':\n    case 'bu':\n      return this._handleBulkMessage(err, message, '_handleSubscribe');\n\n    case 'nf':\n    case 'nt':\n      return this._handleSnapshotFetch(err, message);\n\n    case 'f':\n      var doc = this.getExisting(message.c, message.d);\n      if (doc) doc._handleFetch(err, message.data);\n      return;\n    case 's':\n    case 'u':\n      var doc = this.getExisting(message.c, message.d);\n      if (doc) doc._handleSubscribe(err, message.data);\n      return;\n    case 'op':\n      var doc = this.getExisting(message.c, message.d);\n      if (doc) doc._handleOp(err, message);\n      return;\n    case 'p':\n      return this._handlePresence(err, message);\n    case 'ps':\n      return this._handlePresenceSubscribe(err, message);\n    case 'pu':\n      return this._handlePresenceUnsubscribe(err, message);\n    case 'pr':\n      return this._handlePresenceRequest(err, message);\n\n    default:\n      logger.warn('Ignoring unrecognized message', message);\n  }\n};\n\nfunction wrapErrorData(errorData, fullMessage) {\n  // wrap in Error object so can be passed through event emitters\n  var err = new Error(errorData.message);\n  err.code = errorData.code;\n  if (fullMessage) {\n    // Add the message data to the error object for more context\n    err.data = fullMessage;\n  }\n  return err;\n}\n\nConnection.prototype._handleBulkMessage = function(err, message, method) {\n  if (message.data) {\n    for (var id in message.data) {\n      var dataForId = message.data[id];\n      var doc = this.getExisting(message.c, id);\n      if (doc) {\n        if (err) {\n          doc[method](err);\n        } else if (dataForId.error) {\n          // Bulk reply snapshot-specific errorr - see agent.js getMapResult\n          doc[method](wrapErrorData(dataForId.error));\n        } else {\n          doc[method](null, dataForId);\n        }\n      }\n    }\n  } else if (Array.isArray(message.b)) {\n    for (var i = 0; i < message.b.length; i++) {\n      var id = message.b[i];\n      var doc = this.getExisting(message.c, id);\n      if (doc) doc[method](err);\n    }\n  } else if (message.b) {\n    for (var id in message.b) {\n      var doc = this.getExisting(message.c, id);\n      if (doc) doc[method](err);\n    }\n  } else {\n    logger.error('Invalid bulk message', message);\n  }\n};\n\nConnection.prototype._reset = function() {\n  this.agent = null;\n};\n\n// Set the connection's state. The connection is basically a state machine.\nConnection.prototype._setState = function(newState, reason) {\n  if (this.state === newState) return;\n\n  // I made a state diagram. The only invalid transitions are getting to\n  // 'connecting' from anywhere other than 'disconnected' and getting to\n  // 'connected' from anywhere other than 'connecting'.\n  if (\n    (\n      newState === 'connecting' &&\n      this.state !== 'disconnected' &&\n      this.state !== 'stopped' &&\n      this.state !== 'closed'\n    ) || (\n      newState === 'connected' &&\n      this.state !== 'connecting'\n    )\n  ) {\n    var err = new ShareDBError(\n      ERROR_CODE.ERR_CONNECTION_STATE_TRANSITION_INVALID,\n      'Cannot transition directly from ' + this.state + ' to ' + newState\n    );\n    return this.emit('error', err);\n  }\n\n  this.state = newState;\n  this.canSend = (newState === 'connected');\n\n  if (\n    newState === 'disconnected' ||\n    newState === 'stopped' ||\n    newState === 'closed'\n  ) {\n    this._reset();\n  }\n\n  // Group subscribes together to help server make more efficient calls\n  this.startBulk();\n  // Emit the event to all queries\n  for (var id in this.queries) {\n    var query = this.queries[id];\n    query._onConnectionStateChanged();\n  }\n  // Emit the event to all documents\n  for (var collection in this.collections) {\n    var docs = this.collections[collection];\n    for (var id in docs) {\n      docs[id]._onConnectionStateChanged();\n    }\n  }\n  // Emit the event to all Presences\n  for (var channel in this._presences) {\n    this._presences[channel]._onConnectionStateChanged();\n  }\n  // Emit the event to all snapshots\n  for (var id in this._snapshotRequests) {\n    var snapshotRequest = this._snapshotRequests[id];\n    snapshotRequest._onConnectionStateChanged();\n  }\n  this.endBulk();\n\n  this.emit(newState, reason);\n  this.emit('state', newState, reason);\n};\n\nConnection.prototype.startBulk = function() {\n  if (!this.bulk) this.bulk = {};\n};\n\nConnection.prototype.endBulk = function() {\n  if (this.bulk) {\n    for (var collection in this.bulk) {\n      var actions = this.bulk[collection];\n      this._sendBulk('f', collection, actions.f);\n      this._sendBulk('s', collection, actions.s);\n      this._sendBulk('u', collection, actions.u);\n    }\n  }\n  this.bulk = null;\n};\n\nConnection.prototype._sendBulk = function(action, collection, values) {\n  if (!values) return;\n  var ids = [];\n  var versions = {};\n  var versionsCount = 0;\n  var versionId;\n  for (var id in values) {\n    var value = values[id];\n    if (value == null) {\n      ids.push(id);\n    } else {\n      versions[id] = value;\n      versionId = id;\n      versionsCount++;\n    }\n  }\n  if (ids.length === 1) {\n    var id = ids[0];\n    this.send({a: action, c: collection, d: id});\n  } else if (ids.length) {\n    this.send({a: 'b' + action, c: collection, b: ids});\n  }\n  if (versionsCount === 1) {\n    var version = versions[versionId];\n    this.send({a: action, c: collection, d: versionId, v: version});\n  } else if (versionsCount) {\n    this.send({a: 'b' + action, c: collection, b: versions});\n  }\n};\n\nConnection.prototype._sendAction = function(action, doc, version) {\n  // Ensure the doc is registered so that it receives the reply message\n  this._addDoc(doc);\n  if (this.bulk) {\n    // Bulk subscribe\n    var actions = this.bulk[doc.collection] || (this.bulk[doc.collection] = {});\n    var versions = actions[action] || (actions[action] = {});\n    var isDuplicate = versions.hasOwnProperty(doc.id);\n    versions[doc.id] = version;\n    return isDuplicate;\n  } else {\n    // Send single doc subscribe message\n    var message = {a: action, c: doc.collection, d: doc.id, v: version};\n    this.send(message);\n  }\n};\n\nConnection.prototype.sendFetch = function(doc) {\n  return this._sendAction('f', doc, doc.version);\n};\n\nConnection.prototype.sendSubscribe = function(doc) {\n  return this._sendAction('s', doc, doc.version);\n};\n\nConnection.prototype.sendUnsubscribe = function(doc) {\n  return this._sendAction('u', doc);\n};\n\nConnection.prototype.sendOp = function(doc, op) {\n  // Ensure the doc is registered so that it receives the reply message\n  this._addDoc(doc);\n  var message = {\n    a: 'op',\n    c: doc.collection,\n    d: doc.id,\n    v: doc.version,\n    src: op.src,\n    seq: op.seq,\n    x: {}\n  };\n  if ('op' in op) message.op = op.op;\n  if (op.create) message.create = op.create;\n  if (op.del) message.del = op.del;\n  if (doc.submitSource) message.x.source = op.source;\n  this.send(message);\n};\n\n\n/**\n * Sends a message down the socket\n */\nConnection.prototype.send = function(message) {\n  if (this.debug) logger.info('SEND', JSON.stringify(message));\n\n  this.emit('send', message);\n  this.socket.send(JSON.stringify(message));\n};\n\n\n/**\n * Closes the socket and emits 'closed'\n */\nConnection.prototype.close = function() {\n  this.socket.close();\n};\n\nConnection.prototype.getExisting = function(collection, id) {\n  if (this.collections[collection]) return this.collections[collection][id];\n};\n\n\n/**\n * Get or create a document.\n *\n * @param collection\n * @param id\n * @return {Doc}\n */\nConnection.prototype.get = function(collection, id) {\n  var docs = this.collections[collection] ||\n    (this.collections[collection] = {});\n\n  var doc = docs[id];\n  if (!doc) {\n    doc = docs[id] = new Doc(this, collection, id);\n    this.emit('doc', doc);\n  }\n\n  return doc;\n};\n\n\n/**\n * Remove document from this.collections\n *\n * @private\n */\nConnection.prototype._destroyDoc = function(doc) {\n  util.digAndRemove(this.collections, doc.collection, doc.id);\n};\n\nConnection.prototype._addDoc = function(doc) {\n  var docs = this.collections[doc.collection];\n  if (!docs) {\n    docs = this.collections[doc.collection] = {};\n  }\n  if (docs[doc.id] !== doc) {\n    docs[doc.id] = doc;\n  }\n};\n\n// Helper for createFetchQuery and createSubscribeQuery, below.\nConnection.prototype._createQuery = function(action, collection, q, options, callback) {\n  var id = this.nextQueryId++;\n  var query = new Query(action, this, id, collection, q, options, callback);\n  this.queries[id] = query;\n  query.send();\n  return query;\n};\n\n// Internal function. Use query.destroy() to remove queries.\nConnection.prototype._destroyQuery = function(query) {\n  delete this.queries[query.id];\n};\n\n// The query options object can contain the following fields:\n//\n// db: Name of the db for the query. You can attach extraDbs to ShareDB and\n//   pick which one the query should hit using this parameter.\n\n// Create a fetch query. Fetch queries are only issued once, returning the\n// results directly into the callback.\n//\n// The callback should have the signature function(error, results, extra)\n// where results is a list of Doc objects.\nConnection.prototype.createFetchQuery = function(collection, q, options, callback) {\n  return this._createQuery('qf', collection, q, options, callback);\n};\n\n// Create a subscribe query. Subscribe queries return with the initial data\n// through the callback, then update themselves whenever the query result set\n// changes via their own event emitter.\n//\n// If present, the callback should have the signature function(error, results, extra)\n// where results is a list of Doc objects.\nConnection.prototype.createSubscribeQuery = function(collection, q, options, callback) {\n  return this._createQuery('qs', collection, q, options, callback);\n};\n\nConnection.prototype.hasPending = function() {\n  return !!(\n    this._firstDoc(hasPending) ||\n    this._firstQuery(hasPending) ||\n    this._firstSnapshotRequest()\n  );\n};\nfunction hasPending(object) {\n  return object.hasPending();\n}\n\nConnection.prototype.hasWritePending = function() {\n  return !!this._firstDoc(hasWritePending);\n};\nfunction hasWritePending(object) {\n  return object.hasWritePending();\n}\n\nConnection.prototype.whenNothingPending = function(callback) {\n  var doc = this._firstDoc(hasPending);\n  if (doc) {\n    // If a document is found with a pending operation, wait for it to emit\n    // that nothing is pending anymore, and then recheck all documents again.\n    // We have to recheck all documents, just in case another mutation has\n    // been made in the meantime as a result of an event callback\n    doc.once('nothing pending', this._nothingPendingRetry(callback));\n    return;\n  }\n  var query = this._firstQuery(hasPending);\n  if (query) {\n    query.once('ready', this._nothingPendingRetry(callback));\n    return;\n  }\n  var snapshotRequest = this._firstSnapshotRequest();\n  if (snapshotRequest) {\n    snapshotRequest.once('ready', this._nothingPendingRetry(callback));\n    return;\n  }\n  // Call back when no pending operations\n  util.nextTick(callback);\n};\nConnection.prototype._nothingPendingRetry = function(callback) {\n  var connection = this;\n  return function() {\n    util.nextTick(function() {\n      connection.whenNothingPending(callback);\n    });\n  };\n};\n\nConnection.prototype._firstDoc = function(fn) {\n  for (var collection in this.collections) {\n    var docs = this.collections[collection];\n    for (var id in docs) {\n      var doc = docs[id];\n      if (fn(doc)) {\n        return doc;\n      }\n    }\n  }\n};\n\nConnection.prototype._firstQuery = function(fn) {\n  for (var id in this.queries) {\n    var query = this.queries[id];\n    if (fn(query)) {\n      return query;\n    }\n  }\n};\n\nConnection.prototype._firstSnapshotRequest = function() {\n  for (var id in this._snapshotRequests) {\n    return this._snapshotRequests[id];\n  }\n};\n\n/**\n * Fetch a read-only snapshot at a given version\n *\n * @param collection - the collection name of the snapshot\n * @param id - the ID of the snapshot\n * @param version (optional) - the version number to fetch. If null, the latest version is fetched.\n * @param callback - (error, snapshot) => void, where snapshot takes the following schema:\n *\n * {\n *   id: string;         // ID of the snapshot\n *   v: number;          // version number of the snapshot\n *   type: string;       // the OT type of the snapshot, or null if it doesn't exist or is deleted\n *   data: any;          // the snapshot\n * }\n *\n */\nConnection.prototype.fetchSnapshot = function(collection, id, version, callback) {\n  if (typeof version === 'function') {\n    callback = version;\n    version = null;\n  }\n\n  var requestId = this.nextSnapshotRequestId++;\n  var snapshotRequest = new SnapshotVersionRequest(this, requestId, collection, id, version, callback);\n  this._snapshotRequests[snapshotRequest.requestId] = snapshotRequest;\n  snapshotRequest.send();\n};\n\n/**\n * Fetch a read-only snapshot at a given timestamp\n *\n * @param collection - the collection name of the snapshot\n * @param id - the ID of the snapshot\n * @param timestamp (optional) - the timestamp to fetch. If null, the latest version is fetched.\n * @param callback - (error, snapshot) => void, where snapshot takes the following schema:\n *\n * {\n *   id: string;         // ID of the snapshot\n *   v: number;          // version number of the snapshot\n *   type: string;       // the OT type of the snapshot, or null if it doesn't exist or is deleted\n *   data: any;          // the snapshot\n * }\n *\n */\nConnection.prototype.fetchSnapshotByTimestamp = function(collection, id, timestamp, callback) {\n  if (typeof timestamp === 'function') {\n    callback = timestamp;\n    timestamp = null;\n  }\n\n  var requestId = this.nextSnapshotRequestId++;\n  var snapshotRequest = new SnapshotTimestampRequest(this, requestId, collection, id, timestamp, callback);\n  this._snapshotRequests[snapshotRequest.requestId] = snapshotRequest;\n  snapshotRequest.send();\n};\n\nConnection.prototype._handleSnapshotFetch = function(error, message) {\n  var snapshotRequest = this._snapshotRequests[message.id];\n  if (!snapshotRequest) return;\n  delete this._snapshotRequests[message.id];\n  snapshotRequest._handleResponse(error, message);\n};\n\nConnection.prototype._handleLegacyInit = function(message) {\n  // If the minor protocol version has been set, we want to use the\n  // new handshake protocol. Let's send a handshake initialize, because\n  // we now know the server is ready. If we've already sent it, we'll\n  // just ignore the response anyway.\n  if (message.protocolMinor) return this._initializeHandshake();\n  this._initialize(message);\n};\n\nConnection.prototype._initializeHandshake = function() {\n  this.send({a: 'hs', id: this.id});\n};\n\nConnection.prototype._handleHandshake = function(error, message) {\n  if (error) return this.emit('error', error);\n  this._initialize(message);\n};\n\nConnection.prototype._initialize = function(message) {\n  if (this.state !== 'connecting') return;\n\n  if (message.protocol !== 1) {\n    return this.emit('error', new ShareDBError(\n      ERROR_CODE.ERR_PROTOCOL_VERSION_NOT_SUPPORTED,\n      'Unsupported protocol version: ' + message.protocol\n    ));\n  }\n  if (types.map[message.type] !== types.defaultType) {\n    return this.emit('error', new ShareDBError(\n      ERROR_CODE.ERR_DEFAULT_TYPE_MISMATCH,\n      message.type + ' does not match the server default type'\n    ));\n  }\n  if (typeof message.id !== 'string') {\n    return this.emit('error', new ShareDBError(\n      ERROR_CODE.ERR_CLIENT_ID_BADLY_FORMED,\n      'Client id must be a string'\n    ));\n  }\n  this.id = message.id;\n\n  this._setState('connected');\n};\n\nConnection.prototype.getPresence = function(channel) {\n  var connection = this;\n  return util.digOrCreate(this._presences, channel, function() {\n    return new Presence(connection, channel);\n  });\n};\n\nConnection.prototype.getDocPresence = function(collection, id) {\n  var channel = DocPresence.channel(collection, id);\n  var connection = this;\n  return util.digOrCreate(this._presences, channel, function() {\n    return new DocPresence(connection, collection, id);\n  });\n};\n\nConnection.prototype._sendPresenceAction = function(action, seq, presence) {\n  // Ensure the presence is registered so that it receives the reply message\n  this._addPresence(presence);\n  var message = {a: action, ch: presence.channel, seq: seq};\n  this.send(message);\n  return message.seq;\n};\n\nConnection.prototype._addPresence = function(presence) {\n  util.digOrCreate(this._presences, presence.channel, function() {\n    return presence;\n  });\n};\n\nConnection.prototype._handlePresenceSubscribe = function(error, message) {\n  var presence = util.dig(this._presences, message.ch);\n  if (presence) presence._handleSubscribe(error, message.seq);\n};\n\nConnection.prototype._handlePresenceUnsubscribe = function(error, message) {\n  var presence = util.dig(this._presences, message.ch);\n  if (presence) presence._handleUnsubscribe(error, message.seq);\n};\n\nConnection.prototype._handlePresence = function(error, message) {\n  var presence = util.dig(this._presences, message.ch);\n  if (presence) presence._receiveUpdate(error, message);\n};\n\nConnection.prototype._handlePresenceRequest = function(error, message) {\n  var presence = util.dig(this._presences, message.ch);\n  if (presence) presence._broadcastAllLocalPresence(error, message);\n};\n","var emitter = require('../emitter');\nvar logger = require('../logger');\nvar ShareDBError = require('../error');\nvar types = require('../types');\nvar util = require('../util');\nvar deepEqual = require('fast-deep-equal');\n\nvar ERROR_CODE = ShareDBError.CODES;\n\n/**\n * A Doc is a client's view on a sharejs document.\n *\n * It is is uniquely identified by its `id` and `collection`.  Documents\n * should not be created directly. Create them with connection.get()\n *\n *\n * Subscriptions\n * -------------\n *\n * We can subscribe a document to stay in sync with the server.\n *   doc.subscribe(function(error) {\n *     doc.subscribed // = true\n *   })\n * The server now sends us all changes concerning this document and these are\n * applied to our data. If the subscription was successful the initial\n * data and version sent by the server are loaded into the document.\n *\n * To stop listening to the changes we call `doc.unsubscribe()`.\n *\n * If we just want to load the data but not stay up-to-date, we call\n *   doc.fetch(function(error) {\n *     doc.data // sent by server\n *   })\n *\n *\n * Events\n * ------\n *\n * You can use doc.on(eventName, callback) to subscribe to the following events:\n * - `before op (op, source)` Fired before a partial operation is applied to the data.\n *   It may be used to read the old data just before applying an operation\n * - `op (op, source)` Fired after every partial operation with this operation as the\n *   first argument\n * - `create (source)` The document was created. That means its type was\n *   set and it has some initial data.\n * - `del (data, source)` Fired after the document is deleted, that is\n *   the data is null. It is passed the data before deletion as an\n *   argument\n * - `load ()` Fired when a new snapshot is ingested from a fetch, subscribe, or query\n */\n\nmodule.exports = Doc;\nfunction Doc(connection, collection, id) {\n  emitter.EventEmitter.call(this);\n\n  this.connection = connection;\n\n  this.collection = collection;\n  this.id = id;\n\n  this.version = null;\n  this.type = null;\n  this.data = undefined;\n\n  // Array of callbacks or nulls as placeholders\n  this.inflightFetch = [];\n  this.inflightSubscribe = null;\n  this.pendingFetch = [];\n  this.pendingSubscribe = [];\n\n  // Whether we think we are subscribed on the server. Synchronously set to\n  // false on calls to unsubscribe and disconnect. Should never be true when\n  // this.wantSubscribe is false\n  this.subscribed = false;\n  // Whether to re-establish the subscription on reconnect\n  this.wantSubscribe = false;\n\n  // The op that is currently roundtripping to the server, or null.\n  //\n  // When the connection reconnects, the inflight op is resubmitted.\n  //\n  // This has the same format as an entry in pendingOps\n  this.inflightOp = null;\n\n  // All ops that are waiting for the server to acknowledge this.inflightOp\n  // This used to just be a single operation, but creates & deletes can't be\n  // composed with regular operations.\n  //\n  // This is a list of {[create:{...}], [del:true], [op:...], callbacks:[...]}\n  this.pendingOps = [];\n\n  // The OT type of this document. An uncreated document has type `null`\n  this.type = null;\n\n  // The applyStack enables us to track any ops submitted while we are\n  // applying an op incrementally. This value is an array when we are\n  // performing an incremental apply and null otherwise. When it is an array,\n  // all submitted ops should be pushed onto it. The `_otApply` method will\n  // reset it back to null when all incremental apply loops are complete.\n  this.applyStack = null;\n\n  // Disable the default behavior of composing submitted ops. This is read at\n  // the time of op submit, so it may be toggled on before submitting a\n  // specifc op and toggled off afterward\n  this.preventCompose = false;\n\n  // If set to true, the source will be submitted over the connection. This\n  // will also have the side-effect of only composing ops whose sources are\n  // equal\n  this.submitSource = false;\n\n  // Prevent own ops being submitted to the server. If subscribed, remote\n  // ops are still received. Should be toggled through the pause() and\n  // resume() methods to correctly flush on resume.\n  this.paused = false;\n}\nemitter.mixin(Doc);\n\nDoc.prototype.destroy = function(callback) {\n  var doc = this;\n  doc.whenNothingPending(function() {\n    if (doc.wantSubscribe) {\n      doc.unsubscribe(function(err) {\n        if (err) {\n          if (callback) return callback(err);\n          return doc.emit('error', err);\n        }\n        doc.connection._destroyDoc(doc);\n        doc.emit('destroy');\n        if (callback) callback();\n      });\n    } else {\n      doc.connection._destroyDoc(doc);\n      doc.emit('destroy');\n      if (callback) callback();\n    }\n  });\n};\n\n\n// ****** Manipulating the document data, version and type.\n\n// Set the document's type, and associated properties. Most of the logic in\n// this function exists to update the document based on any added & removed API\n// methods.\n//\n// @param newType OT type provided by the ottypes library or its name or uri\nDoc.prototype._setType = function(newType) {\n  if (typeof newType === 'string') {\n    newType = types.map[newType];\n  }\n\n  if (newType) {\n    this.type = newType;\n  } else if (newType === null) {\n    this.type = newType;\n    // If we removed the type from the object, also remove its data\n    this.data = undefined;\n  } else {\n    var err = new ShareDBError(ERROR_CODE.ERR_DOC_TYPE_NOT_RECOGNIZED, 'Missing type ' + newType);\n    return this.emit('error', err);\n  }\n};\n\n// Ingest snapshot data. This data must include a version, snapshot and type.\n// This is used both to ingest data that was exported with a webpage and data\n// that was received from the server during a fetch.\n//\n// @param snapshot.v    version\n// @param snapshot.data\n// @param snapshot.type\n// @param callback\nDoc.prototype.ingestSnapshot = function(snapshot, callback) {\n  if (!snapshot) return callback && callback();\n\n  if (typeof snapshot.v !== 'number') {\n    var err = new ShareDBError(\n      ERROR_CODE.ERR_INGESTED_SNAPSHOT_HAS_NO_VERSION,\n      'Missing version in ingested snapshot. ' + this.collection + '.' + this.id\n    );\n    if (callback) return callback(err);\n    return this.emit('error', err);\n  }\n\n  // If the doc is already created or there are ops pending, we cannot use the\n  // ingested snapshot and need ops in order to update the document\n  if (this.type || this.hasWritePending()) {\n    // The version should only be null on a created document when it was\n    // created locally without fetching\n    if (this.version == null) {\n      if (this.hasWritePending()) {\n        // If we have pending ops and we get a snapshot for a locally created\n        // document, we have to wait for the pending ops to complete, because\n        // we don't know what version to fetch ops from. It is possible that\n        // the snapshot came from our local op, but it is also possible that\n        // the doc was created remotely (which would conflict and be an error)\n        return callback && this.once('no write pending', callback);\n      }\n      // Otherwise, we've encounted an error state\n      var err = new ShareDBError(\n        ERROR_CODE.ERR_DOC_MISSING_VERSION,\n        'Cannot ingest snapshot in doc with null version. ' + this.collection + '.' + this.id\n      );\n      if (callback) return callback(err);\n      return this.emit('error', err);\n    }\n    // If we got a snapshot for a version further along than the document is\n    // currently, issue a fetch to get the latest ops and catch us up\n    if (snapshot.v > this.version) return this.fetch(callback);\n    return callback && callback();\n  }\n\n  // Ignore the snapshot if we are already at a newer version. Under no\n  // circumstance should we ever set the current version backward\n  if (this.version > snapshot.v) return callback && callback();\n\n  this.version = snapshot.v;\n  var type = (snapshot.type === undefined) ? types.defaultType : snapshot.type;\n  this._setType(type);\n  this.data = (this.type && this.type.deserialize) ?\n    this.type.deserialize(snapshot.data) :\n    snapshot.data;\n  this.emit('load');\n  callback && callback();\n};\n\nDoc.prototype.whenNothingPending = function(callback) {\n  var doc = this;\n  util.nextTick(function() {\n    if (doc.hasPending()) {\n      doc.once('nothing pending', callback);\n      return;\n    }\n    callback();\n  });\n};\n\nDoc.prototype.hasPending = function() {\n  return !!(\n    this.inflightOp ||\n    this.pendingOps.length ||\n    this.inflightFetch.length ||\n    this.inflightSubscribe ||\n    this.pendingFetch.length ||\n    this.pendingSubscribe.length\n  );\n};\n\nDoc.prototype.hasWritePending = function() {\n  return !!(this.inflightOp || this.pendingOps.length);\n};\n\nDoc.prototype._emitNothingPending = function() {\n  if (this.hasWritePending()) return;\n  this.emit('no write pending');\n  if (this.hasPending()) return;\n  this.emit('nothing pending');\n};\n\n// **** Helpers for network messages\n\nDoc.prototype._emitResponseError = function(err, callback) {\n  if (err && err.code === ERROR_CODE.ERR_SNAPSHOT_READ_SILENT_REJECTION) {\n    this.wantSubscribe = false;\n    if (callback) {\n      callback();\n    }\n    this._emitNothingPending();\n    return;\n  }\n  if (callback) {\n    callback(err);\n    this._emitNothingPending();\n    return;\n  }\n  this._emitNothingPending();\n  this.emit('error', err);\n};\n\nDoc.prototype._handleFetch = function(error, snapshot) {\n  var callbacks = this.pendingFetch;\n  this.pendingFetch = [];\n  var callback = this.inflightFetch.shift();\n  if (callback) callbacks.push(callback);\n  if (callbacks.length) {\n    callback = function(error) {\n      util.callEach(callbacks, error);\n    };\n  }\n  if (error) return this._emitResponseError(error, callback);\n  this.ingestSnapshot(snapshot, callback);\n  this._emitNothingPending();\n};\n\nDoc.prototype._handleSubscribe = function(error, snapshot) {\n  var request = this.inflightSubscribe;\n  this.inflightSubscribe = null;\n  var callbacks = this.pendingFetch;\n  this.pendingFetch = [];\n  if (request.callback) callbacks.push(request.callback);\n  var callback;\n  if (callbacks.length) {\n    callback = function(error) {\n      util.callEach(callbacks, error);\n    };\n  }\n  if (error) return this._emitResponseError(error, callback);\n  this.subscribed = request.wantSubscribe;\n  if (this.subscribed) this.ingestSnapshot(snapshot, callback);\n  else if (callback) callback();\n  this._emitNothingPending();\n  this._flushSubscribe();\n};\n\nDoc.prototype._handleOp = function(err, message) {\n  if (err) {\n    if (this.inflightOp) {\n      // The server has rejected submission of the current operation. If we get\n      // an \"Op submit rejected\" error, this was done intentionally\n      // and we should roll back but not return an error to the user.\n      if (err.code === ERROR_CODE.ERR_OP_SUBMIT_REJECTED) err = null;\n      return this._rollback(err);\n    }\n    return this.emit('error', err);\n  }\n\n  if (this.inflightOp &&\n      message.src === this.inflightOp.src &&\n      message.seq === this.inflightOp.seq) {\n    // The op has already been applied locally. Just update the version\n    // and pending state appropriately\n    this._opAcknowledged(message);\n    return;\n  }\n\n  if (this.version == null || message.v > this.version) {\n    // This will happen in normal operation if we become subscribed to a\n    // new document via a query. It can also happen if we get an op for\n    // a future version beyond the version we are expecting next. This\n    // could happen if the server doesn't publish an op for whatever reason\n    // or because of a race condition. In any case, we can send a fetch\n    // command to catch back up.\n    //\n    // Fetch only sends a new fetch command if no fetches are inflight, which\n    // will act as a natural debouncing so we don't send multiple fetch\n    // requests for many ops received at once.\n    this.fetch();\n    return;\n  }\n\n  if (message.v < this.version) {\n    // We can safely ignore the old (duplicate) operation.\n    return;\n  }\n\n  if (this.inflightOp) {\n    var transformErr = transformX(this.inflightOp, message);\n    if (transformErr) return this._hardRollback(transformErr);\n  }\n\n  for (var i = 0; i < this.pendingOps.length; i++) {\n    var transformErr = transformX(this.pendingOps[i], message);\n    if (transformErr) return this._hardRollback(transformErr);\n  }\n\n  this.version++;\n  try {\n    this._otApply(message, false);\n  } catch (error) {\n    return this._hardRollback(error);\n  }\n};\n\n// Called whenever (you guessed it!) the connection state changes. This will\n// happen when we get disconnected & reconnect.\nDoc.prototype._onConnectionStateChanged = function() {\n  if (this.connection.canSend) {\n    this.flush();\n    this._resubscribe();\n  } else {\n    if (this.inflightOp) {\n      this.pendingOps.unshift(this.inflightOp);\n      this.inflightOp = null;\n    }\n    this.subscribed = false;\n    if (this.inflightSubscribe) {\n      if (this.inflightSubscribe.wantSubscribe) {\n        this.pendingSubscribe.unshift(this.inflightSubscribe);\n        this.inflightSubscribe = null;\n      } else {\n        this._handleSubscribe();\n      }\n    }\n    if (this.inflightFetch.length) {\n      this.pendingFetch = this.pendingFetch.concat(this.inflightFetch);\n      this.inflightFetch.length = 0;\n    }\n  }\n};\n\nDoc.prototype._resubscribe = function() {\n  if (!this.pendingSubscribe.length && this.wantSubscribe) {\n    return this.subscribe();\n  }\n  var willFetch = this.pendingSubscribe.some(function(request) {\n    return request.wantSubscribe;\n  });\n  if (!willFetch && this.pendingFetch.length) this.fetch();\n  this._flushSubscribe();\n};\n\n// Request the current document snapshot or ops that bring us up to date\nDoc.prototype.fetch = function(callback) {\n  if (this.connection.canSend) {\n    var isDuplicate = this.connection.sendFetch(this);\n    pushActionCallback(this.inflightFetch, isDuplicate, callback);\n    return;\n  }\n  this.pendingFetch.push(callback);\n};\n\n// Fetch the initial document and keep receiving updates\nDoc.prototype.subscribe = function(callback) {\n  var wantSubscribe = true;\n  this._queueSubscribe(wantSubscribe, callback);\n};\n\n// Unsubscribe. The data will stay around in local memory, but we'll stop\n// receiving updates\nDoc.prototype.unsubscribe = function(callback) {\n  var wantSubscribe = false;\n  this._queueSubscribe(wantSubscribe, callback);\n};\n\nDoc.prototype._queueSubscribe = function(wantSubscribe, callback) {\n  var lastRequest = this.pendingSubscribe[this.pendingSubscribe.length - 1] || this.inflightSubscribe;\n  var isDuplicateRequest = lastRequest && lastRequest.wantSubscribe === wantSubscribe;\n  if (isDuplicateRequest) {\n    lastRequest.callback = combineCallbacks([lastRequest.callback, callback]);\n    return;\n  }\n  this.pendingSubscribe.push({\n    wantSubscribe: !!wantSubscribe,\n    callback: callback\n  });\n  this._flushSubscribe();\n};\n\nDoc.prototype._flushSubscribe = function() {\n  if (this.inflightSubscribe || !this.pendingSubscribe.length) return;\n\n  if (this.connection.canSend) {\n    this.inflightSubscribe = this.pendingSubscribe.shift();\n    this.wantSubscribe = this.inflightSubscribe.wantSubscribe;\n    if (this.wantSubscribe) {\n      this.connection.sendSubscribe(this);\n    } else {\n      // Be conservative about our subscription state. We'll be unsubscribed\n      // some time between sending this request, and receiving the callback,\n      // so let's just set ourselves to unsubscribed now.\n      this.subscribed = false;\n      this.connection.sendUnsubscribe(this);\n    }\n\n    return;\n  }\n\n  // If we're offline, then we're already unsubscribed. Therefore, call back\n  // the next request immediately if it's an unsubscribe request.\n  if (!this.pendingSubscribe[0].wantSubscribe) {\n    this.inflightSubscribe = this.pendingSubscribe.shift();\n    var doc = this;\n    util.nextTick(function() {\n      doc._handleSubscribe();\n    });\n  }\n};\n\nfunction pushActionCallback(inflight, isDuplicate, callback) {\n  if (isDuplicate) {\n    var lastCallback = inflight.pop();\n    inflight.push(function(err) {\n      lastCallback && lastCallback(err);\n      callback && callback(err);\n    });\n  } else {\n    inflight.push(callback);\n  }\n}\n\nfunction combineCallbacks(callbacks) {\n  callbacks = callbacks.filter(util.truthy);\n  if (!callbacks.length) return null;\n  return function(error) {\n    util.callEach(callbacks, error);\n  };\n}\n\n\n// Operations //\n\n// Send the next pending op to the server, if we can.\n//\n// Only one operation can be in-flight at a time. If an operation is already on\n// its way, or we're not currently connected, this method does nothing.\nDoc.prototype.flush = function() {\n  // Ignore if we can't send or we are already sending an op\n  if (!this.connection.canSend || this.inflightOp) return;\n\n  // Send first pending op unless paused\n  if (!this.paused && this.pendingOps.length) {\n    this._sendOp();\n  }\n};\n\n// Helper function to set op to contain a no-op.\nfunction setNoOp(op) {\n  delete op.op;\n  delete op.create;\n  delete op.del;\n}\n\n// Transform server op data by a client op, and vice versa. Ops are edited in place.\nfunction transformX(client, server) {\n  // Order of statements in this function matters. Be especially careful if\n  // refactoring this function\n\n  // A client delete op should dominate if both the server and the client\n  // delete the document. Thus, any ops following the client delete (such as a\n  // subsequent create) will be maintained, since the server op is transformed\n  // to a no-op\n  if (client.del) return setNoOp(server);\n\n  if (server.del) {\n    return new ShareDBError(ERROR_CODE.ERR_DOC_WAS_DELETED, 'Document was deleted');\n  }\n  if (server.create) {\n    return new ShareDBError(ERROR_CODE.ERR_DOC_ALREADY_CREATED, 'Document already created');\n  }\n\n  // Ignore no-op coming from server\n  if (!('op' in server)) return;\n\n  // I believe that this should not occur, but check just in case\n  if (client.create) {\n    return new ShareDBError(ERROR_CODE.ERR_DOC_ALREADY_CREATED, 'Document already created');\n  }\n\n  // They both edited the document. This is the normal case for this function -\n  // as in, most of the time we'll end up down here.\n  //\n  // You should be wondering why I'm using client.type instead of this.type.\n  // The reason is, if we get ops at an old version of the document, this.type\n  // might be undefined or a totally different type. By pinning the type to the\n  // op data, we make sure the right type has its transform function called.\n  if (client.type.transformX) {\n    var result = client.type.transformX(client.op, server.op);\n    client.op = result[0];\n    server.op = result[1];\n  } else {\n    var clientOp = client.type.transform(client.op, server.op, 'left');\n    var serverOp = client.type.transform(server.op, client.op, 'right');\n    client.op = clientOp;\n    server.op = serverOp;\n  }\n};\n\n/**\n * Applies the operation to the snapshot\n *\n * If the operation is create or delete it emits `create` or `del`. Then the\n * operation is applied to the snapshot and `op` and `after op` are emitted.\n * If the type supports incremental updates and `this.incremental` is true we\n * fire `op` after every small operation.\n *\n * This is the only function to fire the above mentioned events.\n *\n * @private\n */\nDoc.prototype._otApply = function(op, source) {\n  if ('op' in op) {\n    if (!this.type) {\n      // Throw here, because all usage of _otApply should be wrapped with a try/catch\n      throw new ShareDBError(\n        ERROR_CODE.ERR_DOC_DOES_NOT_EXIST,\n        'Cannot apply op to uncreated document. ' + this.collection + '.' + this.id\n      );\n    }\n\n    // NB: If we need to add another argument to this event, we should consider\n    // the fact that the 'op' event has op.src as its 3rd argument\n    this.emit('before op batch', op.op, source);\n\n    // Iteratively apply multi-component remote operations and rollback ops\n    // (source === false) for the default JSON0 OT type. It could use\n    // type.shatter(), but since this code is so specific to use cases for the\n    // JSON0 type and ShareDB explicitly bundles the default type, we might as\n    // well write it this way and save needing to iterate through the op\n    // components twice.\n    //\n    // Ideally, we would not need this extra complexity. However, it is\n    // helpful for implementing bindings that update DOM nodes and other\n    // stateful objects by translating op events directly into corresponding\n    // mutations. Such bindings are most easily written as responding to\n    // individual op components one at a time in order, and it is important\n    // that the snapshot only include updates from the particular op component\n    // at the time of emission. Eliminating this would require rethinking how\n    // such external bindings are implemented.\n    if (!source && this.type === types.defaultType && op.op.length > 1) {\n      if (!this.applyStack) this.applyStack = [];\n      var stackLength = this.applyStack.length;\n      for (var i = 0; i < op.op.length; i++) {\n        var component = op.op[i];\n        var componentOp = {op: [component]};\n        // Transform componentOp against any ops that have been submitted\n        // sychronously inside of an op event handler since we began apply of\n        // our operation\n        for (var j = stackLength; j < this.applyStack.length; j++) {\n          var transformErr = transformX(this.applyStack[j], componentOp);\n          if (transformErr) return this._hardRollback(transformErr);\n        }\n        // Apply the individual op component\n        this.emit('before op', componentOp.op, source, op.src);\n        this.data = this.type.apply(this.data, componentOp.op);\n        this.emit('op', componentOp.op, source, op.src);\n      }\n      this.emit('op batch', op.op, source);\n      // Pop whatever was submitted since we started applying this op\n      this._popApplyStack(stackLength);\n      return;\n    }\n\n    // The 'before op' event enables clients to pull any necessary data out of\n    // the snapshot before it gets changed\n    this.emit('before op', op.op, source, op.src);\n    // Apply the operation to the local data, mutating it in place\n    this.data = this.type.apply(this.data, op.op);\n    // Emit an 'op' event once the local data includes the changes from the\n    // op. For locally submitted ops, this will be synchronously with\n    // submission and before the server or other clients have received the op.\n    // For ops from other clients, this will be after the op has been\n    // committed to the database and published\n    this.emit('op', op.op, source, op.src);\n    this.emit('op batch', op.op, source);\n    return;\n  }\n\n  if (op.create) {\n    this._setType(op.create.type);\n    this.data = (this.type.deserialize) ?\n      (this.type.createDeserialized) ?\n        this.type.createDeserialized(op.create.data) :\n        this.type.deserialize(this.type.create(op.create.data)) :\n      this.type.create(op.create.data);\n    this.emit('create', source);\n    return;\n  }\n\n  if (op.del) {\n    var oldData = this.data;\n    this._setType(null);\n    this.emit('del', oldData, source);\n    return;\n  }\n};\n\n\n// ***** Sending operations\n\n// Actually send op to the server.\nDoc.prototype._sendOp = function() {\n  if (!this.connection.canSend) return;\n  var src = this.connection.id;\n\n  // When there is no inflightOp, send the first item in pendingOps. If\n  // there is inflightOp, try sending it again\n  if (!this.inflightOp) {\n    // Send first pending op\n    this.inflightOp = this.pendingOps.shift();\n  }\n  var op = this.inflightOp;\n  if (!op) {\n    var err = new ShareDBError(ERROR_CODE.ERR_INFLIGHT_OP_MISSING, 'No op to send on call to _sendOp');\n    return this.emit('error', err);\n  }\n\n  // Track data for retrying ops\n  op.sentAt = Date.now();\n  op.retries = (op.retries == null) ? 0 : op.retries + 1;\n\n  // The src + seq number is a unique ID representing this operation. This tuple\n  // is used on the server to detect when ops have been sent multiple times and\n  // on the client to match acknowledgement of an op back to the inflightOp.\n  // Note that the src could be different from this.connection.id after a\n  // reconnect, since an op may still be pending after the reconnection and\n  // this.connection.id will change. In case an op is sent multiple times, we\n  // also need to be careful not to override the original seq value.\n  if (op.seq == null) {\n    if (this.connection.seq >= util.MAX_SAFE_INTEGER) {\n      return this.emit('error', new ShareDBError(\n        ERROR_CODE.ERR_CONNECTION_SEQ_INTEGER_OVERFLOW,\n        'Connection seq has exceeded the max safe integer, maybe from being open for too long'\n      ));\n    }\n\n    op.seq = this.connection.seq++;\n  }\n\n  this.connection.sendOp(this, op);\n\n  // src isn't needed on the first try, since the server session will have the\n  // same id, but it must be set on the inflightOp in case it is sent again\n  // after a reconnect and the connection's id has changed by then\n  if (op.src == null) op.src = src;\n};\n\n\n// Queues the operation for submission to the server and applies it locally.\n//\n// Internal method called to do the actual work for submit(), create() and del().\n// @private\n//\n// @param op\n// @param [op.op]\n// @param [op.del]\n// @param [op.create]\n// @param [callback] called when operation is submitted\nDoc.prototype._submit = function(op, source, callback) {\n  // Locally submitted ops must always have a truthy source\n  if (!source) source = true;\n\n  // The op contains either op, create, delete, or none of the above (a no-op).\n  if ('op' in op) {\n    if (!this.type) {\n      var err = new ShareDBError(\n        ERROR_CODE.ERR_DOC_DOES_NOT_EXIST,\n        'Cannot submit op. Document has not been created. ' + this.collection + '.' + this.id\n      );\n      if (callback) return callback(err);\n      return this.emit('error', err);\n    }\n    // Try to normalize the op. This removes trailing skip:0's and things like that.\n    if (this.type.normalize) op.op = this.type.normalize(op.op);\n  }\n\n  try {\n    this._pushOp(op, source, callback);\n    this._otApply(op, source);\n  } catch (error) {\n    return this._hardRollback(error);\n  }\n\n  // The call to flush is delayed so if submit() is called multiple times\n  // synchronously, all the ops are combined before being sent to the server.\n  var doc = this;\n  util.nextTick(function() {\n    doc.flush();\n  });\n};\n\nDoc.prototype._pushOp = function(op, source, callback) {\n  op.source = source;\n  if (this.applyStack) {\n    // If we are in the process of incrementally applying an operation, don't\n    // compose the op and push it onto the applyStack so it can be transformed\n    // against other components from the op or ops being applied\n    this.applyStack.push(op);\n  } else {\n    // If the type supports composes, try to compose the operation onto the\n    // end of the last pending operation.\n    var composed = this._tryCompose(op);\n    if (composed) {\n      composed.callbacks.push(callback);\n      return;\n    }\n  }\n  // Push on to the pendingOps queue of ops to submit if we didn't compose\n  op.type = this.type;\n  op.callbacks = [callback];\n  this.pendingOps.push(op);\n};\n\nDoc.prototype._popApplyStack = function(to) {\n  if (to > 0) {\n    this.applyStack.length = to;\n    return;\n  }\n  // Once we have completed the outermost apply loop, reset to null and no\n  // longer add ops to the applyStack as they are submitted\n  var op = this.applyStack[0];\n  this.applyStack = null;\n  if (!op) return;\n  // Compose the ops added since the beginning of the apply stack, since we\n  // had to skip compose when they were originally pushed\n  var i = this.pendingOps.indexOf(op);\n  if (i === -1) return;\n  var ops = this.pendingOps.splice(i);\n  for (var i = 0; i < ops.length; i++) {\n    var op = ops[i];\n    var composed = this._tryCompose(op);\n    if (composed) {\n      composed.callbacks = composed.callbacks.concat(op.callbacks);\n    } else {\n      this.pendingOps.push(op);\n    }\n  }\n};\n\n// Try to compose a submitted op into the last pending op. Returns the\n// composed op if it succeeds, undefined otherwise\nDoc.prototype._tryCompose = function(op) {\n  if (this.preventCompose) return;\n\n  // We can only compose into the last pending op. Inflight ops have already\n  // been sent to the server, so we can't modify them\n  var last = this.pendingOps[this.pendingOps.length - 1];\n  if (!last || last.sentAt) return;\n\n  // If we're submitting the op source, we can only combine ops that have\n  // a matching source\n  if (this.submitSource && !deepEqual(op.source, last.source)) return;\n\n  // Compose an op into a create by applying it. This effectively makes the op\n  // invisible, as if the document were created including the op originally\n  if (last.create && 'op' in op) {\n    last.create.data = this.type.apply(last.create.data, op.op);\n    return last;\n  }\n\n  // Compose two ops into a single op if supported by the type. Types that\n  // support compose must be able to compose any two ops together\n  if ('op' in last && 'op' in op && this.type.compose) {\n    last.op = this.type.compose(last.op, op.op);\n    return last;\n  }\n};\n\n// *** Client OT entrypoints.\n\n// Submit an operation to the document.\n//\n// @param operation handled by the OT type\n// @param options  {source: ...}\n// @param [callback] called after operation submitted\n//\n// @fires before op, op, after op\nDoc.prototype.submitOp = function(component, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  var op = {op: component};\n  var source = options && options.source;\n  this._submit(op, source, callback);\n};\n\n// Create the document, which in ShareJS semantics means to set its type. Every\n// object implicitly exists in the database but has no data and no type. Create\n// sets the type of the object and can optionally set some initial data on the\n// object, depending on the type.\n//\n// @param data  initial\n// @param type  OT type\n// @param options  {source: ...}\n// @param callback  called when operation submitted\nDoc.prototype.create = function(data, type, options, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    options = null;\n    type = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  if (!type) {\n    type = types.defaultType.uri;\n  }\n  if (this.type) {\n    var err = new ShareDBError(ERROR_CODE.ERR_DOC_ALREADY_CREATED, 'Document already exists');\n    if (callback) return callback(err);\n    return this.emit('error', err);\n  }\n  var op = {create: {type: type, data: data}};\n  var source = options && options.source;\n  this._submit(op, source, callback);\n};\n\n// Delete the document. This creates and submits a delete operation to the\n// server. Deleting resets the object's type to null and deletes its data. The\n// document still exists, and still has the version it used to have before you\n// deleted it (well, old version +1).\n//\n// @param options  {source: ...}\n// @param callback  called when operation submitted\nDoc.prototype.del = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  if (!this.type) {\n    var err = new ShareDBError(ERROR_CODE.ERR_DOC_DOES_NOT_EXIST, 'Document does not exist');\n    if (callback) return callback(err);\n    return this.emit('error', err);\n  }\n  var op = {del: true};\n  var source = options && options.source;\n  this._submit(op, source, callback);\n};\n\n\n// Stops the document from sending any operations to the server.\nDoc.prototype.pause = function() {\n  this.paused = true;\n};\n\n// Continue sending operations to the server\nDoc.prototype.resume = function() {\n  this.paused = false;\n  this.flush();\n};\n\n// *** Receiving operations\n\n// This is called when the server acknowledges an operation from the client.\nDoc.prototype._opAcknowledged = function(message) {\n  if (this.inflightOp.create) {\n    this.version = message.v;\n  } else if (message.v !== this.version) {\n    // We should already be at the same version, because the server should\n    // have sent all the ops that have happened before acknowledging our op\n    logger.warn('Invalid version from server. Expected: ' + this.version + ' Received: ' + message.v, message);\n\n    // Fetching should get us back to a working document state\n    return this.fetch();\n  }\n\n  // The op was committed successfully. Increment the version number\n  this.version++;\n\n  this._clearInflightOp();\n};\n\nDoc.prototype._rollback = function(err) {\n  // The server has rejected submission of the current operation. Invert by\n  // just the inflight op if possible. If not possible to invert, cancel all\n  // pending ops and fetch the latest from the server to get us back into a\n  // working state, then call back\n  var op = this.inflightOp;\n\n  if ('op' in op && op.type.invert) {\n    op.op = op.type.invert(op.op);\n\n    // Transform the undo operation by any pending ops.\n    for (var i = 0; i < this.pendingOps.length; i++) {\n      var transformErr = transformX(this.pendingOps[i], op);\n      if (transformErr) return this._hardRollback(transformErr);\n    }\n\n    // ... and apply it locally, reverting the changes.\n    //\n    // This operation is applied to look like it comes from a remote source.\n    // I'm still not 100% sure about this functionality, because its really a\n    // local op. Basically, the problem is that if the client's op is rejected\n    // by the server, the editor window should update to reflect the undo.\n    try {\n      this._otApply(op, false);\n    } catch (error) {\n      return this._hardRollback(error);\n    }\n\n    this._clearInflightOp(err);\n    return;\n  }\n\n  this._hardRollback(err);\n};\n\nDoc.prototype._hardRollback = function(err) {\n  // Store pending ops so that we can notify their callbacks of the error.\n  // We combine the inflight op and the pending ops, because it's possible\n  // to hit a condition where we have no inflight op, but we do have pending\n  // ops. This can happen when an invalid op is submitted, which causes us\n  // to hard rollback before the pending op was flushed.\n  var pendingOps = [];\n  if (this.inflightOp) pendingOps.push(this.inflightOp);\n  pendingOps = pendingOps.concat(this.pendingOps);\n\n  // Cancel all pending ops and reset if we can't invert\n  this._setType(null);\n  this.version = null;\n  this.inflightOp = null;\n  this.pendingOps = [];\n\n  // Fetch the latest version from the server to get us back into a working state\n  var doc = this;\n  this.fetch(function() {\n    // We want to check that no errors are swallowed, so we check that:\n    // - there are callbacks to call, and\n    // - that every single pending op called a callback\n    // If there are no ops queued, or one of them didn't handle the error,\n    // then we emit the error.\n    var allOpsHadCallbacks = !!pendingOps.length;\n    for (var i = 0; i < pendingOps.length; i++) {\n      allOpsHadCallbacks = util.callEach(pendingOps[i].callbacks, err) && allOpsHadCallbacks;\n    }\n    if (err && !allOpsHadCallbacks) return doc.emit('error', err);\n  });\n};\n\nDoc.prototype._clearInflightOp = function(err) {\n  var inflightOp = this.inflightOp;\n\n  this.inflightOp = null;\n\n  var called = util.callEach(inflightOp.callbacks, err);\n\n  this.flush();\n  this._emitNothingPending();\n\n  if (err && !called) return this.emit('error', err);\n};\n","exports.Connection = require('./connection');\nexports.Doc = require('./doc');\nexports.Error = require('../error');\nexports.Query = require('./query');\nexports.types = require('../types');\nexports.logger = require('../logger');\n","var Presence = require('./presence');\nvar LocalDocPresence = require('./local-doc-presence');\nvar RemoteDocPresence = require('./remote-doc-presence');\n\nfunction DocPresence(connection, collection, id) {\n  var channel = DocPresence.channel(collection, id);\n  Presence.call(this, connection, channel);\n\n  this.collection = collection;\n  this.id = id;\n}\nmodule.exports = DocPresence;\n\nDocPresence.prototype = Object.create(Presence.prototype);\n\nDocPresence.channel = function(collection, id) {\n  return collection + '.' + id;\n};\n\nDocPresence.prototype._createLocalPresence = function(id) {\n  return new LocalDocPresence(this, id);\n};\n\nDocPresence.prototype._createRemotePresence = function(id) {\n  return new RemoteDocPresence(this, id);\n};\n","var LocalPresence = require('./local-presence');\nvar ShareDBError = require('../../error');\nvar util = require('../../util');\nvar ERROR_CODE = ShareDBError.CODES;\n\nmodule.exports = LocalDocPresence;\nfunction LocalDocPresence(presence, presenceId) {\n  LocalPresence.call(this, presence, presenceId);\n\n  this.collection = this.presence.collection;\n  this.id = this.presence.id;\n\n  this._doc = this.connection.get(this.collection, this.id);\n  this._isSending = false;\n\n  this._opHandler = this._transformAgainstOp.bind(this);\n  this._createOrDelHandler = this._handleCreateOrDel.bind(this);\n  this._loadHandler = this._handleLoad.bind(this);\n  this._destroyHandler = this.destroy.bind(this);\n  this._registerWithDoc();\n}\n\nLocalDocPresence.prototype = Object.create(LocalPresence.prototype);\n\nLocalDocPresence.prototype.submit = function(value, callback) {\n  if (!this._doc.type) {\n    // If the Doc hasn't been created, we already assume all presence to\n    // be null. Let's early return, instead of error since this is a harmless\n    // no-op\n    if (value === null) return this._callbackOrEmit(null, callback);\n    var error = {\n      code: ERROR_CODE.ERR_DOC_DOES_NOT_EXIST,\n      message: 'Cannot submit presence. Document has not been created'\n    };\n    return this._callbackOrEmit(error, callback);\n  };\n\n  LocalPresence.prototype.submit.call(this, value, callback);\n};\n\nLocalDocPresence.prototype.destroy = function(callback) {\n  this._doc.removeListener('op', this._opHandler);\n  this._doc.removeListener('create', this._createOrDelHandler);\n  this._doc.removeListener('del', this._createOrDelHandler);\n  this._doc.removeListener('load', this._loadHandler);\n  this._doc.removeListener('destroy', this._destroyHandler);\n\n  LocalPresence.prototype.destroy.call(this, callback);\n};\n\nLocalDocPresence.prototype._sendPending = function() {\n  if (this._isSending) return;\n  this._isSending = true;\n  var presence = this;\n  this._doc.whenNothingPending(function() {\n    presence._isSending = false;\n    if (!presence.connection.canSend) return;\n\n    presence._pendingMessages.forEach(function(message) {\n      message.t = presence._doc.type.uri;\n      message.v = presence._doc.version;\n      presence.connection.send(message);\n    });\n\n    presence._pendingMessages = [];\n  });\n};\n\nLocalDocPresence.prototype._registerWithDoc = function() {\n  this._doc.on('op', this._opHandler);\n  this._doc.on('create', this._createOrDelHandler);\n  this._doc.on('del', this._createOrDelHandler);\n  this._doc.on('load', this._loadHandler);\n  this._doc.on('destroy', this._destroyHandler);\n};\n\nLocalDocPresence.prototype._transformAgainstOp = function(op, source) {\n  var presence = this;\n  this._pendingMessages.forEach(function(message) {\n    try {\n      message.p = presence._transformPresence(message.p, op, source);\n    } catch (error) {\n      var callback = presence._getCallback(message.pv);\n      presence._callbackOrEmit(error, callback);\n    }\n  });\n\n  try {\n    this.value = this._transformPresence(this.value, op, source);\n  } catch (error) {\n    this.emit('error', error);\n  }\n};\n\nLocalDocPresence.prototype._handleCreateOrDel = function() {\n  this._pendingMessages.forEach(function(message) {\n    message.p = null;\n  });\n\n  this.value = null;\n};\n\nLocalDocPresence.prototype._handleLoad = function() {\n  this.value = null;\n  this._pendingMessages = [];\n};\n\nLocalDocPresence.prototype._message = function() {\n  var message = LocalPresence.prototype._message.call(this);\n  message.c = this.collection,\n  message.d = this.id,\n  message.v = null;\n  message.t = null;\n  return message;\n};\n\nLocalDocPresence.prototype._transformPresence = function(value, op, source) {\n  var type = this._doc.type;\n  if (!util.supportsPresence(type)) {\n    throw new ShareDBError(\n      ERROR_CODE.ERR_TYPE_DOES_NOT_SUPPORT_PRESENCE,\n      'Type does not support presence: ' + type.name\n    );\n  }\n  return type.transformPresence(value, op, source);\n};\n","var emitter = require('../../emitter');\nvar util = require('../../util');\n\nmodule.exports = LocalPresence;\nfunction LocalPresence(presence, presenceId) {\n  emitter.EventEmitter.call(this);\n\n  if (!presenceId || typeof presenceId !== 'string') {\n    throw new Error('LocalPresence presenceId must be a string');\n  }\n\n  this.presence = presence;\n  this.presenceId = presenceId;\n  this.connection = presence.connection;\n  this.presenceVersion = 0;\n\n  this.value = null;\n\n  this._pendingMessages = [];\n  this._callbacksByPresenceVersion = {};\n}\nemitter.mixin(LocalPresence);\n\nLocalPresence.prototype.submit = function(value, callback) {\n  this.value = value;\n  this.send(callback);\n};\n\nLocalPresence.prototype.send = function(callback) {\n  var message = this._message();\n  this._pendingMessages.push(message);\n  this._callbacksByPresenceVersion[message.pv] = callback;\n  this._sendPending();\n};\n\nLocalPresence.prototype.destroy = function(callback) {\n  var presence = this;\n  this.submit(null, function(error) {\n    if (error) return presence._callbackOrEmit(error, callback);\n    delete presence.presence.localPresences[presence.presenceId];\n    if (callback) callback();\n  });\n};\n\nLocalPresence.prototype._sendPending = function() {\n  if (!this.connection.canSend) return;\n  var presence = this;\n  this._pendingMessages.forEach(function(message) {\n    presence.connection.send(message);\n  });\n\n  this._pendingMessages = [];\n};\n\nLocalPresence.prototype._ack = function(error, presenceVersion) {\n  var callback = this._getCallback(presenceVersion);\n  this._callbackOrEmit(error, callback);\n};\n\nLocalPresence.prototype._message = function() {\n  return {\n    a: 'p',\n    ch: this.presence.channel,\n    id: this.presenceId,\n    p: this.value,\n    pv: this.presenceVersion++\n  };\n};\n\nLocalPresence.prototype._getCallback = function(presenceVersion) {\n  var callback = this._callbacksByPresenceVersion[presenceVersion];\n  delete this._callbacksByPresenceVersion[presenceVersion];\n  return callback;\n};\n\nLocalPresence.prototype._callbackOrEmit = function(error, callback) {\n  if (callback) return util.nextTick(callback, error);\n  if (error) this.emit('error', error);\n};\n","var emitter = require('../../emitter');\nvar LocalPresence = require('./local-presence');\nvar RemotePresence = require('./remote-presence');\nvar util = require('../../util');\nvar async = require('async');\nvar hat = require('hat');\n\nmodule.exports = Presence;\nfunction Presence(connection, channel) {\n  emitter.EventEmitter.call(this);\n\n  if (!channel || typeof channel !== 'string') {\n    throw new Error('Presence channel must be provided');\n  }\n\n  this.connection = connection;\n  this.channel = channel;\n\n  this.wantSubscribe = false;\n  this.subscribed = false;\n  this.remotePresences = {};\n  this.localPresences = {};\n\n  this._remotePresenceInstances = {};\n  this._subscriptionCallbacksBySeq = {};\n}\nemitter.mixin(Presence);\n\nPresence.prototype.subscribe = function(callback) {\n  this._sendSubscriptionAction(true, callback);\n};\n\nPresence.prototype.unsubscribe = function(callback) {\n  this._sendSubscriptionAction(false, callback);\n};\n\nPresence.prototype.create = function(id) {\n  id = id || hat();\n  var localPresence = this._createLocalPresence(id);\n  this.localPresences[id] = localPresence;\n  return localPresence;\n};\n\nPresence.prototype.destroy = function(callback) {\n  var presence = this;\n  this.unsubscribe(function(error) {\n    if (error) return presence._callbackOrEmit(error, callback);\n    var localIds = Object.keys(presence.localPresences);\n    var remoteIds = Object.keys(presence._remotePresenceInstances);\n    async.parallel(\n      [\n        function(next) {\n          async.each(localIds, function(presenceId, next) {\n            presence.localPresences[presenceId].destroy(next);\n          }, next);\n        },\n        function(next) {\n          async.each(remoteIds, function(presenceId, next) {\n            presence._remotePresenceInstances[presenceId].destroy(next);\n          }, next);\n        }\n      ],\n      function(error) {\n        delete presence.connection._presences[presence.channel];\n        presence._callbackOrEmit(error, callback);\n      }\n    );\n  });\n};\n\nPresence.prototype._sendSubscriptionAction = function(wantSubscribe, callback) {\n  this.wantSubscribe = !!wantSubscribe;\n  var action = this.wantSubscribe ? 'ps' : 'pu';\n  var seq = this.connection._presenceSeq++;\n  this._subscriptionCallbacksBySeq[seq] = callback;\n  if (this.connection.canSend) {\n    this.connection._sendPresenceAction(action, seq, this);\n  }\n};\n\nPresence.prototype._handleSubscribe = function(error, seq) {\n  if (this.wantSubscribe) this.subscribed = true;\n  var callback = this._subscriptionCallback(seq);\n  this._callbackOrEmit(error, callback);\n};\n\nPresence.prototype._handleUnsubscribe = function(error, seq) {\n  this.subscribed = false;\n  var callback = this._subscriptionCallback(seq);\n  this._callbackOrEmit(error, callback);\n};\n\nPresence.prototype._receiveUpdate = function(error, message) {\n  var localPresence = util.dig(this.localPresences, message.id);\n  if (localPresence) return localPresence._ack(error, message.pv);\n\n  if (error) return this.emit('error', error);\n  var presence = this;\n  var remotePresence = util.digOrCreate(this._remotePresenceInstances, message.id, function() {\n    return presence._createRemotePresence(message.id);\n  });\n\n  remotePresence.receiveUpdate(message);\n};\n\nPresence.prototype._updateRemotePresence = function(remotePresence) {\n  this.remotePresences[remotePresence.presenceId] = remotePresence.value;\n  if (remotePresence.value === null) this._removeRemotePresence(remotePresence.presenceId);\n  this.emit('receive', remotePresence.presenceId, remotePresence.value);\n};\n\nPresence.prototype._broadcastAllLocalPresence = function(error) {\n  if (error) return this.emit('error', error);\n  for (var id in this.localPresences) {\n    var localPresence = this.localPresences[id];\n    if (localPresence.value !== null) localPresence.send();\n  }\n};\n\nPresence.prototype._removeRemotePresence = function(id) {\n  this._remotePresenceInstances[id].destroy();\n  delete this._remotePresenceInstances[id];\n  delete this.remotePresences[id];\n};\n\nPresence.prototype._onConnectionStateChanged = function() {\n  if (!this.connection.canSend) return;\n  this._resubscribe();\n  for (var id in this.localPresences) {\n    this.localPresences[id]._sendPending();\n  }\n};\n\nPresence.prototype._resubscribe = function() {\n  var callbacks = [];\n  for (var seq in this._subscriptionCallbacksBySeq) {\n    var callback = this._subscriptionCallback(seq);\n    callbacks.push(callback);\n  }\n\n  if (!this.wantSubscribe) return this._callEachOrEmit(callbacks);\n\n  var presence = this;\n  this.subscribe(function(error) {\n    presence._callEachOrEmit(callbacks, error);\n  });\n};\n\nPresence.prototype._subscriptionCallback = function(seq) {\n  var callback = this._subscriptionCallbacksBySeq[seq];\n  delete this._subscriptionCallbacksBySeq[seq];\n  return callback;\n};\n\nPresence.prototype._callbackOrEmit = function(error, callback) {\n  if (callback) return util.nextTick(callback, error);\n  if (error) this.emit('error', error);\n};\n\nPresence.prototype._createLocalPresence = function(id) {\n  return new LocalPresence(this, id);\n};\n\nPresence.prototype._createRemotePresence = function(id) {\n  return new RemotePresence(this, id);\n};\n\nPresence.prototype._callEachOrEmit = function(callbacks, error) {\n  var called = util.callEach(callbacks, error);\n  if (!called && error) this.emit('error', error);\n};\n","var RemotePresence = require('./remote-presence');\nvar ot = require('../../ot');\n\nmodule.exports = RemoteDocPresence;\nfunction RemoteDocPresence(presence, presenceId) {\n  RemotePresence.call(this, presence, presenceId);\n\n  this.collection = this.presence.collection;\n  this.id = this.presence.id;\n  this.src = null;\n  this.presenceVersion = null;\n\n  this._doc = this.connection.get(this.collection, this.id);\n  this._pending = null;\n  this._opCache = null;\n  this._pendingSetPending = false;\n\n  this._opHandler = this._handleOp.bind(this);\n  this._createDelHandler = this._handleCreateDel.bind(this);\n  this._loadHandler = this._handleLoad.bind(this);\n  this._registerWithDoc();\n}\n\nRemoteDocPresence.prototype = Object.create(RemotePresence.prototype);\n\nRemoteDocPresence.prototype.receiveUpdate = function(message) {\n  if (this._pending && message.pv < this._pending.pv) return;\n  this.src = message.src;\n  this._pending = message;\n  this._setPendingPresence();\n};\n\nRemoteDocPresence.prototype.destroy = function(callback) {\n  this._doc.removeListener('op', this._opHandler);\n  this._doc.removeListener('create', this._createDelHandler);\n  this._doc.removeListener('del', this._createDelHandler);\n  this._doc.removeListener('load', this._loadHandler);\n\n  RemotePresence.prototype.destroy.call(this, callback);\n};\n\nRemoteDocPresence.prototype._registerWithDoc = function() {\n  this._doc.on('op', this._opHandler);\n  this._doc.on('create', this._createDelHandler);\n  this._doc.on('del', this._createDelHandler);\n  this._doc.on('load', this._loadHandler);\n};\n\nRemoteDocPresence.prototype._setPendingPresence = function() {\n  if (this._pendingSetPending) return;\n  this._pendingSetPending = true;\n  var presence = this;\n  this._doc.whenNothingPending(function() {\n    presence._pendingSetPending = false;\n    if (!presence._pending) return;\n    if (presence._pending.pv < presence.presenceVersion) return presence._pending = null;\n\n    if (presence._pending.v > presence._doc.version) {\n      return presence._doc.fetch();\n    }\n\n    if (!presence._catchUpStalePresence()) return;\n\n    presence.value = presence._pending.p;\n    presence.presenceVersion = presence._pending.pv;\n    presence._pending = null;\n    presence.presence._updateRemotePresence(presence);\n  });\n};\n\nRemoteDocPresence.prototype._handleOp = function(op, source, connectionId) {\n  var isOwnOp = connectionId === this.src;\n  this._transformAgainstOp(op, isOwnOp);\n  this._cacheOp(op, isOwnOp);\n  this._setPendingPresence();\n};\n\nRemotePresence.prototype._handleCreateDel = function() {\n  this._cacheOp(null);\n  this._setPendingPresence();\n};\n\nRemotePresence.prototype._handleLoad = function() {\n  this.value = null;\n  this._pending = null;\n  this._opCache = null;\n  this.presence._updateRemotePresence(this);\n};\n\nRemoteDocPresence.prototype._transformAgainstOp = function(op, isOwnOp) {\n  if (!this.value) return;\n\n  try {\n    this.value = this._doc.type.transformPresence(this.value, op, isOwnOp);\n  } catch (error) {\n    return this.presence.emit('error', error);\n  }\n  this.presence._updateRemotePresence(this);\n};\n\nRemoteDocPresence.prototype._catchUpStalePresence = function() {\n  if (this._pending.v >= this._doc.version) return true;\n\n  if (!this._opCache) {\n    this._startCachingOps();\n    this._doc.fetch();\n    // We're already subscribed, but we send another subscribe message\n    // to force presence updates from other clients\n    this.presence.subscribe();\n    return false;\n  }\n\n  while (this._opCache[this._pending.v]) {\n    var item = this._opCache[this._pending.v];\n    var op = item.op;\n    var isOwnOp = item.isOwnOp;\n    // We use a null op to signify a create or a delete operation. In both\n    // cases we just want to reset the presence (which doesn't make sense\n    // in a new document), so just set the presence to null.\n    if (op === null) {\n      this._pending.p = null;\n      this._pending.v++;\n    } else {\n      ot.transformPresence(this._pending, op, isOwnOp);\n    }\n  }\n\n  var hasCaughtUp = this._pending.v >= this._doc.version;\n  if (hasCaughtUp) {\n    this._stopCachingOps();\n  }\n\n  return hasCaughtUp;\n};\n\nRemoteDocPresence.prototype._startCachingOps = function() {\n  this._opCache = [];\n};\n\nRemoteDocPresence.prototype._stopCachingOps = function() {\n  this._opCache = null;\n};\n\nRemoteDocPresence.prototype._cacheOp = function(op, isOwnOp) {\n  if (this._opCache) {\n    op = op ? {op: op} : null;\n    // Subtract 1 from the current doc version, because an op with v3\n    // should be read as the op that takes a doc from v3 -> v4\n    this._opCache[this._doc.version - 1] = {op: op, isOwnOp: isOwnOp};\n  }\n};\n","var util = require('../../util');\n\nmodule.exports = RemotePresence;\nfunction RemotePresence(presence, presenceId) {\n  this.presence = presence;\n  this.presenceId = presenceId;\n  this.connection = this.presence.connection;\n\n  this.value = null;\n  this.presenceVersion = 0;\n}\n\nRemotePresence.prototype.receiveUpdate = function(message) {\n  if (message.pv < this.presenceVersion) return;\n  this.value = message.p;\n  this.presenceVersion = message.pv;\n  this.presence._updateRemotePresence(this);\n};\n\nRemotePresence.prototype.destroy = function(callback) {\n  delete this.presence._remotePresenceInstances[this.presenceId];\n  delete this.presence.remotePresences[this.presenceId];\n  if (callback) util.nextTick(callback);\n};\n","var emitter = require('../emitter');\nvar util = require('../util');\n\n// Queries are live requests to the database for particular sets of fields.\n//\n// The server actively tells the client when there's new data that matches\n// a set of conditions.\nmodule.exports = Query;\nfunction Query(action, connection, id, collection, query, options, callback) {\n  emitter.EventEmitter.call(this);\n\n  // 'qf' or 'qs'\n  this.action = action;\n\n  this.connection = connection;\n  this.id = id;\n  this.collection = collection;\n\n  // The query itself. For mongo, this should look something like {\"data.x\":5}\n  this.query = query;\n\n  // A list of resulting documents. These are actual documents, complete with\n  // data and all the rest. It is possible to pass in an initial results set,\n  // so that a query can be serialized and then re-established\n  this.results = null;\n  if (options && options.results) {\n    this.results = options.results;\n    delete options.results;\n  }\n  this.extra = undefined;\n\n  // Options to pass through with the query\n  this.options = options;\n\n  this.callback = callback;\n  this.ready = false;\n  this.sent = false;\n}\nemitter.mixin(Query);\n\nQuery.prototype.hasPending = function() {\n  return !this.ready;\n};\n\n// Helper for subscribe & fetch, since they share the same message format.\n//\n// This function actually issues the query.\nQuery.prototype.send = function() {\n  if (!this.connection.canSend) return;\n\n  var message = {\n    a: this.action,\n    id: this.id,\n    c: this.collection,\n    q: this.query\n  };\n  if (this.options) {\n    message.o = this.options;\n  }\n  if (this.results) {\n    // Collect the version of all the documents in the current result set so we\n    // don't need to be sent their snapshots again.\n    var results = [];\n    for (var i = 0; i < this.results.length; i++) {\n      var doc = this.results[i];\n      results.push([doc.id, doc.version]);\n    }\n    message.r = results;\n  }\n\n  this.connection.send(message);\n  this.sent = true;\n};\n\n// Destroy the query object. Any subsequent messages for the query will be\n// ignored by the connection.\nQuery.prototype.destroy = function(callback) {\n  if (this.connection.canSend && this.action === 'qs') {\n    this.connection.send({a: 'qu', id: this.id});\n  }\n  this.connection._destroyQuery(this);\n  // There is a callback for consistency, but we don't actually wait for the\n  // server's unsubscribe message currently\n  if (callback) util.nextTick(callback);\n};\n\nQuery.prototype._onConnectionStateChanged = function() {\n  if (this.connection.canSend && !this.sent) {\n    this.send();\n  } else {\n    this.sent = false;\n  }\n};\n\nQuery.prototype._handleFetch = function(err, data, extra) {\n  // Once a fetch query gets its data, it is destroyed.\n  this.connection._destroyQuery(this);\n  this._handleResponse(err, data, extra);\n};\n\nQuery.prototype._handleSubscribe = function(err, data, extra) {\n  this._handleResponse(err, data, extra);\n};\n\nQuery.prototype._handleResponse = function(err, data, extra) {\n  var callback = this.callback;\n  this.callback = null;\n  if (err) return this._finishResponse(err, callback);\n  if (!data) return this._finishResponse(null, callback);\n\n  var query = this;\n  var wait = 1;\n  var finish = function(err) {\n    if (err) return query._finishResponse(err, callback);\n    if (--wait) return;\n    query._finishResponse(null, callback);\n  };\n\n  if (Array.isArray(data)) {\n    wait += data.length;\n    this.results = this._ingestSnapshots(data, finish);\n    this.extra = extra;\n  } else {\n    for (var id in data) {\n      wait++;\n      var snapshot = data[id];\n      var doc = this.connection.get(snapshot.c || this.collection, id);\n      doc.ingestSnapshot(snapshot, finish);\n    }\n  }\n\n  finish();\n};\n\nQuery.prototype._ingestSnapshots = function(snapshots, finish) {\n  var results = [];\n  for (var i = 0; i < snapshots.length; i++) {\n    var snapshot = snapshots[i];\n    var doc = this.connection.get(snapshot.c || this.collection, snapshot.d);\n    doc.ingestSnapshot(snapshot, finish);\n    results.push(doc);\n  }\n  return results;\n};\n\nQuery.prototype._finishResponse = function(err, callback) {\n  this.emit('ready');\n  this.ready = true;\n  if (err) {\n    this.connection._destroyQuery(this);\n    if (callback) return callback(err);\n    return this.emit('error', err);\n  }\n  if (callback) callback(null, this.results, this.extra);\n};\n\nQuery.prototype._handleError = function(err) {\n  this.emit('error', err);\n};\n\nQuery.prototype._handleDiff = function(diff) {\n  // We need to go through the list twice. First, we'll ingest all the new\n  // documents. After that we'll emit events and actually update our list.\n  // This avoids race conditions around setting documents to be subscribed &\n  // unsubscribing documents in event callbacks.\n  for (var i = 0; i < diff.length; i++) {\n    var d = diff[i];\n    if (d.type === 'insert') d.values = this._ingestSnapshots(d.values);\n  }\n\n  for (var i = 0; i < diff.length; i++) {\n    var d = diff[i];\n    switch (d.type) {\n      case 'insert':\n        var newDocs = d.values;\n        Array.prototype.splice.apply(this.results, [d.index, 0].concat(newDocs));\n        this.emit('insert', newDocs, d.index);\n        break;\n      case 'remove':\n        var howMany = d.howMany || 1;\n        var removed = this.results.splice(d.index, howMany);\n        this.emit('remove', removed, d.index);\n        break;\n      case 'move':\n        var howMany = d.howMany || 1;\n        var docs = this.results.splice(d.from, howMany);\n        Array.prototype.splice.apply(this.results, [d.to, 0].concat(docs));\n        this.emit('move', docs, d.from, d.to);\n        break;\n    }\n  }\n\n  this.emit('changed', this.results);\n};\n\nQuery.prototype._handleExtra = function(extra) {\n  this.extra = extra;\n  this.emit('extra', extra);\n};\n","var Snapshot = require('../../snapshot');\nvar emitter = require('../../emitter');\n\nmodule.exports = SnapshotRequest;\n\nfunction SnapshotRequest(connection, requestId, collection, id, callback) {\n  emitter.EventEmitter.call(this);\n\n  if (typeof callback !== 'function') {\n    throw new Error('Callback is required for SnapshotRequest');\n  }\n\n  this.requestId = requestId;\n  this.connection = connection;\n  this.id = id;\n  this.collection = collection;\n  this.callback = callback;\n\n  this.sent = false;\n}\nemitter.mixin(SnapshotRequest);\n\nSnapshotRequest.prototype.send = function() {\n  if (!this.connection.canSend) {\n    return;\n  }\n\n  this.connection.send(this._message());\n  this.sent = true;\n};\n\nSnapshotRequest.prototype._onConnectionStateChanged = function() {\n  if (this.connection.canSend) {\n    if (!this.sent) this.send();\n  } else {\n    // If the connection can't send, then we've had a disconnection, and even if we've already sent\n    // the request previously, we need to re-send it over this reconnected client, so reset the\n    // sent flag to false.\n    this.sent = false;\n  }\n};\n\nSnapshotRequest.prototype._handleResponse = function(error, message) {\n  this.emit('ready');\n\n  if (error) {\n    return this.callback(error);\n  }\n\n  var metadata = message.meta ? message.meta : null;\n  var snapshot = new Snapshot(this.id, message.v, message.type, message.data, metadata);\n\n  this.callback(null, snapshot);\n};\n","var SnapshotRequest = require('./snapshot-request');\nvar util = require('../../util');\n\nmodule.exports = SnapshotTimestampRequest;\n\nfunction SnapshotTimestampRequest(connection, requestId, collection, id, timestamp, callback) {\n  SnapshotRequest.call(this, connection, requestId, collection, id, callback);\n\n  if (!util.isValidTimestamp(timestamp)) {\n    throw new Error('Snapshot timestamp must be a positive integer or null');\n  }\n\n  this.timestamp = timestamp;\n}\n\nSnapshotTimestampRequest.prototype = Object.create(SnapshotRequest.prototype);\n\nSnapshotTimestampRequest.prototype._message = function() {\n  return {\n    a: 'nt',\n    id: this.requestId,\n    c: this.collection,\n    d: this.id,\n    ts: this.timestamp\n  };\n};\n","var SnapshotRequest = require('./snapshot-request');\nvar util = require('../../util');\n\nmodule.exports = SnapshotVersionRequest;\n\nfunction SnapshotVersionRequest(connection, requestId, collection, id, version, callback) {\n  SnapshotRequest.call(this, connection, requestId, collection, id, callback);\n\n  if (!util.isValidVersion(version)) {\n    throw new Error('Snapshot version must be a positive integer or null');\n  }\n\n  this.version = version;\n}\n\nSnapshotVersionRequest.prototype = Object.create(SnapshotRequest.prototype);\n\nSnapshotVersionRequest.prototype._message = function() {\n  return {\n    a: 'nf',\n    id: this.requestId,\n    c: this.collection,\n    d: this.id,\n    v: this.version\n  };\n};\n","var EventEmitter = require('events').EventEmitter;\n\nexports.EventEmitter = EventEmitter;\nexports.mixin = mixin;\n\nfunction mixin(Constructor) {\n  for (var key in EventEmitter.prototype) {\n    Constructor.prototype[key] = EventEmitter.prototype[key];\n  }\n}\n","function ShareDBError(code, message) {\n  this.code = code;\n  this.message = message || '';\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, ShareDBError);\n  } else {\n    this.stack = new Error().stack;\n  }\n}\n\nShareDBError.prototype = Object.create(Error.prototype);\nShareDBError.prototype.constructor = ShareDBError;\nShareDBError.prototype.name = 'ShareDBError';\n\nShareDBError.CODES = {\n  ERR_APPLY_OP_VERSION_DOES_NOT_MATCH_SNAPSHOT: 'ERR_APPLY_OP_VERSION_DOES_NOT_MATCH_SNAPSHOT',\n  ERR_APPLY_SNAPSHOT_NOT_PROVIDED: 'ERR_APPLY_SNAPSHOT_NOT_PROVIDED',\n  ERR_CLIENT_ID_BADLY_FORMED: 'ERR_CLIENT_ID_BADLY_FORMED',\n  ERR_CONNECTION_SEQ_INTEGER_OVERFLOW: 'ERR_CONNECTION_SEQ_INTEGER_OVERFLOW',\n  ERR_CONNECTION_STATE_TRANSITION_INVALID: 'ERR_CONNECTION_STATE_TRANSITION_INVALID',\n  ERR_DATABASE_ADAPTER_NOT_FOUND: 'ERR_DATABASE_ADAPTER_NOT_FOUND',\n  ERR_DATABASE_DOES_NOT_SUPPORT_SUBSCRIBE: 'ERR_DATABASE_DOES_NOT_SUPPORT_SUBSCRIBE',\n  ERR_DATABASE_METHOD_NOT_IMPLEMENTED: 'ERR_DATABASE_METHOD_NOT_IMPLEMENTED',\n  ERR_DEFAULT_TYPE_MISMATCH: 'ERR_DEFAULT_TYPE_MISMATCH',\n  ERR_DOC_MISSING_VERSION: 'ERR_DOC_MISSING_VERSION',\n  ERR_DOC_ALREADY_CREATED: 'ERR_DOC_ALREADY_CREATED',\n  ERR_DOC_DOES_NOT_EXIST: 'ERR_DOC_DOES_NOT_EXIST',\n  ERR_DOC_TYPE_NOT_RECOGNIZED: 'ERR_DOC_TYPE_NOT_RECOGNIZED',\n  ERR_DOC_WAS_DELETED: 'ERR_DOC_WAS_DELETED',\n  ERR_INFLIGHT_OP_MISSING: 'ERR_INFLIGHT_OP_MISSING',\n  ERR_INGESTED_SNAPSHOT_HAS_NO_VERSION: 'ERR_INGESTED_SNAPSHOT_HAS_NO_VERSION',\n  ERR_MAX_SUBMIT_RETRIES_EXCEEDED: 'ERR_MAX_SUBMIT_RETRIES_EXCEEDED',\n  ERR_MESSAGE_BADLY_FORMED: 'ERR_MESSAGE_BADLY_FORMED',\n  ERR_MILESTONE_ARGUMENT_INVALID: 'ERR_MILESTONE_ARGUMENT_INVALID',\n  ERR_OP_ALREADY_SUBMITTED: 'ERR_OP_ALREADY_SUBMITTED',\n  ERR_OP_NOT_ALLOWED_IN_PROJECTION: 'ERR_OP_NOT_ALLOWED_IN_PROJECTION',\n  ERR_OP_SUBMIT_REJECTED: 'ERR_OP_SUBMIT_REJECTED',\n  ERR_OP_VERSION_MISMATCH_AFTER_TRANSFORM: 'ERR_OP_VERSION_MISMATCH_AFTER_TRANSFORM',\n  ERR_OP_VERSION_MISMATCH_DURING_TRANSFORM: 'ERR_OP_VERSION_MISMATCH_DURING_TRANSFORM',\n  ERR_OP_VERSION_NEWER_THAN_CURRENT_SNAPSHOT: 'ERR_OP_VERSION_NEWER_THAN_CURRENT_SNAPSHOT',\n  ERR_OT_LEGACY_JSON0_OP_CANNOT_BE_NORMALIZED: 'ERR_OT_LEGACY_JSON0_OP_CANNOT_BE_NORMALIZED',\n  ERR_OT_OP_BADLY_FORMED: 'ERR_OT_OP_BADLY_FORMED',\n  ERR_OT_OP_NOT_APPLIED: 'ERR_OT_OP_NOT_APPLIED',\n  ERR_OT_OP_NOT_PROVIDED: 'ERR_OT_OP_NOT_PROVIDED',\n  ERR_PRESENCE_TRANSFORM_FAILED: 'ERR_PRESENCE_TRANSFORM_FAILED',\n  ERR_PROTOCOL_VERSION_NOT_SUPPORTED: 'ERR_PROTOCOL_VERSION_NOT_SUPPORTED',\n  ERR_QUERY_EMITTER_LISTENER_NOT_ASSIGNED: 'ERR_QUERY_EMITTER_LISTENER_NOT_ASSIGNED',\n  /**\n   * A special error that a \"readSnapshots\" middleware implementation can use to indicate that it\n   * wishes for the ShareDB client to treat it as a silent rejection, not passing the error back to\n   * user code.\n   *\n   * For subscribes, the ShareDB client will still cancel the document subscription.\n   */\n  ERR_SNAPSHOT_READ_SILENT_REJECTION: 'ERR_SNAPSHOT_READ_SILENT_REJECTION',\n  /**\n   * A \"readSnapshots\" middleware rejected the reads of specific snapshots.\n   *\n   * This error code is mostly for server use and generally will not be encountered on the client.\n   * Instead, each specific doc that encountered an error will receive its specific error.\n   *\n   * The one exception is for queries, where a \"readSnapshots\" rejection of specific snapshots will\n   * cause the client to receive this error for the whole query, since queries don't support\n   * doc-specific errors.\n   */\n  ERR_SNAPSHOT_READS_REJECTED: 'ERR_SNAPSHOT_READS_REJECTED',\n  ERR_SUBMIT_TRANSFORM_OPS_NOT_FOUND: 'ERR_SUBMIT_TRANSFORM_OPS_NOT_FOUND',\n  ERR_TYPE_CANNOT_BE_PROJECTED: 'ERR_TYPE_CANNOT_BE_PROJECTED',\n  ERR_TYPE_DOES_NOT_SUPPORT_PRESENCE: 'ERR_TYPE_DOES_NOT_SUPPORT_PRESENCE',\n  ERR_UNKNOWN_ERROR: 'ERR_UNKNOWN_ERROR'\n};\n\nmodule.exports = ShareDBError;\n","var Logger = require('./logger');\nvar logger = new Logger();\nmodule.exports = logger;\n","var SUPPORTED_METHODS = [\n  'info',\n  'warn',\n  'error'\n];\n\nfunction Logger() {\n  var defaultMethods = {};\n  SUPPORTED_METHODS.forEach(function(method) {\n    // Deal with Chrome issue: https://bugs.chromium.org/p/chromium/issues/detail?id=179628\n    defaultMethods[method] = console[method].bind(console);\n  });\n  this.setMethods(defaultMethods);\n}\nmodule.exports = Logger;\n\nLogger.prototype.setMethods = function(overrides) {\n  overrides = overrides || {};\n  var logger = this;\n\n  SUPPORTED_METHODS.forEach(function(method) {\n    if (typeof overrides[method] === 'function') {\n      logger[method] = overrides[method];\n    }\n  });\n};\n","// This contains the master OT functions for the database. They look like\n// ot-types style operational transform functions, but they're a bit different.\n// These functions understand versions and can deal with out of bound create &\n// delete operations.\n\nvar types = require('./types');\nvar ShareDBError = require('./error');\nvar util = require('./util');\n\nvar ERROR_CODE = ShareDBError.CODES;\n\n// Returns an error string on failure. Rockin' it C style.\nexports.checkOp = function(op) {\n  if (op == null || typeof op !== 'object') {\n    return new ShareDBError(ERROR_CODE.ERR_OT_OP_BADLY_FORMED, 'Op must be an object');\n  }\n\n  if (op.create != null) {\n    if (typeof op.create !== 'object') {\n      return new ShareDBError(ERROR_CODE.ERR_OT_OP_BADLY_FORMED, 'Create data must be an object');\n    }\n    var typeName = op.create.type;\n    if (typeof typeName !== 'string') {\n      return new ShareDBError(ERROR_CODE.ERR_OT_OP_BADLY_FORMED, 'Missing create type');\n    }\n    var type = types.map[typeName];\n    if (type == null || typeof type !== 'object') {\n      return new ShareDBError(ERROR_CODE.ERR_DOC_TYPE_NOT_RECOGNIZED, 'Unknown type');\n    }\n  } else if (op.del != null) {\n    if (op.del !== true) return new ShareDBError(ERROR_CODE.ERR_OT_OP_BADLY_FORMED, 'del value must be true');\n  } else if (!('op' in op)) {\n    return new ShareDBError(ERROR_CODE.ERR_OT_OP_BADLY_FORMED, 'Missing op, create, or del');\n  }\n\n  if (op.src != null && typeof op.src !== 'string') {\n    return new ShareDBError(ERROR_CODE.ERR_OT_OP_BADLY_FORMED, 'src must be a string');\n  }\n  if (op.seq != null && typeof op.seq !== 'number') {\n    return new ShareDBError(ERROR_CODE.ERR_OT_OP_BADLY_FORMED, 'seq must be a number');\n  }\n  if (\n    (op.src == null && op.seq != null) ||\n    (op.src != null && op.seq == null)\n  ) {\n    return new ShareDBError(ERROR_CODE.ERR_OT_OP_BADLY_FORMED, 'Both src and seq must be set together');\n  }\n\n  if (op.m != null && typeof op.m !== 'object') {\n    return new ShareDBError(ERROR_CODE.ERR_OT_OP_BADLY_FORMED, 'op.m must be an object or null');\n  }\n};\n\n// Takes in a string (type name or URI) and returns the normalized name (uri)\nexports.normalizeType = function(typeName) {\n  return types.map[typeName] && types.map[typeName].uri;\n};\n\n// This is the super apply function that takes in snapshot data (including the\n// type) and edits it in-place. Returns an error or null for success.\nexports.apply = function(snapshot, op) {\n  if (typeof snapshot !== 'object') {\n    return new ShareDBError(ERROR_CODE.ERR_APPLY_SNAPSHOT_NOT_PROVIDED, 'Missing snapshot');\n  }\n  if (snapshot.v != null && op.v != null && snapshot.v !== op.v) {\n    return new ShareDBError(ERROR_CODE.ERR_APPLY_OP_VERSION_DOES_NOT_MATCH_SNAPSHOT, 'Version mismatch');\n  }\n\n  // Create operation\n  if (op.create) {\n    if (snapshot.type) return new ShareDBError(ERROR_CODE.ERR_DOC_ALREADY_CREATED, 'Document already exists');\n\n    // The document doesn't exist, although it might have once existed\n    var create = op.create;\n    var type = types.map[create.type];\n    if (!type) return new ShareDBError(ERROR_CODE.ERR_DOC_TYPE_NOT_RECOGNIZED, 'Unknown type');\n\n    try {\n      snapshot.data = type.create(create.data);\n      snapshot.type = type.uri;\n      snapshot.v++;\n    } catch (err) {\n      return err;\n    }\n\n  // Delete operation\n  } else if (op.del) {\n    snapshot.data = undefined;\n    snapshot.type = null;\n    snapshot.v++;\n\n  // Edit operation\n  } else if ('op' in op) {\n    var err = applyOpEdit(snapshot, op.op);\n    if (err) return err;\n    snapshot.v++;\n\n  // No-op, and we don't have to do anything\n  } else {\n    snapshot.v++;\n  }\n};\n\nfunction applyOpEdit(snapshot, edit) {\n  if (!snapshot.type) return new ShareDBError(ERROR_CODE.ERR_DOC_DOES_NOT_EXIST, 'Document does not exist');\n\n  if (edit === undefined) return new ShareDBError(ERROR_CODE.ERR_OT_OP_NOT_PROVIDED, 'Missing op');\n  var type = types.map[snapshot.type];\n  if (!type) return new ShareDBError(ERROR_CODE.ERR_DOC_TYPE_NOT_RECOGNIZED, 'Unknown type');\n\n  try {\n    snapshot.data = type.apply(snapshot.data, edit);\n  } catch (err) {\n    return new ShareDBError(ERROR_CODE.ERR_OT_OP_NOT_APPLIED, err.message);\n  }\n}\n\nexports.transform = function(type, op, appliedOp) {\n  // There are 16 cases this function needs to deal with - which are all the\n  // combinations of create/delete/op/noop from both op and appliedOp\n  if (op.v != null && op.v !== appliedOp.v) {\n    return new ShareDBError(ERROR_CODE.ERR_OP_VERSION_MISMATCH_DURING_TRANSFORM, 'Version mismatch');\n  }\n\n  if (appliedOp.del) {\n    if (op.create || 'op' in op) {\n      return new ShareDBError(ERROR_CODE.ERR_DOC_WAS_DELETED, 'Document was deleted');\n    }\n  } else if (\n    (appliedOp.create && ('op' in op || op.create || op.del)) ||\n    ('op' in appliedOp && op.create)\n  ) {\n    // If appliedOp.create is not true, appliedOp contains an op - which\n    // also means the document exists remotely.\n    return new ShareDBError(ERROR_CODE.ERR_DOC_ALREADY_CREATED, 'Document was created remotely');\n  } else if ('op' in appliedOp && 'op' in op) {\n    // If we reach here, they both have a .op property.\n    if (!type) return new ShareDBError(ERROR_CODE.ERR_DOC_DOES_NOT_EXIST, 'Document does not exist');\n\n    if (typeof type === 'string') {\n      type = types.map[type];\n      if (!type) return new ShareDBError(ERROR_CODE.ERR_DOC_TYPE_NOT_RECOGNIZED, 'Unknown type');\n    }\n\n    try {\n      op.op = type.transform(op.op, appliedOp.op, 'left');\n    } catch (err) {\n      return err;\n    }\n  }\n\n  if (op.v != null) op.v++;\n};\n\n/**\n * Apply an array of ops to the provided snapshot.\n *\n * @param snapshot - a Snapshot object which will be mutated by the provided ops\n * @param ops - an array of ops to apply to the snapshot\n * @param options - options (currently for internal use only)\n * @return an error object if applicable\n */\nexports.applyOps = function(snapshot, ops, options) {\n  options = options || {};\n  for (var index = 0; index < ops.length; index++) {\n    var op = ops[index];\n    if (options._normalizeLegacyJson0Ops) {\n      try {\n        normalizeLegacyJson0Ops(snapshot, op);\n      } catch (error) {\n        return new ShareDBError(\n          ERROR_CODE.ERR_OT_LEGACY_JSON0_OP_CANNOT_BE_NORMALIZED,\n          'Cannot normalize legacy json0 op'\n        );\n      }\n    }\n    snapshot.v = op.v;\n    var error = exports.apply(snapshot, op);\n    if (error) return error;\n  }\n};\n\nexports.transformPresence = function(presence, op, isOwnOp) {\n  var opError = this.checkOp(op);\n  if (opError) return opError;\n\n  var type = presence.t;\n  if (typeof type === 'string') {\n    type = types.map[type];\n  }\n  if (!type) return {code: ERROR_CODE.ERR_DOC_TYPE_NOT_RECOGNIZED, message: 'Unknown type'};\n  if (!util.supportsPresence(type)) {\n    return {code: ERROR_CODE.ERR_TYPE_DOES_NOT_SUPPORT_PRESENCE, message: 'Type does not support presence'};\n  }\n\n  if (op.create || op.del) {\n    presence.p = null;\n    presence.v++;\n    return;\n  }\n\n  try {\n    presence.p = presence.p === null ?\n      null :\n      type.transformPresence(presence.p, op.op, isOwnOp);\n  } catch (error) {\n    return {code: ERROR_CODE.ERR_PRESENCE_TRANSFORM_FAILED, message: error.message || error};\n  }\n\n  presence.v++;\n};\n\n/**\n * json0 had a breaking change in https://github.com/ottypes/json0/pull/40\n * The change added stricter type checking, which breaks fetchSnapshot()\n * when trying to rebuild a snapshot from old, committed ops that didn't\n * have this stricter validation. This method fixes up legacy ops to\n * pass the stricter validation\n */\nfunction normalizeLegacyJson0Ops(snapshot, json0Op) {\n  if (snapshot.type !== types.defaultType.uri) return;\n  var components = json0Op.op;\n  if (!components) return;\n  for (var i = 0; i < components.length; i++) {\n    var component = components[i];\n    if (typeof component.lm === 'string') component.lm = +component.lm;\n    var path = component.p;\n    var element = snapshot.data;\n    for (var j = 0; j < path.length; j++) {\n      var key = path[j];\n      // https://github.com/ottypes/json0/blob/73db17e86adc5d801951d1a69453b01382e66c7d/lib/json0.js#L21\n      if (Object.prototype.toString.call(element) == '[object Array]') path[j] = +key;\n      // https://github.com/ottypes/json0/blob/73db17e86adc5d801951d1a69453b01382e66c7d/lib/json0.js#L32\n      else if (element.constructor === Object) path[j] = key.toString();\n      element = element[key];\n    }\n  }\n}\n","module.exports = Snapshot;\nfunction Snapshot(id, version, type, data, meta) {\n  this.id = id;\n  this.v = version;\n  this.type = type;\n  this.data = data;\n  this.m = meta;\n}\n","\nexports.defaultType = require('ot-json0').type;\n\nexports.map = {};\n\nexports.register = function(type) {\n  if (type.name) exports.map[type.name] = type;\n  if (type.uri) exports.map[type.uri] = type;\n};\n\nexports.register(exports.defaultType);\n","\nexports.doNothing = doNothing;\nfunction doNothing() {}\n\nexports.hasKeys = function(object) {\n  for (var key in object) return true;\n  return false;\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger#Polyfill\nexports.isInteger = Number.isInteger || function(value) {\n  return typeof value === 'number' &&\n    isFinite(value) &&\n    Math.floor(value) === value;\n};\n\nexports.isValidVersion = function(version) {\n  if (version === null) return true;\n  return exports.isInteger(version) && version >= 0;\n};\n\nexports.isValidTimestamp = function(timestamp) {\n  return exports.isValidVersion(timestamp);\n};\n\nexports.MAX_SAFE_INTEGER = 9007199254740991;\n\nexports.dig = function() {\n  var obj = arguments[0];\n  for (var i = 1; i < arguments.length; i++) {\n    var key = arguments[i];\n    obj = obj[key] || (i === arguments.length - 1 ? undefined : {});\n  }\n  return obj;\n};\n\nexports.digOrCreate = function() {\n  var obj = arguments[0];\n  var createCallback = arguments[arguments.length - 1];\n  for (var i = 1; i < arguments.length - 1; i++) {\n    var key = arguments[i];\n    obj = obj[key] ||\n      (obj[key] = i === arguments.length - 2 ? createCallback() : {});\n  }\n  return obj;\n};\n\nexports.digAndRemove = function() {\n  var obj = arguments[0];\n  var objects = [obj];\n  for (var i = 1; i < arguments.length - 1; i++) {\n    var key = arguments[i];\n    if (!obj.hasOwnProperty(key)) break;\n    obj = obj[key];\n    objects.push(obj);\n  };\n\n  for (var i = objects.length - 1; i >= 0; i--) {\n    var parent = objects[i];\n    var key = arguments[i + 1];\n    var child = parent[key];\n    if (i === objects.length - 1 || !exports.hasKeys(child)) delete parent[key];\n  }\n};\n\nexports.supportsPresence = function(type) {\n  return type && typeof type.transformPresence === 'function';\n};\n\nexports.callEach = function(callbacks, error) {\n  var called = false;\n  callbacks.forEach(function(callback) {\n    if (callback) {\n      callback(error);\n      called = true;\n    }\n  });\n  return called;\n};\n\nexports.truthy = function(arg) {\n  return !!arg;\n};\n\nexports.nextTick = function(callback) {\n  if (typeof process !== 'undefined' && process.nextTick) {\n    return process.nextTick.apply(null, arguments);\n  }\n\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  setTimeout(function() {\n    callback.apply(null, args);\n  });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","/**\n * @since 2021-09-24\n * @author vivaxy\n */\nimport ShareDB from 'sharedb/lib/client';\n\nconst ws = new WebSocket('ws://127.0.0.1:8081/');\nconst connection = new ShareDB.Connection(ws);\nconst doc = connection.get('examples', 'counter');\ndoc.subscribe(render);\ndoc.on('op', render);\n\nconst $value = document.getElementById('value');\nconst $add = document.getElementById('add');\n$add.addEventListener('click', function () {\n  doc.submitOp({ p: ['numClicks'], na: 1 });\n});\n\nfunction render() {\n  $value.textContent = doc.data.numClicks;\n}\n"],"names":["exports","slice","arrayLike","start","newLen","Math","max","length","newArr","Array","idx","apply","fn","args","arguments","callArgs","concat","initialParams","callback","pop","call","this","isObject","value","type","hasSetImmediate","setImmediate","hasNextTick","process","nextTick","fallback","setTimeout","wrap","defer","setImmediate$1","asyncify","func","result","e","then","invokeCallback","err","message","Error","error","rethrow","supportsSymbol","Symbol","isAsync","toStringTag","wrapAsync","asyncFn","applyEach$1","eachfn","fns","go","that","cb","freeGlobal","g","Object","freeSelf","self","root","Function","Symbol$1","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag$1","undefined","nativeObjectToString$1","symToStringTag","baseGetTag","isOwn","tag","unmasked","getRawTag","objectToString","isLength","isArrayLike","isFunction","breakLoop","noop","once","callFn","iteratorSymbol","iterator","isObjectLike","baseIsArguments","objectProto$3","hasOwnProperty$2","propertyIsEnumerable","isArguments","isArray","freeExports","nodeType","freeModule","module","Buffer","isBuffer","reIsUint","isIndex","test","typedArrayTags","freeExports$1","freeModule$1","freeProcess","nodeUtil","require","types","binding","nodeIsTypedArray","isTypedArray","hasOwnProperty$1","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","n","iteratee","index","baseTimes","String","key","push","objectProto$5","nativeKeys","transform","arg","overArg","keys","hasOwnProperty$3","baseKeys","object","Ctor","constructor","coll","i","len","createArrayIterator","obj","okeys","getIterator","item","next","done","createES2015Iterator","onlyOnce","_eachOfLimit","limit","nextElem","running","looping","iterateeCallback","replenish","elem","eachOfLimit","doLimit","iterable","eachOfArrayLike","completed","iteratorCallback","eachOfGeneric","Infinity","eachOf","doParallel","_asyncMap","arr","results","counter","_iteratee","_","v","map","applyEach","doParallelLimit","mapLimit","mapSeries","applyEachSeries","arrayEach","array","fromRight","baseFor","keysFunc","props","baseForOwn","baseIsNaN","baseIndexOf","fromIndex","strictIndexOf","predicate","baseFindIndex","auto","tasks","concurrency","numTasks","runningTasks","hasError","listeners","create","readyTasks","readyToCheck","uncheckedDependencies","enqueueTask","task","taskCallback","safeResults","val","rkey","taskComplete","taskFn","runTask","processQueue","shift","run","taskName","getDependents","dependencies","remainingDependencies","dependencyName","join","taskListeners","dependent","checkForDeadlocks","arrayMap","symbolProto","symbolToString","baseToString","isSymbol","castSlice","end","baseSlice","reHasUnicode","RegExp","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsModifier","rsOptVar","rsSeq","rsSymbol","reUnicode","stringToArray","string","hasUnicode","match","unicodeToArray","split","asciiToArray","reTrim","trim","chars","guard","replace","strSymbols","chrSymbols","charsStartIndex","charsEndIndex","FN_ARGS","FN_ARG_SPLIT","FN_ARG","STRIP_COMMENTS","autoInject","newTasks","params","fnIsAsync","hasNoDeps","newTask","parseParams","taskCb","newArgs","name","DLL","head","tail","setInitial","dll","node","queue","worker","payload","_worker","numRunning","workersList","processingScheduled","_insert","data","insertAtFront","q","started","idle","drain","l","_tasks","unshift","_next","splice","buffer","unsaturated","isProcessing","saturated","empty","paused","kill","remove","testFn","min","pause","resume","cargo","removeLink","prev","insertAfter","newNode","insertBefore","toArray","curr","eachOfSeries","reduce","memo","x","seq","_functions","newargs","nextargs","compose","reverse","_concat","concatLimit","mapResults","concatSeries","constant","values","identity","_createTester","check","getResult","testResult","testPassed","_findGetResult","detect","detectLimit","detectSeries","consoleFunc","console","dir","doDuring","_fn","_test","truth","doWhilst","doUntil","during","_withoutIndex","eachLimit","eachLimit$1","eachSeries","ensureAsync","sync","innerArgs","notId","every","everyLimit","everySeries","baseProperty","filterArray","truthValues","filterGeneric","sort","a","b","_filter","filter","filterLimit","filterSeries","forever","errback","groupByLimit","groupBy","groupBySeries","log","mapValuesLimit","newObj","mapValues","mapValuesSeries","has","memoize","hasher","queues","memoized","unmemoized","_parallel","parallelLimit","parallelLimit$1","queue$1","items","priorityQueue","priority","nextNode","race","TypeError","reduceRight","reflect","reflectCallback","cbArg","reflectAll","reject$1","reject","rejectLimit","rejectSeries","constant$1","retry","opts","DEFAULT_TIMES","DEFAULT_INTERVAL","options","times","intervalFunc","parseTimes","acc","t","interval","errorFilter","_task","attempt","retryAttempt","retryable","series","some","Boolean","someLimit","someSeries","sortBy","comparator","left","right","criteria","timeout","milliseconds","info","timer","timedOut","clearTimeout","code","nativeCeil","ceil","nativeMax","timeLimit","count","step","baseRange","timesSeries","accumulator","k","tryEach","res","unmemoize","whilst","until","waterfall","taskIndex","nextTask","each","parallel","timesLimit","all","allLimit","allSeries","any","anyLimit","anySeries","find","findLimit","findSeries","forEach","forEachSeries","forEachLimit","forEachOf","forEachOfSeries","forEachOfLimit","inject","foldl","foldr","select","selectLimit","selectSeries","wrapSync","defineProperty","factory","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","Number","isNaN","EventEmitter","init","emitter","Promise","resolve","errorListener","removeListener","resolver","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","_addListener","prepend","m","events","existing","warning","newListener","emit","warned","w","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","ret","unwrapListeners","arrayClone","listenerCount","copy","addEventListener","wrapListener","removeEventListener","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","context","addListener","prependListener","prependOnceListener","list","position","originalListener","spliceOne","off","removeAllListeners","rawListeners","eventNames","keyList","hasProp","equal","arrA","arrB","dateA","Date","dateB","getTime","regexpA","regexpB","hat","bits","base","digits","pow","rem","floor","random","parsed","parseInt","rack","expandBy","iters","id","hats","transformComponent","checkValidOp","append","transformX","leftOp","rightOp","destRight","newRightOp","rightComponent","newLeftOp","nextC","j","pair","r","op","otherOp","clone","o","JSON","parse","stringify","json","uri","subtypes","convertFromText","c","p","si","sd","d","convertToText","registerSubtype","subtype","invertComponent","c_","invert","oi","od","li","ld","na","lm","op_","iop","checkList","checkObj","snapshot","container","parent","shatter","incrementalApply","_yield","smallOp","pathMatches","p1","p2","ignoreLast","dest","last","op1","op2","newOp","normalize","commonLengthForOps","alen","blen","canOpAffectPath","path","otherC","common","common2","cplength","otherCplength","oc","commonOperand","from","to","otherFrom","otherTo","text","initial","strInject","s1","pos","s2","checkValidComponent","deleted","component","_append","transformPosition","transformCursor","side","_tc","s","newC","intersectStart","intersectEnd","Doc","Query","Presence","DocPresence","SnapshotVersionRequest","SnapshotTimestampRequest","ShareDBError","util","logger","ERROR_CODE","CODES","connectionState","socket","readyState","Connection","collections","nextQueryId","nextSnapshotRequestId","queries","_presences","_snapshotRequests","_presenceSeq","agent","debug","bindToSocket","wrapErrorData","errorData","fullMessage","hasPending","hasWritePending","mixin","close","onmessage","onopen","onerror","onclose","newState","_setState","canSend","connection","event","request","handleMessage","_initializeHandshake","reason","_handleLegacyInit","_handleHandshake","query","_handleFetch","extra","_handleSubscribe","_handleError","diff","_handleDiff","_handleExtra","_handleBulkMessage","_handleSnapshotFetch","doc","getExisting","_handleOp","_handlePresence","_handlePresenceSubscribe","_handlePresenceUnsubscribe","_handlePresenceRequest","method","dataForId","_reset","ERR_CONNECTION_STATE_TRANSITION_INVALID","startBulk","_onConnectionStateChanged","collection","docs","channel","endBulk","bulk","actions","_sendBulk","f","u","action","versionId","ids","versions","versionsCount","send","version","_sendAction","_addDoc","isDuplicate","sendFetch","sendSubscribe","sendUnsubscribe","sendOp","src","del","submitSource","source","_destroyDoc","digAndRemove","_createQuery","_destroyQuery","createFetchQuery","createSubscribeQuery","_firstDoc","_firstQuery","_firstSnapshotRequest","whenNothingPending","_nothingPendingRetry","snapshotRequest","fetchSnapshot","requestId","fetchSnapshotByTimestamp","timestamp","_handleResponse","protocolMinor","_initialize","protocol","ERR_PROTOCOL_VERSION_NOT_SUPPORTED","defaultType","ERR_DEFAULT_TYPE_MISMATCH","ERR_CLIENT_ID_BADLY_FORMED","getPresence","digOrCreate","getDocPresence","_sendPresenceAction","presence","_addPresence","ch","dig","_handleUnsubscribe","_receiveUpdate","_broadcastAllLocalPresence","deepEqual","inflightFetch","inflightSubscribe","pendingFetch","pendingSubscribe","subscribed","wantSubscribe","inflightOp","pendingOps","applyStack","preventCompose","client","server","ERR_DOC_WAS_DELETED","ERR_DOC_ALREADY_CREATED","clientOp","serverOp","destroy","unsubscribe","_setType","newType","ERR_DOC_TYPE_NOT_RECOGNIZED","ingestSnapshot","ERR_INGESTED_SNAPSHOT_HAS_NO_VERSION","ERR_DOC_MISSING_VERSION","fetch","deserialize","_emitNothingPending","_emitResponseError","ERR_SNAPSHOT_READ_SILENT_REJECTION","callbacks","callEach","_flushSubscribe","ERR_OP_SUBMIT_REJECTED","_rollback","_opAcknowledged","transformErr","_hardRollback","_otApply","flush","_resubscribe","subscribe","inflight","lastCallback","pushActionCallback","_queueSubscribe","lastRequest","truthy","_sendOp","ERR_DOC_DOES_NOT_EXIST","stackLength","componentOp","_popApplyStack","createDeserialized","oldData","ERR_INFLIGHT_OP_MISSING","sentAt","now","retries","MAX_SAFE_INTEGER","ERR_CONNECTION_SEQ_INTEGER_OVERFLOW","_submit","_pushOp","composed","_tryCompose","indexOf","ops","submitOp","_clearInflightOp","allOpsHadCallbacks","called","LocalDocPresence","RemoteDocPresence","_createLocalPresence","_createRemotePresence","LocalPresence","presenceId","_doc","_isSending","_opHandler","_transformAgainstOp","_createOrDelHandler","_handleCreateOrDel","_loadHandler","_handleLoad","_destroyHandler","_registerWithDoc","submit","_callbackOrEmit","_sendPending","_pendingMessages","_transformPresence","_getCallback","pv","_message","supportsPresence","ERR_TYPE_DOES_NOT_SUPPORT_PRESENCE","transformPresence","presenceVersion","_callbacksByPresenceVersion","localPresences","_ack","RemotePresence","async","remotePresences","_remotePresenceInstances","_subscriptionCallbacksBySeq","_sendSubscriptionAction","localPresence","localIds","remoteIds","_subscriptionCallback","receiveUpdate","_updateRemotePresence","remotePresence","_removeRemotePresence","_callEachOrEmit","ot","_pending","_opCache","_pendingSetPending","_createDelHandler","_handleCreateDel","_setPendingPresence","_catchUpStalePresence","connectionId","isOwnOp","_cacheOp","_startCachingOps","hasCaughtUp","_stopCachingOps","ready","sent","_finishResponse","wait","finish","_ingestSnapshots","snapshots","newDocs","howMany","removed","Snapshot","SnapshotRequest","metadata","meta","isValidTimestamp","ts","isValidVersion","Constructor","captureStackTrace","stack","ERR_APPLY_OP_VERSION_DOES_NOT_MATCH_SNAPSHOT","ERR_APPLY_SNAPSHOT_NOT_PROVIDED","ERR_DATABASE_ADAPTER_NOT_FOUND","ERR_DATABASE_DOES_NOT_SUPPORT_SUBSCRIBE","ERR_DATABASE_METHOD_NOT_IMPLEMENTED","ERR_MAX_SUBMIT_RETRIES_EXCEEDED","ERR_MESSAGE_BADLY_FORMED","ERR_MILESTONE_ARGUMENT_INVALID","ERR_OP_ALREADY_SUBMITTED","ERR_OP_NOT_ALLOWED_IN_PROJECTION","ERR_OP_VERSION_MISMATCH_AFTER_TRANSFORM","ERR_OP_VERSION_MISMATCH_DURING_TRANSFORM","ERR_OP_VERSION_NEWER_THAN_CURRENT_SNAPSHOT","ERR_OT_LEGACY_JSON0_OP_CANNOT_BE_NORMALIZED","ERR_OT_OP_BADLY_FORMED","ERR_OT_OP_NOT_APPLIED","ERR_OT_OP_NOT_PROVIDED","ERR_PRESENCE_TRANSFORM_FAILED","ERR_QUERY_EMITTER_LISTENER_NOT_ASSIGNED","ERR_SNAPSHOT_READS_REJECTED","ERR_SUBMIT_TRANSFORM_OPS_NOT_FOUND","ERR_TYPE_CANNOT_BE_PROJECTED","ERR_UNKNOWN_ERROR","SUPPORTED_METHODS","Logger","defaultMethods","setMethods","overrides","normalizeLegacyJson0Ops","json0Op","components","element","checkOp","typeName","normalizeType","edit","applyOpEdit","appliedOp","applyOps","_normalizeLegacyJson0Ops","opError","register","doNothing","hasKeys","isInteger","isFinite","createCallback","objects","child","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","globalThis","window","nmd","paths","children","ws","WebSocket","render","$value","document","getElementById","textContent","numClicks"],"sourceRoot":""}
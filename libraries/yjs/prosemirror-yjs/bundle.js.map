{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://prosemirror-yjs/./node_modules/orderedmap/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-model/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-transform/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-state/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-view/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-schema-basic/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-schema-list/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/w3c-keyname/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-keymap/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/rope-sequence/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-history/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-commands/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-dropcursor/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-gapcursor/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/crelt/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-menu/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-inputrules/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/prosemirror-example-setup/dist/index.es.js","webpack://prosemirror-yjs/./node_modules/lib0/map.js","webpack://prosemirror-yjs/./node_modules/lib0/set.js","webpack://prosemirror-yjs/./node_modules/lib0/array.js","webpack://prosemirror-yjs/./node_modules/lib0/math.js","webpack://prosemirror-yjs/./node_modules/lib0/string.js","webpack://prosemirror-yjs/./node_modules/lib0/storage.js","webpack://prosemirror-yjs/./node_modules/lib0/environment.js","webpack://prosemirror-yjs/./node_modules/lib0/conditions.js","webpack://prosemirror-yjs/./node_modules/lib0/buffer.js","webpack://prosemirror-yjs/./node_modules/lib0/binary.js","webpack://prosemirror-yjs/./node_modules/lib0/number.js","webpack://prosemirror-yjs/./node_modules/lib0/encoding.js","webpack://prosemirror-yjs/./node_modules/lib0/decoding.js","webpack://prosemirror-yjs/./node_modules/isomorphic.js/browser.mjs","webpack://prosemirror-yjs/./node_modules/lib0/random.js","webpack://prosemirror-yjs/./node_modules/lib0/error.js","webpack://prosemirror-yjs/./node_modules/lib0/function.js","webpack://prosemirror-yjs/./node_modules/lib0/symbol.js","webpack://prosemirror-yjs/./node_modules/lib0/pair.js","webpack://prosemirror-yjs/./node_modules/lib0/dom.js","webpack://prosemirror-yjs/./node_modules/lib0/time.js","webpack://prosemirror-yjs/./node_modules/lib0/logging.js","webpack://prosemirror-yjs/./node_modules/lib0/iterator.js","webpack://prosemirror-yjs/./node_modules/lib0/object.js","webpack://prosemirror-yjs/./node_modules/yjs/dist/yjs.mjs","webpack://prosemirror-yjs/./node_modules/lib0/observable.js","webpack://prosemirror-yjs/./helpers.js","webpack://prosemirror-yjs/./yjs-plugin.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/string.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/map.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/storage.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/environment.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/buffer.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/conditions.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/binary.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/decoding.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/error.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/set.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/array.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/math.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/number.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/encoding.js","webpack://prosemirror-yjs/../data-visualization/node_modules/isomorphic.js/browser.mjs","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/random.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/function.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/symbol.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/pair.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/dom.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/time.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/logging.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/iterator.js","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/object.js","webpack://prosemirror-yjs/../data-visualization/node_modules/yjs/dist/yjs.mjs","webpack://prosemirror-yjs/../data-visualization/node_modules/lib0/observable.js","webpack://prosemirror-yjs/../data-visualization/src/update-decoder/type-decoder.js","webpack://prosemirror-yjs/../data-visualization/src/data-viewer/data-types.js","webpack://prosemirror-yjs/../data-visualization/src/update-decoder/content-decoder.js","webpack://prosemirror-yjs/../data-visualization/src/update-decoder/index.js","webpack://prosemirror-yjs/./index.js","webpack://prosemirror-yjs/../data-visualization/src/update-decoder/delete-set-decoder.js"],"sourcesContent":["// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nvar orderedmap = OrderedMap;\n\nexport default orderedmap;\n","import OrderedMap from 'orderedmap';\n\nfunction findDiffStart(a, b, pos) {\n  for (var i = 0;; i++) {\n    if (i == a.childCount || i == b.childCount)\n      { return a.childCount == b.childCount ? null : pos }\n\n    var childA = a.child(i), childB = b.child(i);\n    if (childA == childB) { pos += childA.nodeSize; continue }\n\n    if (!childA.sameMarkup(childB)) { return pos }\n\n    if (childA.isText && childA.text != childB.text) {\n      for (var j = 0; childA.text[j] == childB.text[j]; j++)\n        { pos++; }\n      return pos\n    }\n    if (childA.content.size || childB.content.size) {\n      var inner = findDiffStart(childA.content, childB.content, pos + 1);\n      if (inner != null) { return inner }\n    }\n    pos += childA.nodeSize;\n  }\n}\n\nfunction findDiffEnd(a, b, posA, posB) {\n  for (var iA = a.childCount, iB = b.childCount;;) {\n    if (iA == 0 || iB == 0)\n      { return iA == iB ? null : {a: posA, b: posB} }\n\n    var childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n    if (childA == childB) {\n      posA -= size; posB -= size;\n      continue\n    }\n\n    if (!childA.sameMarkup(childB)) { return {a: posA, b: posB} }\n\n    if (childA.isText && childA.text != childB.text) {\n      var same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n      while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n        same++; posA--; posB--;\n      }\n      return {a: posA, b: posB}\n    }\n    if (childA.content.size || childB.content.size) {\n      var inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n      if (inner) { return inner }\n    }\n    posA -= size; posB -= size;\n  }\n}\n\n// ::- A fragment represents a node's collection of child nodes.\n//\n// Like nodes, fragments are persistent data structures, and you\n// should not mutate them or their content. Rather, you create new\n// instances whenever needed. The API tries to make this easy.\nvar Fragment = function Fragment(content, size) {\n  this.content = content;\n  // :: number\n  // The size of the fragment, which is the total of the size of its\n  // content nodes.\n  this.size = size || 0;\n  if (size == null) { for (var i = 0; i < content.length; i++)\n    { this.size += content[i].nodeSize; } }\n};\n\nvar prototypeAccessors = { firstChild: { configurable: true },lastChild: { configurable: true },childCount: { configurable: true } };\n\n// :: (number, number, (node: Node, start: number, parent: Node, index: number) → ?bool, ?number)\n// Invoke a callback for all descendant nodes between the given two\n// positions (relative to start of this fragment). Doesn't descend\n// into a node when the callback returns `false`.\nFragment.prototype.nodesBetween = function nodesBetween (from, to, f, nodeStart, parent) {\n    if ( nodeStart === void 0 ) nodeStart = 0;\n\n  for (var i = 0, pos = 0; pos < to; i++) {\n    var child = this.content[i], end = pos + child.nodeSize;\n    if (end > from && f(child, nodeStart + pos, parent, i) !== false && child.content.size) {\n      var start = pos + 1;\n      child.nodesBetween(Math.max(0, from - start),\n                         Math.min(child.content.size, to - start),\n                         f, nodeStart + start);\n    }\n    pos = end;\n  }\n};\n\n// :: ((node: Node, pos: number, parent: Node) → ?bool)\n// Call the given callback for every descendant node. The callback\n// may return `false` to prevent traversal of a given node's children.\nFragment.prototype.descendants = function descendants (f) {\n  this.nodesBetween(0, this.size, f);\n};\n\n// :: (number, number, ?string, ?string | ?(leafNode: Node) -> string) → string\n// Extract the text between `from` and `to`. See the same method on\n// [`Node`](#model.Node.textBetween).\nFragment.prototype.textBetween = function textBetween (from, to, blockSeparator, leafText) {\n  var text = \"\", separated = true;\n  this.nodesBetween(from, to, function (node, pos) {\n    if (node.isText) {\n      text += node.text.slice(Math.max(from, pos) - pos, to - pos);\n      separated = !blockSeparator;\n    } else if (node.isLeaf && leafText) {\n      text += typeof leafText === 'function' ? leafText(node): leafText;\n      separated = !blockSeparator;\n    } else if (!separated && node.isBlock) {\n      text += blockSeparator;\n      separated = true;\n    }\n  }, 0);\n  return text\n};\n\n// :: (Fragment) → Fragment\n// Create a new fragment containing the combined content of this\n// fragment and the other.\nFragment.prototype.append = function append (other) {\n  if (!other.size) { return this }\n  if (!this.size) { return other }\n  var last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n  if (last.isText && last.sameMarkup(first)) {\n    content[content.length - 1] = last.withText(last.text + first.text);\n    i = 1;\n  }\n  for (; i < other.content.length; i++) { content.push(other.content[i]); }\n  return new Fragment(content, this.size + other.size)\n};\n\n// :: (number, ?number) → Fragment\n// Cut out the sub-fragment between the two given positions.\nFragment.prototype.cut = function cut (from, to) {\n  if (to == null) { to = this.size; }\n  if (from == 0 && to == this.size) { return this }\n  var result = [], size = 0;\n  if (to > from) { for (var i = 0, pos = 0; pos < to; i++) {\n    var child = this.content[i], end = pos + child.nodeSize;\n    if (end > from) {\n      if (pos < from || end > to) {\n        if (child.isText)\n          { child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos)); }\n        else\n          { child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1)); }\n      }\n      result.push(child);\n      size += child.nodeSize;\n    }\n    pos = end;\n  } }\n  return new Fragment(result, size)\n};\n\nFragment.prototype.cutByIndex = function cutByIndex (from, to) {\n  if (from == to) { return Fragment.empty }\n  if (from == 0 && to == this.content.length) { return this }\n  return new Fragment(this.content.slice(from, to))\n};\n\n// :: (number, Node) → Fragment\n// Create a new fragment in which the node at the given index is\n// replaced by the given node.\nFragment.prototype.replaceChild = function replaceChild (index, node) {\n  var current = this.content[index];\n  if (current == node) { return this }\n  var copy = this.content.slice();\n  var size = this.size + node.nodeSize - current.nodeSize;\n  copy[index] = node;\n  return new Fragment(copy, size)\n};\n\n// : (Node) → Fragment\n// Create a new fragment by prepending the given node to this\n// fragment.\nFragment.prototype.addToStart = function addToStart (node) {\n  return new Fragment([node].concat(this.content), this.size + node.nodeSize)\n};\n\n// : (Node) → Fragment\n// Create a new fragment by appending the given node to this\n// fragment.\nFragment.prototype.addToEnd = function addToEnd (node) {\n  return new Fragment(this.content.concat(node), this.size + node.nodeSize)\n};\n\n// :: (Fragment) → bool\n// Compare this fragment to another one.\nFragment.prototype.eq = function eq (other) {\n  if (this.content.length != other.content.length) { return false }\n  for (var i = 0; i < this.content.length; i++)\n    { if (!this.content[i].eq(other.content[i])) { return false } }\n  return true\n};\n\n// :: ?Node\n// The first child of the fragment, or `null` if it is empty.\nprototypeAccessors.firstChild.get = function () { return this.content.length ? this.content[0] : null };\n\n// :: ?Node\n// The last child of the fragment, or `null` if it is empty.\nprototypeAccessors.lastChild.get = function () { return this.content.length ? this.content[this.content.length - 1] : null };\n\n// :: number\n// The number of child nodes in this fragment.\nprototypeAccessors.childCount.get = function () { return this.content.length };\n\n// :: (number) → Node\n// Get the child node at the given index. Raise an error when the\n// index is out of range.\nFragment.prototype.child = function child (index) {\n  var found = this.content[index];\n  if (!found) { throw new RangeError(\"Index \" + index + \" out of range for \" + this) }\n  return found\n};\n\n// :: (number) → ?Node\n// Get the child node at the given index, if it exists.\nFragment.prototype.maybeChild = function maybeChild (index) {\n  return this.content[index]\n};\n\n// :: ((node: Node, offset: number, index: number))\n// Call `f` for every child node, passing the node, its offset\n// into this parent node, and its index.\nFragment.prototype.forEach = function forEach (f) {\n  for (var i = 0, p = 0; i < this.content.length; i++) {\n    var child = this.content[i];\n    f(child, p, i);\n    p += child.nodeSize;\n  }\n};\n\n// :: (Fragment) → ?number\n// Find the first position at which this fragment and another\n// fragment differ, or `null` if they are the same.\nFragment.prototype.findDiffStart = function findDiffStart$1 (other, pos) {\n    if ( pos === void 0 ) pos = 0;\n\n  return findDiffStart(this, other, pos)\n};\n\n// :: (Fragment) → ?{a: number, b: number}\n// Find the first position, searching from the end, at which this\n// fragment and the given fragment differ, or `null` if they are the\n// same. Since this position will not be the same in both nodes, an\n// object with two separate positions is returned.\nFragment.prototype.findDiffEnd = function findDiffEnd$1 (other, pos, otherPos) {\n    if ( pos === void 0 ) pos = this.size;\n    if ( otherPos === void 0 ) otherPos = other.size;\n\n  return findDiffEnd(this, other, pos, otherPos)\n};\n\n// : (number, ?number) → {index: number, offset: number}\n// Find the index and inner offset corresponding to a given relative\n// position in this fragment. The result object will be reused\n// (overwritten) the next time the function is called. (Not public.)\nFragment.prototype.findIndex = function findIndex (pos, round) {\n    if ( round === void 0 ) round = -1;\n\n  if (pos == 0) { return retIndex(0, pos) }\n  if (pos == this.size) { return retIndex(this.content.length, pos) }\n  if (pos > this.size || pos < 0) { throw new RangeError((\"Position \" + pos + \" outside of fragment (\" + (this) + \")\")) }\n  for (var i = 0, curPos = 0;; i++) {\n    var cur = this.child(i), end = curPos + cur.nodeSize;\n    if (end >= pos) {\n      if (end == pos || round > 0) { return retIndex(i + 1, end) }\n      return retIndex(i, curPos)\n    }\n    curPos = end;\n  }\n};\n\n// :: () → string\n// Return a debugging string that describes this fragment.\nFragment.prototype.toString = function toString () { return \"<\" + this.toStringInner() + \">\" };\n\nFragment.prototype.toStringInner = function toStringInner () { return this.content.join(\", \") };\n\n// :: () → ?Object\n// Create a JSON-serializeable representation of this fragment.\nFragment.prototype.toJSON = function toJSON () {\n  return this.content.length ? this.content.map(function (n) { return n.toJSON(); }) : null\n};\n\n// :: (Schema, ?Object) → Fragment\n// Deserialize a fragment from its JSON representation.\nFragment.fromJSON = function fromJSON (schema, value) {\n  if (!value) { return Fragment.empty }\n  if (!Array.isArray(value)) { throw new RangeError(\"Invalid input for Fragment.fromJSON\") }\n  return new Fragment(value.map(schema.nodeFromJSON))\n};\n\n// :: ([Node]) → Fragment\n// Build a fragment from an array of nodes. Ensures that adjacent\n// text nodes with the same marks are joined together.\nFragment.fromArray = function fromArray (array) {\n  if (!array.length) { return Fragment.empty }\n  var joined, size = 0;\n  for (var i = 0; i < array.length; i++) {\n    var node = array[i];\n    size += node.nodeSize;\n    if (i && node.isText && array[i - 1].sameMarkup(node)) {\n      if (!joined) { joined = array.slice(0, i); }\n      joined[joined.length - 1] = node.withText(joined[joined.length - 1].text + node.text);\n    } else if (joined) {\n      joined.push(node);\n    }\n  }\n  return new Fragment(joined || array, size)\n};\n\n// :: (?union<Fragment, Node, [Node]>) → Fragment\n// Create a fragment from something that can be interpreted as a set\n// of nodes. For `null`, it returns the empty fragment. For a\n// fragment, the fragment itself. For a node or array of nodes, a\n// fragment containing those nodes.\nFragment.from = function from (nodes) {\n  if (!nodes) { return Fragment.empty }\n  if (nodes instanceof Fragment) { return nodes }\n  if (Array.isArray(nodes)) { return this.fromArray(nodes) }\n  if (nodes.attrs) { return new Fragment([nodes], nodes.nodeSize) }\n  throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n                       (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"))\n};\n\nObject.defineProperties( Fragment.prototype, prototypeAccessors );\n\nvar found = {index: 0, offset: 0};\nfunction retIndex(index, offset) {\n  found.index = index;\n  found.offset = offset;\n  return found\n}\n\n// :: Fragment\n// An empty fragment. Intended to be reused whenever a node doesn't\n// contain anything (rather than allocating a new empty fragment for\n// each leaf node).\nFragment.empty = new Fragment([], 0);\n\nfunction compareDeep(a, b) {\n  if (a === b) { return true }\n  if (!(a && typeof a == \"object\") ||\n      !(b && typeof b == \"object\")) { return false }\n  var array = Array.isArray(a);\n  if (Array.isArray(b) != array) { return false }\n  if (array) {\n    if (a.length != b.length) { return false }\n    for (var i = 0; i < a.length; i++) { if (!compareDeep(a[i], b[i])) { return false } }\n  } else {\n    for (var p in a) { if (!(p in b) || !compareDeep(a[p], b[p])) { return false } }\n    for (var p$1 in b) { if (!(p$1 in a)) { return false } }\n  }\n  return true\n}\n\n// ::- A mark is a piece of information that can be attached to a node,\n// such as it being emphasized, in code font, or a link. It has a type\n// and optionally a set of attributes that provide further information\n// (such as the target of the link). Marks are created through a\n// `Schema`, which controls which types exist and which\n// attributes they have.\nvar Mark = function Mark(type, attrs) {\n  // :: MarkType\n  // The type of this mark.\n  this.type = type;\n  // :: Object\n  // The attributes associated with this mark.\n  this.attrs = attrs;\n};\n\n// :: ([Mark]) → [Mark]\n// Given a set of marks, create a new set which contains this one as\n// well, in the right position. If this mark is already in the set,\n// the set itself is returned. If any marks that are set to be\n// [exclusive](#model.MarkSpec.excludes) with this mark are present,\n// those are replaced by this one.\nMark.prototype.addToSet = function addToSet (set) {\n  var copy, placed = false;\n  for (var i = 0; i < set.length; i++) {\n    var other = set[i];\n    if (this.eq(other)) { return set }\n    if (this.type.excludes(other.type)) {\n      if (!copy) { copy = set.slice(0, i); }\n    } else if (other.type.excludes(this.type)) {\n      return set\n    } else {\n      if (!placed && other.type.rank > this.type.rank) {\n        if (!copy) { copy = set.slice(0, i); }\n        copy.push(this);\n        placed = true;\n      }\n      if (copy) { copy.push(other); }\n    }\n  }\n  if (!copy) { copy = set.slice(); }\n  if (!placed) { copy.push(this); }\n  return copy\n};\n\n// :: ([Mark]) → [Mark]\n// Remove this mark from the given set, returning a new set. If this\n// mark is not in the set, the set itself is returned.\nMark.prototype.removeFromSet = function removeFromSet (set) {\n  for (var i = 0; i < set.length; i++)\n    { if (this.eq(set[i]))\n      { return set.slice(0, i).concat(set.slice(i + 1)) } }\n  return set\n};\n\n// :: ([Mark]) → bool\n// Test whether this mark is in the given set of marks.\nMark.prototype.isInSet = function isInSet (set) {\n  for (var i = 0; i < set.length; i++)\n    { if (this.eq(set[i])) { return true } }\n  return false\n};\n\n// :: (Mark) → bool\n// Test whether this mark has the same type and attributes as\n// another mark.\nMark.prototype.eq = function eq (other) {\n  return this == other ||\n    (this.type == other.type && compareDeep(this.attrs, other.attrs))\n};\n\n// :: () → Object\n// Convert this mark to a JSON-serializeable representation.\nMark.prototype.toJSON = function toJSON () {\n  var obj = {type: this.type.name};\n  for (var _ in this.attrs) {\n    obj.attrs = this.attrs;\n    break\n  }\n  return obj\n};\n\n// :: (Schema, Object) → Mark\nMark.fromJSON = function fromJSON (schema, json) {\n  if (!json) { throw new RangeError(\"Invalid input for Mark.fromJSON\") }\n  var type = schema.marks[json.type];\n  if (!type) { throw new RangeError((\"There is no mark type \" + (json.type) + \" in this schema\")) }\n  return type.create(json.attrs)\n};\n\n// :: ([Mark], [Mark]) → bool\n// Test whether two sets of marks are identical.\nMark.sameSet = function sameSet (a, b) {\n  if (a == b) { return true }\n  if (a.length != b.length) { return false }\n  for (var i = 0; i < a.length; i++)\n    { if (!a[i].eq(b[i])) { return false } }\n  return true\n};\n\n// :: (?union<Mark, [Mark]>) → [Mark]\n// Create a properly sorted mark set from null, a single mark, or an\n// unsorted array of marks.\nMark.setFrom = function setFrom (marks) {\n  if (!marks || marks.length == 0) { return Mark.none }\n  if (marks instanceof Mark) { return [marks] }\n  var copy = marks.slice();\n  copy.sort(function (a, b) { return a.type.rank - b.type.rank; });\n  return copy\n};\n\n// :: [Mark] The empty set of marks.\nMark.none = [];\n\n// ReplaceError:: class extends Error\n// Error type raised by [`Node.replace`](#model.Node.replace) when\n// given an invalid replacement.\n\nfunction ReplaceError(message) {\n  var err = Error.call(this, message);\n  err.__proto__ = ReplaceError.prototype;\n  return err\n}\n\nReplaceError.prototype = Object.create(Error.prototype);\nReplaceError.prototype.constructor = ReplaceError;\nReplaceError.prototype.name = \"ReplaceError\";\n\n// ::- A slice represents a piece cut out of a larger document. It\n// stores not only a fragment, but also the depth up to which nodes on\n// both side are ‘open’ (cut through).\nvar Slice = function Slice(content, openStart, openEnd) {\n  // :: Fragment The slice's content.\n  this.content = content;\n  // :: number The open depth at the start.\n  this.openStart = openStart;\n  // :: number The open depth at the end.\n  this.openEnd = openEnd;\n};\n\nvar prototypeAccessors$1 = { size: { configurable: true } };\n\n// :: number\n// The size this slice would add when inserted into a document.\nprototypeAccessors$1.size.get = function () {\n  return this.content.size - this.openStart - this.openEnd\n};\n\nSlice.prototype.insertAt = function insertAt (pos, fragment) {\n  var content = insertInto(this.content, pos + this.openStart, fragment, null);\n  return content && new Slice(content, this.openStart, this.openEnd)\n};\n\nSlice.prototype.removeBetween = function removeBetween (from, to) {\n  return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd)\n};\n\n// :: (Slice) → bool\n// Tests whether this slice is equal to another slice.\nSlice.prototype.eq = function eq (other) {\n  return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd\n};\n\nSlice.prototype.toString = function toString () {\n  return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\"\n};\n\n// :: () → ?Object\n// Convert a slice to a JSON-serializable representation.\nSlice.prototype.toJSON = function toJSON () {\n  if (!this.content.size) { return null }\n  var json = {content: this.content.toJSON()};\n  if (this.openStart > 0) { json.openStart = this.openStart; }\n  if (this.openEnd > 0) { json.openEnd = this.openEnd; }\n  return json\n};\n\n// :: (Schema, ?Object) → Slice\n// Deserialize a slice from its JSON representation.\nSlice.fromJSON = function fromJSON (schema, json) {\n  if (!json) { return Slice.empty }\n  var openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n  if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n    { throw new RangeError(\"Invalid input for Slice.fromJSON\") }\n  return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd)\n};\n\n// :: (Fragment, ?bool) → Slice\n// Create a slice from a fragment by taking the maximum possible\n// open value on both side of the fragment.\nSlice.maxOpen = function maxOpen (fragment, openIsolating) {\n    if ( openIsolating === void 0 ) openIsolating=true;\n\n  var openStart = 0, openEnd = 0;\n  for (var n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild) { openStart++; }\n  for (var n$1 = fragment.lastChild; n$1 && !n$1.isLeaf && (openIsolating || !n$1.type.spec.isolating); n$1 = n$1.lastChild) { openEnd++; }\n  return new Slice(fragment, openStart, openEnd)\n};\n\nObject.defineProperties( Slice.prototype, prototypeAccessors$1 );\n\nfunction removeRange(content, from, to) {\n  var ref = content.findIndex(from);\n  var index = ref.index;\n  var offset = ref.offset;\n  var child = content.maybeChild(index);\n  var ref$1 = content.findIndex(to);\n  var indexTo = ref$1.index;\n  var offsetTo = ref$1.offset;\n  if (offset == from || child.isText) {\n    if (offsetTo != to && !content.child(indexTo).isText) { throw new RangeError(\"Removing non-flat range\") }\n    return content.cut(0, from).append(content.cut(to))\n  }\n  if (index != indexTo) { throw new RangeError(\"Removing non-flat range\") }\n  return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)))\n}\n\nfunction insertInto(content, dist, insert, parent) {\n  var ref = content.findIndex(dist);\n  var index = ref.index;\n  var offset = ref.offset;\n  var child = content.maybeChild(index);\n  if (offset == dist || child.isText) {\n    if (parent && !parent.canReplace(index, index, insert)) { return null }\n    return content.cut(0, dist).append(insert).append(content.cut(dist))\n  }\n  var inner = insertInto(child.content, dist - offset - 1, insert);\n  return inner && content.replaceChild(index, child.copy(inner))\n}\n\n// :: Slice\n// The empty slice.\nSlice.empty = new Slice(Fragment.empty, 0, 0);\n\nfunction replace($from, $to, slice) {\n  if (slice.openStart > $from.depth)\n    { throw new ReplaceError(\"Inserted content deeper than insertion position\") }\n  if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n    { throw new ReplaceError(\"Inconsistent open depths\") }\n  return replaceOuter($from, $to, slice, 0)\n}\n\nfunction replaceOuter($from, $to, slice, depth) {\n  var index = $from.index(depth), node = $from.node(depth);\n  if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n    var inner = replaceOuter($from, $to, slice, depth + 1);\n    return node.copy(node.content.replaceChild(index, inner))\n  } else if (!slice.content.size) {\n    return close(node, replaceTwoWay($from, $to, depth))\n  } else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n    var parent = $from.parent, content = parent.content;\n    return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)))\n  } else {\n    var ref = prepareSliceForReplace(slice, $from);\n    var start = ref.start;\n    var end = ref.end;\n    return close(node, replaceThreeWay($from, start, end, $to, depth))\n  }\n}\n\nfunction checkJoin(main, sub) {\n  if (!sub.type.compatibleContent(main.type))\n    { throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name) }\n}\n\nfunction joinable($before, $after, depth) {\n  var node = $before.node(depth);\n  checkJoin(node, $after.node(depth));\n  return node\n}\n\nfunction addNode(child, target) {\n  var last = target.length - 1;\n  if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n    { target[last] = child.withText(target[last].text + child.text); }\n  else\n    { target.push(child); }\n}\n\nfunction addRange($start, $end, depth, target) {\n  var node = ($end || $start).node(depth);\n  var startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount;\n  if ($start) {\n    startIndex = $start.index(depth);\n    if ($start.depth > depth) {\n      startIndex++;\n    } else if ($start.textOffset) {\n      addNode($start.nodeAfter, target);\n      startIndex++;\n    }\n  }\n  for (var i = startIndex; i < endIndex; i++) { addNode(node.child(i), target); }\n  if ($end && $end.depth == depth && $end.textOffset)\n    { addNode($end.nodeBefore, target); }\n}\n\nfunction close(node, content) {\n  if (!node.type.validContent(content))\n    { throw new ReplaceError(\"Invalid content for node \" + node.type.name) }\n  return node.copy(content)\n}\n\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n  var openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n  var openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n\n  var content = [];\n  addRange(null, $from, depth, content);\n  if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n    checkJoin(openStart, openEnd);\n    addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n  } else {\n    if (openStart)\n      { addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content); }\n    addRange($start, $end, depth, content);\n    if (openEnd)\n      { addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content); }\n  }\n  addRange($to, null, depth, content);\n  return new Fragment(content)\n}\n\nfunction replaceTwoWay($from, $to, depth) {\n  var content = [];\n  addRange(null, $from, depth, content);\n  if ($from.depth > depth) {\n    var type = joinable($from, $to, depth + 1);\n    addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n  }\n  addRange($to, null, depth, content);\n  return new Fragment(content)\n}\n\nfunction prepareSliceForReplace(slice, $along) {\n  var extra = $along.depth - slice.openStart, parent = $along.node(extra);\n  var node = parent.copy(slice.content);\n  for (var i = extra - 1; i >= 0; i--)\n    { node = $along.node(i).copy(Fragment.from(node)); }\n  return {start: node.resolveNoCache(slice.openStart + extra),\n          end: node.resolveNoCache(node.content.size - slice.openEnd - extra)}\n}\n\n// ::- You can [_resolve_](#model.Node.resolve) a position to get more\n// information about it. Objects of this class represent such a\n// resolved position, providing various pieces of context information,\n// and some helper methods.\n//\n// Throughout this interface, methods that take an optional `depth`\n// parameter will interpret undefined as `this.depth` and negative\n// numbers as `this.depth + value`.\nvar ResolvedPos = function ResolvedPos(pos, path, parentOffset) {\n  // :: number The position that was resolved.\n  this.pos = pos;\n  this.path = path;\n  // :: number\n  // The number of levels the parent node is from the root. If this\n  // position points directly into the root node, it is 0. If it\n  // points into a top-level paragraph, 1, and so on.\n  this.depth = path.length / 3 - 1;\n  // :: number The offset this position has into its parent node.\n  this.parentOffset = parentOffset;\n};\n\nvar prototypeAccessors$2 = { parent: { configurable: true },doc: { configurable: true },textOffset: { configurable: true },nodeAfter: { configurable: true },nodeBefore: { configurable: true } };\n\nResolvedPos.prototype.resolveDepth = function resolveDepth (val) {\n  if (val == null) { return this.depth }\n  if (val < 0) { return this.depth + val }\n  return val\n};\n\n// :: Node\n// The parent node that the position points into. Note that even if\n// a position points into a text node, that node is not considered\n// the parent—text nodes are ‘flat’ in this model, and have no content.\nprototypeAccessors$2.parent.get = function () { return this.node(this.depth) };\n\n// :: Node\n// The root node in which the position was resolved.\nprototypeAccessors$2.doc.get = function () { return this.node(0) };\n\n// :: (?number) → Node\n// The ancestor node at the given level. `p.node(p.depth)` is the\n// same as `p.parent`.\nResolvedPos.prototype.node = function node (depth) { return this.path[this.resolveDepth(depth) * 3] };\n\n// :: (?number) → number\n// The index into the ancestor at the given level. If this points at\n// the 3rd node in the 2nd paragraph on the top level, for example,\n// `p.index(0)` is 1 and `p.index(1)` is 2.\nResolvedPos.prototype.index = function index (depth) { return this.path[this.resolveDepth(depth) * 3 + 1] };\n\n// :: (?number) → number\n// The index pointing after this position into the ancestor at the\n// given level.\nResolvedPos.prototype.indexAfter = function indexAfter (depth) {\n  depth = this.resolveDepth(depth);\n  return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1)\n};\n\n// :: (?number) → number\n// The (absolute) position at the start of the node at the given\n// level.\nResolvedPos.prototype.start = function start (depth) {\n  depth = this.resolveDepth(depth);\n  return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n};\n\n// :: (?number) → number\n// The (absolute) position at the end of the node at the given\n// level.\nResolvedPos.prototype.end = function end (depth) {\n  depth = this.resolveDepth(depth);\n  return this.start(depth) + this.node(depth).content.size\n};\n\n// :: (?number) → number\n// The (absolute) position directly before the wrapping node at the\n// given level, or, when `depth` is `this.depth + 1`, the original\n// position.\nResolvedPos.prototype.before = function before (depth) {\n  depth = this.resolveDepth(depth);\n  if (!depth) { throw new RangeError(\"There is no position before the top-level node\") }\n  return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1]\n};\n\n// :: (?number) → number\n// The (absolute) position directly after the wrapping node at the\n// given level, or the original position when `depth` is `this.depth + 1`.\nResolvedPos.prototype.after = function after (depth) {\n  depth = this.resolveDepth(depth);\n  if (!depth) { throw new RangeError(\"There is no position after the top-level node\") }\n  return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize\n};\n\n// :: number\n// When this position points into a text node, this returns the\n// distance between the position and the start of the text node.\n// Will be zero for positions that point between nodes.\nprototypeAccessors$2.textOffset.get = function () { return this.pos - this.path[this.path.length - 1] };\n\n// :: ?Node\n// Get the node directly after the position, if any. If the position\n// points into a text node, only the part of that node after the\n// position is returned.\nprototypeAccessors$2.nodeAfter.get = function () {\n  var parent = this.parent, index = this.index(this.depth);\n  if (index == parent.childCount) { return null }\n  var dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index);\n  return dOff ? parent.child(index).cut(dOff) : child\n};\n\n// :: ?Node\n// Get the node directly before the position, if any. If the\n// position points into a text node, only the part of that node\n// before the position is returned.\nprototypeAccessors$2.nodeBefore.get = function () {\n  var index = this.index(this.depth);\n  var dOff = this.pos - this.path[this.path.length - 1];\n  if (dOff) { return this.parent.child(index).cut(0, dOff) }\n  return index == 0 ? null : this.parent.child(index - 1)\n};\n\n// :: (number, ?number) → number\n// Get the position at the given index in the parent node at the\n// given depth (which defaults to `this.depth`).\nResolvedPos.prototype.posAtIndex = function posAtIndex (index, depth) {\n  depth = this.resolveDepth(depth);\n  var node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n  for (var i = 0; i < index; i++) { pos += node.child(i).nodeSize; }\n  return pos\n};\n\n// :: () → [Mark]\n// Get the marks at this position, factoring in the surrounding\n// marks' [`inclusive`](#model.MarkSpec.inclusive) property. If the\n// position is at the start of a non-empty node, the marks of the\n// node after it (if any) are returned.\nResolvedPos.prototype.marks = function marks () {\n  var parent = this.parent, index = this.index();\n\n  // In an empty parent, return the empty array\n  if (parent.content.size == 0) { return Mark.none }\n\n  // When inside a text node, just return the text node's marks\n  if (this.textOffset) { return parent.child(index).marks }\n\n  var main = parent.maybeChild(index - 1), other = parent.maybeChild(index);\n  // If the `after` flag is true of there is no node before, make\n  // the node after this position the main reference.\n  if (!main) { var tmp = main; main = other; other = tmp; }\n\n  // Use all marks in the main node, except those that have\n  // `inclusive` set to false and are not present in the other node.\n  var marks = main.marks;\n  for (var i = 0; i < marks.length; i++)\n    { if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n      { marks = marks[i--].removeFromSet(marks); } }\n\n  return marks\n};\n\n// :: (ResolvedPos) → ?[Mark]\n// Get the marks after the current position, if any, except those\n// that are non-inclusive and not present at position `$end`. This\n// is mostly useful for getting the set of marks to preserve after a\n// deletion. Will return `null` if this position is at the end of\n// its parent node or its parent node isn't a textblock (in which\n// case no marks should be preserved).\nResolvedPos.prototype.marksAcross = function marksAcross ($end) {\n  var after = this.parent.maybeChild(this.index());\n  if (!after || !after.isInline) { return null }\n\n  var marks = after.marks, next = $end.parent.maybeChild($end.index());\n  for (var i = 0; i < marks.length; i++)\n    { if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n      { marks = marks[i--].removeFromSet(marks); } }\n  return marks\n};\n\n// :: (number) → number\n// The depth up to which this position and the given (non-resolved)\n// position share the same parent nodes.\nResolvedPos.prototype.sharedDepth = function sharedDepth (pos) {\n  for (var depth = this.depth; depth > 0; depth--)\n    { if (this.start(depth) <= pos && this.end(depth) >= pos) { return depth } }\n  return 0\n};\n\n// :: (?ResolvedPos, ?(Node) → bool) → ?NodeRange\n// Returns a range based on the place where this position and the\n// given position diverge around block content. If both point into\n// the same textblock, for example, a range around that textblock\n// will be returned. If they point into different blocks, the range\n// around those blocks in their shared ancestor is returned. You can\n// pass in an optional predicate that will be called with a parent\n// node to see if a range into that parent is acceptable.\nResolvedPos.prototype.blockRange = function blockRange (other, pred) {\n    if ( other === void 0 ) other = this;\n\n  if (other.pos < this.pos) { return other.blockRange(this) }\n  for (var d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n    { if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n      { return new NodeRange(this, other, d) } }\n};\n\n// :: (ResolvedPos) → bool\n// Query whether the given position shares the same parent node.\nResolvedPos.prototype.sameParent = function sameParent (other) {\n  return this.pos - this.parentOffset == other.pos - other.parentOffset\n};\n\n// :: (ResolvedPos) → ResolvedPos\n// Return the greater of this and the given position.\nResolvedPos.prototype.max = function max (other) {\n  return other.pos > this.pos ? other : this\n};\n\n// :: (ResolvedPos) → ResolvedPos\n// Return the smaller of this and the given position.\nResolvedPos.prototype.min = function min (other) {\n  return other.pos < this.pos ? other : this\n};\n\nResolvedPos.prototype.toString = function toString () {\n  var str = \"\";\n  for (var i = 1; i <= this.depth; i++)\n    { str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1); }\n  return str + \":\" + this.parentOffset\n};\n\nResolvedPos.resolve = function resolve (doc, pos) {\n  if (!(pos >= 0 && pos <= doc.content.size)) { throw new RangeError(\"Position \" + pos + \" out of range\") }\n  var path = [];\n  var start = 0, parentOffset = pos;\n  for (var node = doc;;) {\n    var ref = node.content.findIndex(parentOffset);\n      var index = ref.index;\n      var offset = ref.offset;\n    var rem = parentOffset - offset;\n    path.push(node, index, start + offset);\n    if (!rem) { break }\n    node = node.child(index);\n    if (node.isText) { break }\n    parentOffset = rem - 1;\n    start += offset + 1;\n  }\n  return new ResolvedPos(pos, path, parentOffset)\n};\n\nResolvedPos.resolveCached = function resolveCached (doc, pos) {\n  for (var i = 0; i < resolveCache.length; i++) {\n    var cached = resolveCache[i];\n    if (cached.pos == pos && cached.doc == doc) { return cached }\n  }\n  var result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos);\n  resolveCachePos = (resolveCachePos + 1) % resolveCacheSize;\n  return result\n};\n\nObject.defineProperties( ResolvedPos.prototype, prototypeAccessors$2 );\n\nvar resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12;\n\n// ::- Represents a flat range of content, i.e. one that starts and\n// ends in the same node.\nvar NodeRange = function NodeRange($from, $to, depth) {\n  // :: ResolvedPos A resolved position along the start of the\n  // content. May have a `depth` greater than this object's `depth`\n  // property, since these are the positions that were used to\n  // compute the range, not re-resolved positions directly at its\n  // boundaries.\n  this.$from = $from;\n  // :: ResolvedPos A position along the end of the content. See\n  // caveat for [`$from`](#model.NodeRange.$from).\n  this.$to = $to;\n  // :: number The depth of the node that this range points into.\n  this.depth = depth;\n};\n\nvar prototypeAccessors$1$1 = { start: { configurable: true },end: { configurable: true },parent: { configurable: true },startIndex: { configurable: true },endIndex: { configurable: true } };\n\n// :: number The position at the start of the range.\nprototypeAccessors$1$1.start.get = function () { return this.$from.before(this.depth + 1) };\n// :: number The position at the end of the range.\nprototypeAccessors$1$1.end.get = function () { return this.$to.after(this.depth + 1) };\n\n// :: Node The parent node that the range points into.\nprototypeAccessors$1$1.parent.get = function () { return this.$from.node(this.depth) };\n// :: number The start index of the range in the parent node.\nprototypeAccessors$1$1.startIndex.get = function () { return this.$from.index(this.depth) };\n// :: number The end index of the range in the parent node.\nprototypeAccessors$1$1.endIndex.get = function () { return this.$to.indexAfter(this.depth) };\n\nObject.defineProperties( NodeRange.prototype, prototypeAccessors$1$1 );\n\nvar emptyAttrs = Object.create(null);\n\n// ::- This class represents a node in the tree that makes up a\n// ProseMirror document. So a document is an instance of `Node`, with\n// children that are also instances of `Node`.\n//\n// Nodes are persistent data structures. Instead of changing them, you\n// create new ones with the content you want. Old ones keep pointing\n// at the old document shape. This is made cheaper by sharing\n// structure between the old and new data as much as possible, which a\n// tree shape like this (without back pointers) makes easy.\n//\n// **Do not** directly mutate the properties of a `Node` object. See\n// [the guide](/docs/guide/#doc) for more information.\nvar Node = function Node(type, attrs, content, marks) {\n  // :: NodeType\n  // The type of node that this is.\n  this.type = type;\n\n  // :: Object\n  // An object mapping attribute names to values. The kind of\n  // attributes allowed and required are\n  // [determined](#model.NodeSpec.attrs) by the node type.\n  this.attrs = attrs;\n\n  // :: Fragment\n  // A container holding the node's children.\n  this.content = content || Fragment.empty;\n\n  // :: [Mark]\n  // The marks (things like whether it is emphasized or part of a\n  // link) applied to this node.\n  this.marks = marks || Mark.none;\n};\n\nvar prototypeAccessors$3 = { nodeSize: { configurable: true },childCount: { configurable: true },textContent: { configurable: true },firstChild: { configurable: true },lastChild: { configurable: true },isBlock: { configurable: true },isTextblock: { configurable: true },inlineContent: { configurable: true },isInline: { configurable: true },isText: { configurable: true },isLeaf: { configurable: true },isAtom: { configurable: true } };\n\n// text:: ?string\n// For text nodes, this contains the node's text content.\n\n// :: number\n// The size of this node, as defined by the integer-based [indexing\n// scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n// amount of characters. For other leaf nodes, it is one. For\n// non-leaf nodes, it is the size of the content plus two (the start\n// and end token).\nprototypeAccessors$3.nodeSize.get = function () { return this.isLeaf ? 1 : 2 + this.content.size };\n\n// :: number\n// The number of children that the node has.\nprototypeAccessors$3.childCount.get = function () { return this.content.childCount };\n\n// :: (number) → Node\n// Get the child node at the given index. Raises an error when the\n// index is out of range.\nNode.prototype.child = function child (index) { return this.content.child(index) };\n\n// :: (number) → ?Node\n// Get the child node at the given index, if it exists.\nNode.prototype.maybeChild = function maybeChild (index) { return this.content.maybeChild(index) };\n\n// :: ((node: Node, offset: number, index: number))\n// Call `f` for every child node, passing the node, its offset\n// into this parent node, and its index.\nNode.prototype.forEach = function forEach (f) { this.content.forEach(f); };\n\n// :: (number, number, (node: Node, pos: number, parent: Node, index: number) → ?bool, ?number)\n// Invoke a callback for all descendant nodes recursively between\n// the given two positions that are relative to start of this node's\n// content. The callback is invoked with the node, its\n// parent-relative position, its parent node, and its child index.\n// When the callback returns false for a given node, that node's\n// children will not be recursed over. The last parameter can be\n// used to specify a starting position to count from.\nNode.prototype.nodesBetween = function nodesBetween (from, to, f, startPos) {\n    if ( startPos === void 0 ) startPos = 0;\n\n  this.content.nodesBetween(from, to, f, startPos, this);\n};\n\n// :: ((node: Node, pos: number, parent: Node) → ?bool)\n// Call the given callback for every descendant node. Doesn't\n// descend into a node when the callback returns `false`.\nNode.prototype.descendants = function descendants (f) {\n  this.nodesBetween(0, this.content.size, f);\n};\n\n// :: string\n// Concatenates all the text nodes found in this fragment and its\n// children.\nprototypeAccessors$3.textContent.get = function () { return this.textBetween(0, this.content.size, \"\") };\n\n// :: (number, number, ?string, ?string | ?(leafNode: Node) -> string) → string\n// Get all text between positions `from` and `to`. When\n// `blockSeparator` is given, it will be inserted whenever a new\n// block node is started. When `leafText` is given, it'll be\n// inserted for every non-text leaf node encountered.\nNode.prototype.textBetween = function textBetween (from, to, blockSeparator, leafText) {\n  return this.content.textBetween(from, to, blockSeparator, leafText)\n};\n\n// :: ?Node\n// Returns this node's first child, or `null` if there are no\n// children.\nprototypeAccessors$3.firstChild.get = function () { return this.content.firstChild };\n\n// :: ?Node\n// Returns this node's last child, or `null` if there are no\n// children.\nprototypeAccessors$3.lastChild.get = function () { return this.content.lastChild };\n\n// :: (Node) → bool\n// Test whether two nodes represent the same piece of document.\nNode.prototype.eq = function eq (other) {\n  return this == other || (this.sameMarkup(other) && this.content.eq(other.content))\n};\n\n// :: (Node) → bool\n// Compare the markup (type, attributes, and marks) of this node to\n// those of another. Returns `true` if both have the same markup.\nNode.prototype.sameMarkup = function sameMarkup (other) {\n  return this.hasMarkup(other.type, other.attrs, other.marks)\n};\n\n// :: (NodeType, ?Object, ?[Mark]) → bool\n// Check whether this node's markup correspond to the given type,\n// attributes, and marks.\nNode.prototype.hasMarkup = function hasMarkup (type, attrs, marks) {\n  return this.type == type &&\n    compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n    Mark.sameSet(this.marks, marks || Mark.none)\n};\n\n// :: (?Fragment) → Node\n// Create a new node with the same markup as this node, containing\n// the given content (or empty, if no content is given).\nNode.prototype.copy = function copy (content) {\n    if ( content === void 0 ) content = null;\n\n  if (content == this.content) { return this }\n  return new this.constructor(this.type, this.attrs, content, this.marks)\n};\n\n// :: ([Mark]) → Node\n// Create a copy of this node, with the given set of marks instead\n// of the node's own marks.\nNode.prototype.mark = function mark (marks) {\n  return marks == this.marks ? this : new this.constructor(this.type, this.attrs, this.content, marks)\n};\n\n// :: (number, ?number) → Node\n// Create a copy of this node with only the content between the\n// given positions. If `to` is not given, it defaults to the end of\n// the node.\nNode.prototype.cut = function cut (from, to) {\n  if (from == 0 && to == this.content.size) { return this }\n  return this.copy(this.content.cut(from, to))\n};\n\n// :: (number, ?number) → Slice\n// Cut out the part of the document between the given positions, and\n// return it as a `Slice` object.\nNode.prototype.slice = function slice (from, to, includeParents) {\n    if ( to === void 0 ) to = this.content.size;\n    if ( includeParents === void 0 ) includeParents = false;\n\n  if (from == to) { return Slice.empty }\n\n  var $from = this.resolve(from), $to = this.resolve(to);\n  var depth = includeParents ? 0 : $from.sharedDepth(to);\n  var start = $from.start(depth), node = $from.node(depth);\n  var content = node.content.cut($from.pos - start, $to.pos - start);\n  return new Slice(content, $from.depth - depth, $to.depth - depth)\n};\n\n// :: (number, number, Slice) → Node\n// Replace the part of the document between the given positions with\n// the given slice. The slice must 'fit', meaning its open sides\n// must be able to connect to the surrounding content, and its\n// content nodes must be valid children for the node they are placed\n// into. If any of this is violated, an error of type\n// [`ReplaceError`](#model.ReplaceError) is thrown.\nNode.prototype.replace = function replace$1 (from, to, slice) {\n  return replace(this.resolve(from), this.resolve(to), slice)\n};\n\n// :: (number) → ?Node\n// Find the node directly after the given position.\nNode.prototype.nodeAt = function nodeAt (pos) {\n  for (var node = this;;) {\n    var ref = node.content.findIndex(pos);\n      var index = ref.index;\n      var offset = ref.offset;\n    node = node.maybeChild(index);\n    if (!node) { return null }\n    if (offset == pos || node.isText) { return node }\n    pos -= offset + 1;\n  }\n};\n\n// :: (number) → {node: ?Node, index: number, offset: number}\n// Find the (direct) child node after the given offset, if any,\n// and return it along with its index and offset relative to this\n// node.\nNode.prototype.childAfter = function childAfter (pos) {\n  var ref = this.content.findIndex(pos);\n    var index = ref.index;\n    var offset = ref.offset;\n  return {node: this.content.maybeChild(index), index: index, offset: offset}\n};\n\n// :: (number) → {node: ?Node, index: number, offset: number}\n// Find the (direct) child node before the given offset, if any,\n// and return it along with its index and offset relative to this\n// node.\nNode.prototype.childBefore = function childBefore (pos) {\n  if (pos == 0) { return {node: null, index: 0, offset: 0} }\n  var ref = this.content.findIndex(pos);\n    var index = ref.index;\n    var offset = ref.offset;\n  if (offset < pos) { return {node: this.content.child(index), index: index, offset: offset} }\n  var node = this.content.child(index - 1);\n  return {node: node, index: index - 1, offset: offset - node.nodeSize}\n};\n\n// :: (number) → ResolvedPos\n// Resolve the given position in the document, returning an\n// [object](#model.ResolvedPos) with information about its context.\nNode.prototype.resolve = function resolve (pos) { return ResolvedPos.resolveCached(this, pos) };\n\nNode.prototype.resolveNoCache = function resolveNoCache (pos) { return ResolvedPos.resolve(this, pos) };\n\n// :: (number, number, union<Mark, MarkType>) → bool\n// Test whether a given mark or mark type occurs in this document\n// between the two given positions.\nNode.prototype.rangeHasMark = function rangeHasMark (from, to, type) {\n  var found = false;\n  if (to > from) { this.nodesBetween(from, to, function (node) {\n    if (type.isInSet(node.marks)) { found = true; }\n    return !found\n  }); }\n  return found\n};\n\n// :: bool\n// True when this is a block (non-inline node)\nprototypeAccessors$3.isBlock.get = function () { return this.type.isBlock };\n\n// :: bool\n// True when this is a textblock node, a block node with inline\n// content.\nprototypeAccessors$3.isTextblock.get = function () { return this.type.isTextblock };\n\n// :: bool\n// True when this node allows inline content.\nprototypeAccessors$3.inlineContent.get = function () { return this.type.inlineContent };\n\n// :: bool\n// True when this is an inline node (a text node or a node that can\n// appear among text).\nprototypeAccessors$3.isInline.get = function () { return this.type.isInline };\n\n// :: bool\n// True when this is a text node.\nprototypeAccessors$3.isText.get = function () { return this.type.isText };\n\n// :: bool\n// True when this is a leaf node.\nprototypeAccessors$3.isLeaf.get = function () { return this.type.isLeaf };\n\n// :: bool\n// True when this is an atom, i.e. when it does not have directly\n// editable content. This is usually the same as `isLeaf`, but can\n// be configured with the [`atom` property](#model.NodeSpec.atom) on\n// a node's spec (typically used when the node is displayed as an\n// uneditable [node view](#view.NodeView)).\nprototypeAccessors$3.isAtom.get = function () { return this.type.isAtom };\n\n// :: () → string\n// Return a string representation of this node for debugging\n// purposes.\nNode.prototype.toString = function toString () {\n  if (this.type.spec.toDebugString) { return this.type.spec.toDebugString(this) }\n  var name = this.type.name;\n  if (this.content.size)\n    { name += \"(\" + this.content.toStringInner() + \")\"; }\n  return wrapMarks(this.marks, name)\n};\n\n// :: (number) → ContentMatch\n// Get the content match in this node at the given index.\nNode.prototype.contentMatchAt = function contentMatchAt (index) {\n  var match = this.type.contentMatch.matchFragment(this.content, 0, index);\n  if (!match) { throw new Error(\"Called contentMatchAt on a node with invalid content\") }\n  return match\n};\n\n// :: (number, number, ?Fragment, ?number, ?number) → bool\n// Test whether replacing the range between `from` and `to` (by\n// child index) with the given replacement fragment (which defaults\n// to the empty fragment) would leave the node's content valid. You\n// can optionally pass `start` and `end` indices into the\n// replacement fragment.\nNode.prototype.canReplace = function canReplace (from, to, replacement, start, end) {\n    if ( replacement === void 0 ) replacement = Fragment.empty;\n    if ( start === void 0 ) start = 0;\n    if ( end === void 0 ) end = replacement.childCount;\n\n  var one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n  var two = one && one.matchFragment(this.content, to);\n  if (!two || !two.validEnd) { return false }\n  for (var i = start; i < end; i++) { if (!this.type.allowsMarks(replacement.child(i).marks)) { return false } }\n  return true\n};\n\n// :: (number, number, NodeType, ?[Mark]) → bool\n// Test whether replacing the range `from` to `to` (by index) with a\n// node of the given type would leave the node's content valid.\nNode.prototype.canReplaceWith = function canReplaceWith (from, to, type, marks) {\n  if (marks && !this.type.allowsMarks(marks)) { return false }\n  var start = this.contentMatchAt(from).matchType(type);\n  var end = start && start.matchFragment(this.content, to);\n  return end ? end.validEnd : false\n};\n\n// :: (Node) → bool\n// Test whether the given node's content could be appended to this\n// node. If that node is empty, this will only return true if there\n// is at least one node type that can appear in both nodes (to avoid\n// merging completely incompatible nodes).\nNode.prototype.canAppend = function canAppend (other) {\n  if (other.content.size) { return this.canReplace(this.childCount, this.childCount, other.content) }\n  else { return this.type.compatibleContent(other.type) }\n};\n\n// :: ()\n// Check whether this node and its descendants conform to the\n// schema, and raise error when they do not.\nNode.prototype.check = function check () {\n  if (!this.type.validContent(this.content))\n    { throw new RangeError((\"Invalid content for node \" + (this.type.name) + \": \" + (this.content.toString().slice(0, 50)))) }\n  var copy = Mark.none;\n  for (var i = 0; i < this.marks.length; i++) { copy = this.marks[i].addToSet(copy); }\n  if (!Mark.sameSet(copy, this.marks))\n    { throw new RangeError((\"Invalid collection of marks for node \" + (this.type.name) + \": \" + (this.marks.map(function (m) { return m.type.name; })))) }\n  this.content.forEach(function (node) { return node.check(); });\n};\n\n// :: () → Object\n// Return a JSON-serializeable representation of this node.\nNode.prototype.toJSON = function toJSON () {\n  var obj = {type: this.type.name};\n  for (var _ in this.attrs) {\n    obj.attrs = this.attrs;\n    break\n  }\n  if (this.content.size)\n    { obj.content = this.content.toJSON(); }\n  if (this.marks.length)\n    { obj.marks = this.marks.map(function (n) { return n.toJSON(); }); }\n  return obj\n};\n\n// :: (Schema, Object) → Node\n// Deserialize a node from its JSON representation.\nNode.fromJSON = function fromJSON (schema, json) {\n  if (!json) { throw new RangeError(\"Invalid input for Node.fromJSON\") }\n  var marks = null;\n  if (json.marks) {\n    if (!Array.isArray(json.marks)) { throw new RangeError(\"Invalid mark data for Node.fromJSON\") }\n    marks = json.marks.map(schema.markFromJSON);\n  }\n  if (json.type == \"text\") {\n    if (typeof json.text != \"string\") { throw new RangeError(\"Invalid text node in JSON\") }\n    return schema.text(json.text, marks)\n  }\n  var content = Fragment.fromJSON(schema, json.content);\n  return schema.nodeType(json.type).create(json.attrs, content, marks)\n};\n\nObject.defineProperties( Node.prototype, prototypeAccessors$3 );\n\nvar TextNode = /*@__PURE__*/(function (Node) {\n  function TextNode(type, attrs, content, marks) {\n    Node.call(this, type, attrs, null, marks);\n\n    if (!content) { throw new RangeError(\"Empty text nodes are not allowed\") }\n\n    this.text = content;\n  }\n\n  if ( Node ) TextNode.__proto__ = Node;\n  TextNode.prototype = Object.create( Node && Node.prototype );\n  TextNode.prototype.constructor = TextNode;\n\n  var prototypeAccessors$1 = { textContent: { configurable: true },nodeSize: { configurable: true } };\n\n  TextNode.prototype.toString = function toString () {\n    if (this.type.spec.toDebugString) { return this.type.spec.toDebugString(this) }\n    return wrapMarks(this.marks, JSON.stringify(this.text))\n  };\n\n  prototypeAccessors$1.textContent.get = function () { return this.text };\n\n  TextNode.prototype.textBetween = function textBetween (from, to) { return this.text.slice(from, to) };\n\n  prototypeAccessors$1.nodeSize.get = function () { return this.text.length };\n\n  TextNode.prototype.mark = function mark (marks) {\n    return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks)\n  };\n\n  TextNode.prototype.withText = function withText (text) {\n    if (text == this.text) { return this }\n    return new TextNode(this.type, this.attrs, text, this.marks)\n  };\n\n  TextNode.prototype.cut = function cut (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.text.length;\n\n    if (from == 0 && to == this.text.length) { return this }\n    return this.withText(this.text.slice(from, to))\n  };\n\n  TextNode.prototype.eq = function eq (other) {\n    return this.sameMarkup(other) && this.text == other.text\n  };\n\n  TextNode.prototype.toJSON = function toJSON () {\n    var base = Node.prototype.toJSON.call(this);\n    base.text = this.text;\n    return base\n  };\n\n  Object.defineProperties( TextNode.prototype, prototypeAccessors$1 );\n\n  return TextNode;\n}(Node));\n\nfunction wrapMarks(marks, str) {\n  for (var i = marks.length - 1; i >= 0; i--)\n    { str = marks[i].type.name + \"(\" + str + \")\"; }\n  return str\n}\n\n// ::- Instances of this class represent a match state of a node\n// type's [content expression](#model.NodeSpec.content), and can be\n// used to find out whether further content matches here, and whether\n// a given position is a valid end of the node.\nvar ContentMatch = function ContentMatch(validEnd) {\n  // :: bool\n  // True when this match state represents a valid end of the node.\n  this.validEnd = validEnd;\n  this.next = [];\n  this.wrapCache = [];\n};\n\nvar prototypeAccessors$4 = { inlineContent: { configurable: true },defaultType: { configurable: true },edgeCount: { configurable: true } };\n\nContentMatch.parse = function parse (string, nodeTypes) {\n  var stream = new TokenStream(string, nodeTypes);\n  if (stream.next == null) { return ContentMatch.empty }\n  var expr = parseExpr(stream);\n  if (stream.next) { stream.err(\"Unexpected trailing text\"); }\n  var match = dfa(nfa(expr));\n  checkForDeadEnds(match, stream);\n  return match\n};\n\n// :: (NodeType) → ?ContentMatch\n// Match a node type, returning a match after that node if\n// successful.\nContentMatch.prototype.matchType = function matchType (type) {\n  for (var i = 0; i < this.next.length; i += 2)\n    { if (this.next[i] == type) { return this.next[i + 1] } }\n  return null\n};\n\n// :: (Fragment, ?number, ?number) → ?ContentMatch\n// Try to match a fragment. Returns the resulting match when\n// successful.\nContentMatch.prototype.matchFragment = function matchFragment (frag, start, end) {\n    if ( start === void 0 ) start = 0;\n    if ( end === void 0 ) end = frag.childCount;\n\n  var cur = this;\n  for (var i = start; cur && i < end; i++)\n    { cur = cur.matchType(frag.child(i).type); }\n  return cur\n};\n\nprototypeAccessors$4.inlineContent.get = function () {\n  var first = this.next[0];\n  return first ? first.isInline : false\n};\n\n// :: ?NodeType\n// Get the first matching node type at this match position that can\n// be generated.\nprototypeAccessors$4.defaultType.get = function () {\n  for (var i = 0; i < this.next.length; i += 2) {\n    var type = this.next[i];\n    if (!(type.isText || type.hasRequiredAttrs())) { return type }\n  }\n};\n\nContentMatch.prototype.compatible = function compatible (other) {\n  for (var i = 0; i < this.next.length; i += 2)\n    { for (var j = 0; j < other.next.length; j += 2)\n      { if (this.next[i] == other.next[j]) { return true } } }\n  return false\n};\n\n// :: (Fragment, bool, ?number) → ?Fragment\n// Try to match the given fragment, and if that fails, see if it can\n// be made to match by inserting nodes in front of it. When\n// successful, return a fragment of inserted nodes (which may be\n// empty if nothing had to be inserted). When `toEnd` is true, only\n// return a fragment if the resulting match goes to the end of the\n// content expression.\nContentMatch.prototype.fillBefore = function fillBefore (after, toEnd, startIndex) {\n    if ( toEnd === void 0 ) toEnd = false;\n    if ( startIndex === void 0 ) startIndex = 0;\n\n  var seen = [this];\n  function search(match, types) {\n    var finished = match.matchFragment(after, startIndex);\n    if (finished && (!toEnd || finished.validEnd))\n      { return Fragment.from(types.map(function (tp) { return tp.createAndFill(); })) }\n\n    for (var i = 0; i < match.next.length; i += 2) {\n      var type = match.next[i], next = match.next[i + 1];\n      if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n        seen.push(next);\n        var found = search(next, types.concat(type));\n        if (found) { return found }\n      }\n    }\n  }\n\n  return search(this, [])\n};\n\n// :: (NodeType) → ?[NodeType]\n// Find a set of wrapping node types that would allow a node of the\n// given type to appear at this position. The result may be empty\n// (when it fits directly) and will be null when no such wrapping\n// exists.\nContentMatch.prototype.findWrapping = function findWrapping (target) {\n  for (var i = 0; i < this.wrapCache.length; i += 2)\n    { if (this.wrapCache[i] == target) { return this.wrapCache[i + 1] } }\n  var computed = this.computeWrapping(target);\n  this.wrapCache.push(target, computed);\n  return computed\n};\n\nContentMatch.prototype.computeWrapping = function computeWrapping (target) {\n  var seen = Object.create(null), active = [{match: this, type: null, via: null}];\n  while (active.length) {\n    var current = active.shift(), match = current.match;\n    if (match.matchType(target)) {\n      var result = [];\n      for (var obj = current; obj.type; obj = obj.via)\n        { result.push(obj.type); }\n      return result.reverse()\n    }\n    for (var i = 0; i < match.next.length; i += 2) {\n      var type = match.next[i];\n      if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || match.next[i + 1].validEnd)) {\n        active.push({match: type.contentMatch, type: type, via: current});\n        seen[type.name] = true;\n      }\n    }\n  }\n};\n\n// :: number\n// The number of outgoing edges this node has in the finite\n// automaton that describes the content expression.\nprototypeAccessors$4.edgeCount.get = function () {\n  return this.next.length >> 1\n};\n\n// :: (number) → {type: NodeType, next: ContentMatch}\n// Get the _n_​th outgoing edge from this node in the finite\n// automaton that describes the content expression.\nContentMatch.prototype.edge = function edge (n) {\n  var i = n << 1;\n  if (i >= this.next.length) { throw new RangeError((\"There's no \" + n + \"th edge in this content match\")) }\n  return {type: this.next[i], next: this.next[i + 1]}\n};\n\nContentMatch.prototype.toString = function toString () {\n  var seen = [];\n  function scan(m) {\n    seen.push(m);\n    for (var i = 1; i < m.next.length; i += 2)\n      { if (seen.indexOf(m.next[i]) == -1) { scan(m.next[i]); } }\n  }\n  scan(this);\n  return seen.map(function (m, i) {\n    var out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n    for (var i$1 = 0; i$1 < m.next.length; i$1 += 2)\n      { out += (i$1 ? \", \" : \"\") + m.next[i$1].name + \"->\" + seen.indexOf(m.next[i$1 + 1]); }\n    return out\n  }).join(\"\\n\")\n};\n\nObject.defineProperties( ContentMatch.prototype, prototypeAccessors$4 );\n\nContentMatch.empty = new ContentMatch(true);\n\nvar TokenStream = function TokenStream(string, nodeTypes) {\n  this.string = string;\n  this.nodeTypes = nodeTypes;\n  this.inline = null;\n  this.pos = 0;\n  this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n  if (this.tokens[this.tokens.length - 1] == \"\") { this.tokens.pop(); }\n  if (this.tokens[0] == \"\") { this.tokens.shift(); }\n};\n\nvar prototypeAccessors$1$2 = { next: { configurable: true } };\n\nprototypeAccessors$1$2.next.get = function () { return this.tokens[this.pos] };\n\nTokenStream.prototype.eat = function eat (tok) { return this.next == tok && (this.pos++ || true) };\n\nTokenStream.prototype.err = function err (str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\") };\n\nObject.defineProperties( TokenStream.prototype, prototypeAccessors$1$2 );\n\nfunction parseExpr(stream) {\n  var exprs = [];\n  do { exprs.push(parseExprSeq(stream)); }\n  while (stream.eat(\"|\"))\n  return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs: exprs}\n}\n\nfunction parseExprSeq(stream) {\n  var exprs = [];\n  do { exprs.push(parseExprSubscript(stream)); }\n  while (stream.next && stream.next != \")\" && stream.next != \"|\")\n  return exprs.length == 1 ? exprs[0] : {type: \"seq\", exprs: exprs}\n}\n\nfunction parseExprSubscript(stream) {\n  var expr = parseExprAtom(stream);\n  for (;;) {\n    if (stream.eat(\"+\"))\n      { expr = {type: \"plus\", expr: expr}; }\n    else if (stream.eat(\"*\"))\n      { expr = {type: \"star\", expr: expr}; }\n    else if (stream.eat(\"?\"))\n      { expr = {type: \"opt\", expr: expr}; }\n    else if (stream.eat(\"{\"))\n      { expr = parseExprRange(stream, expr); }\n    else { break }\n  }\n  return expr\n}\n\nfunction parseNum(stream) {\n  if (/\\D/.test(stream.next)) { stream.err(\"Expected number, got '\" + stream.next + \"'\"); }\n  var result = Number(stream.next);\n  stream.pos++;\n  return result\n}\n\nfunction parseExprRange(stream, expr) {\n  var min = parseNum(stream), max = min;\n  if (stream.eat(\",\")) {\n    if (stream.next != \"}\") { max = parseNum(stream); }\n    else { max = -1; }\n  }\n  if (!stream.eat(\"}\")) { stream.err(\"Unclosed braced range\"); }\n  return {type: \"range\", min: min, max: max, expr: expr}\n}\n\nfunction resolveName(stream, name) {\n  var types = stream.nodeTypes, type = types[name];\n  if (type) { return [type] }\n  var result = [];\n  for (var typeName in types) {\n    var type$1 = types[typeName];\n    if (type$1.groups.indexOf(name) > -1) { result.push(type$1); }\n  }\n  if (result.length == 0) { stream.err(\"No node type or group '\" + name + \"' found\"); }\n  return result\n}\n\nfunction parseExprAtom(stream) {\n  if (stream.eat(\"(\")) {\n    var expr = parseExpr(stream);\n    if (!stream.eat(\")\")) { stream.err(\"Missing closing paren\"); }\n    return expr\n  } else if (!/\\W/.test(stream.next)) {\n    var exprs = resolveName(stream, stream.next).map(function (type) {\n      if (stream.inline == null) { stream.inline = type.isInline; }\n      else if (stream.inline != type.isInline) { stream.err(\"Mixing inline and block content\"); }\n      return {type: \"name\", value: type}\n    });\n    stream.pos++;\n    return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs: exprs}\n  } else {\n    stream.err(\"Unexpected token '\" + stream.next + \"'\");\n  }\n}\n\n// The code below helps compile a regular-expression-like language\n// into a deterministic finite automaton. For a good introduction to\n// these concepts, see https://swtch.com/~rsc/regexp/regexp1.html\n\n// : (Object) → [[{term: ?any, to: number}]]\n// Construct an NFA from an expression as returned by the parser. The\n// NFA is represented as an array of states, which are themselves\n// arrays of edges, which are `{term, to}` objects. The first state is\n// the entry state and the last node is the success state.\n//\n// Note that unlike typical NFAs, the edge ordering in this one is\n// significant, in that it is used to contruct filler content when\n// necessary.\nfunction nfa(expr) {\n  var nfa = [[]];\n  connect(compile(expr, 0), node());\n  return nfa\n\n  function node() { return nfa.push([]) - 1 }\n  function edge(from, to, term) {\n    var edge = {term: term, to: to};\n    nfa[from].push(edge);\n    return edge\n  }\n  function connect(edges, to) { edges.forEach(function (edge) { return edge.to = to; }); }\n\n  function compile(expr, from) {\n    if (expr.type == \"choice\") {\n      return expr.exprs.reduce(function (out, expr) { return out.concat(compile(expr, from)); }, [])\n    } else if (expr.type == \"seq\") {\n      for (var i = 0;; i++) {\n        var next = compile(expr.exprs[i], from);\n        if (i == expr.exprs.length - 1) { return next }\n        connect(next, from = node());\n      }\n    } else if (expr.type == \"star\") {\n      var loop = node();\n      edge(from, loop);\n      connect(compile(expr.expr, loop), loop);\n      return [edge(loop)]\n    } else if (expr.type == \"plus\") {\n      var loop$1 = node();\n      connect(compile(expr.expr, from), loop$1);\n      connect(compile(expr.expr, loop$1), loop$1);\n      return [edge(loop$1)]\n    } else if (expr.type == \"opt\") {\n      return [edge(from)].concat(compile(expr.expr, from))\n    } else if (expr.type == \"range\") {\n      var cur = from;\n      for (var i$1 = 0; i$1 < expr.min; i$1++) {\n        var next$1 = node();\n        connect(compile(expr.expr, cur), next$1);\n        cur = next$1;\n      }\n      if (expr.max == -1) {\n        connect(compile(expr.expr, cur), cur);\n      } else {\n        for (var i$2 = expr.min; i$2 < expr.max; i$2++) {\n          var next$2 = node();\n          edge(cur, next$2);\n          connect(compile(expr.expr, cur), next$2);\n          cur = next$2;\n        }\n      }\n      return [edge(cur)]\n    } else if (expr.type == \"name\") {\n      return [edge(from, null, expr.value)]\n    }\n  }\n}\n\nfunction cmp(a, b) { return b - a }\n\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n  var result = [];\n  scan(node);\n  return result.sort(cmp)\n\n  function scan(node) {\n    var edges = nfa[node];\n    if (edges.length == 1 && !edges[0].term) { return scan(edges[0].to) }\n    result.push(node);\n    for (var i = 0; i < edges.length; i++) {\n      var ref = edges[i];\n      var term = ref.term;\n      var to = ref.to;\n      if (!term && result.indexOf(to) == -1) { scan(to); }\n    }\n  }\n}\n\n// : ([[{term: ?any, to: number}]]) → ContentMatch\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n  var labeled = Object.create(null);\n  return explore(nullFrom(nfa, 0))\n\n  function explore(states) {\n    var out = [];\n    states.forEach(function (node) {\n      nfa[node].forEach(function (ref) {\n        var term = ref.term;\n        var to = ref.to;\n\n        if (!term) { return }\n        var known = out.indexOf(term), set = known > -1 && out[known + 1];\n        nullFrom(nfa, to).forEach(function (node) {\n          if (!set) { out.push(term, set = []); }\n          if (set.indexOf(node) == -1) { set.push(node); }\n        });\n      });\n    });\n    var state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n    for (var i = 0; i < out.length; i += 2) {\n      var states$1 = out[i + 1].sort(cmp);\n      state.next.push(out[i], labeled[states$1.join(\",\")] || explore(states$1));\n    }\n    return state\n  }\n}\n\nfunction checkForDeadEnds(match, stream) {\n  for (var i = 0, work = [match]; i < work.length; i++) {\n    var state = work[i], dead = !state.validEnd, nodes = [];\n    for (var j = 0; j < state.next.length; j += 2) {\n      var node = state.next[j], next = state.next[j + 1];\n      nodes.push(node.name);\n      if (dead && !(node.isText || node.hasRequiredAttrs())) { dead = false; }\n      if (work.indexOf(next) == -1) { work.push(next); }\n    }\n    if (dead) { stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\"); }\n  }\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n  var defaults = Object.create(null);\n  for (var attrName in attrs) {\n    var attr = attrs[attrName];\n    if (!attr.hasDefault) { return null }\n    defaults[attrName] = attr.default;\n  }\n  return defaults\n}\n\nfunction computeAttrs(attrs, value) {\n  var built = Object.create(null);\n  for (var name in attrs) {\n    var given = value && value[name];\n    if (given === undefined) {\n      var attr = attrs[name];\n      if (attr.hasDefault) { given = attr.default; }\n      else { throw new RangeError(\"No value supplied for attribute \" + name) }\n    }\n    built[name] = given;\n  }\n  return built\n}\n\nfunction initAttrs(attrs) {\n  var result = Object.create(null);\n  if (attrs) { for (var name in attrs) { result[name] = new Attribute(attrs[name]); } }\n  return result\n}\n\n// ::- Node types are objects allocated once per `Schema` and used to\n// [tag](#model.Node.type) `Node` instances. They contain information\n// about the node type, such as its name and what kind of node it\n// represents.\nvar NodeType = function NodeType(name, schema, spec) {\n  // :: string\n  // The name the node type has in this schema.\n  this.name = name;\n\n  // :: Schema\n  // A link back to the `Schema` the node type belongs to.\n  this.schema = schema;\n\n  // :: NodeSpec\n  // The spec that this type is based on\n  this.spec = spec;\n\n  this.groups = spec.group ? spec.group.split(\" \") : [];\n  this.attrs = initAttrs(spec.attrs);\n\n  this.defaultAttrs = defaultAttrs(this.attrs);\n\n  // :: ContentMatch\n  // The starting match of the node type's content expression.\n  this.contentMatch = null;\n\n  // : ?[MarkType]\n  // The set of marks allowed in this node. `null` means all marks\n  // are allowed.\n  this.markSet = null;\n\n  // :: bool\n  // True if this node type has inline content.\n  this.inlineContent = null;\n\n  // :: bool\n  // True if this is a block type\n  this.isBlock = !(spec.inline || name == \"text\");\n\n  // :: bool\n  // True if this is the text node type.\n  this.isText = name == \"text\";\n};\n\nvar prototypeAccessors$5 = { isInline: { configurable: true },isTextblock: { configurable: true },isLeaf: { configurable: true },isAtom: { configurable: true } };\n\n// :: bool\n// True if this is an inline type.\nprototypeAccessors$5.isInline.get = function () { return !this.isBlock };\n\n// :: bool\n// True if this is a textblock type, a block that contains inline\n// content.\nprototypeAccessors$5.isTextblock.get = function () { return this.isBlock && this.inlineContent };\n\n// :: bool\n// True for node types that allow no content.\nprototypeAccessors$5.isLeaf.get = function () { return this.contentMatch == ContentMatch.empty };\n\n// :: bool\n// True when this node is an atom, i.e. when it does not have\n// directly editable content.\nprototypeAccessors$5.isAtom.get = function () { return this.isLeaf || this.spec.atom };\n\n// :: () → bool\n// Tells you whether this node type has any required attributes.\nNodeType.prototype.hasRequiredAttrs = function hasRequiredAttrs () {\n  for (var n in this.attrs) { if (this.attrs[n].isRequired) { return true } }\n  return false\n};\n\nNodeType.prototype.compatibleContent = function compatibleContent (other) {\n  return this == other || this.contentMatch.compatible(other.contentMatch)\n};\n\nNodeType.prototype.computeAttrs = function computeAttrs$1 (attrs) {\n  if (!attrs && this.defaultAttrs) { return this.defaultAttrs }\n  else { return computeAttrs(this.attrs, attrs) }\n};\n\n// :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n// Create a `Node` of this type. The given attributes are\n// checked and defaulted (you can pass `null` to use the type's\n// defaults entirely, if no required attributes exist). `content`\n// may be a `Fragment`, a node, an array of nodes, or\n// `null`. Similarly `marks` may be `null` to default to the empty\n// set of marks.\nNodeType.prototype.create = function create (attrs, content, marks) {\n  if (this.isText) { throw new Error(\"NodeType.create can't construct text nodes\") }\n  return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks))\n};\n\n// :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n// Like [`create`](#model.NodeType.create), but check the given content\n// against the node type's content restrictions, and throw an error\n// if it doesn't match.\nNodeType.prototype.createChecked = function createChecked (attrs, content, marks) {\n  content = Fragment.from(content);\n  if (!this.validContent(content))\n    { throw new RangeError(\"Invalid content for node \" + this.name) }\n  return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks))\n};\n\n// :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → ?Node\n// Like [`create`](#model.NodeType.create), but see if it is necessary to\n// add nodes to the start or end of the given fragment to make it\n// fit the node. If no fitting wrapping can be found, return null.\n// Note that, due to the fact that required nodes can always be\n// created, this will always succeed if you pass null or\n// `Fragment.empty` as content.\nNodeType.prototype.createAndFill = function createAndFill (attrs, content, marks) {\n  attrs = this.computeAttrs(attrs);\n  content = Fragment.from(content);\n  if (content.size) {\n    var before = this.contentMatch.fillBefore(content);\n    if (!before) { return null }\n    content = before.append(content);\n  }\n  var after = this.contentMatch.matchFragment(content).fillBefore(Fragment.empty, true);\n  if (!after) { return null }\n  return new Node(this, attrs, content.append(after), Mark.setFrom(marks))\n};\n\n// :: (Fragment) → bool\n// Returns true if the given fragment is valid content for this node\n// type with the given attributes.\nNodeType.prototype.validContent = function validContent (content) {\n  var result = this.contentMatch.matchFragment(content);\n  if (!result || !result.validEnd) { return false }\n  for (var i = 0; i < content.childCount; i++)\n    { if (!this.allowsMarks(content.child(i).marks)) { return false } }\n  return true\n};\n\n// :: (MarkType) → bool\n// Check whether the given mark type is allowed in this node.\nNodeType.prototype.allowsMarkType = function allowsMarkType (markType) {\n  return this.markSet == null || this.markSet.indexOf(markType) > -1\n};\n\n// :: ([Mark]) → bool\n// Test whether the given set of marks are allowed in this node.\nNodeType.prototype.allowsMarks = function allowsMarks (marks) {\n  if (this.markSet == null) { return true }\n  for (var i = 0; i < marks.length; i++) { if (!this.allowsMarkType(marks[i].type)) { return false } }\n  return true\n};\n\n// :: ([Mark]) → [Mark]\n// Removes the marks that are not allowed in this node from the given set.\nNodeType.prototype.allowedMarks = function allowedMarks (marks) {\n  if (this.markSet == null) { return marks }\n  var copy;\n  for (var i = 0; i < marks.length; i++) {\n    if (!this.allowsMarkType(marks[i].type)) {\n      if (!copy) { copy = marks.slice(0, i); }\n    } else if (copy) {\n      copy.push(marks[i]);\n    }\n  }\n  return !copy ? marks : copy.length ? copy : Mark.empty\n};\n\nNodeType.compile = function compile (nodes, schema) {\n  var result = Object.create(null);\n  nodes.forEach(function (name, spec) { return result[name] = new NodeType(name, schema, spec); });\n\n  var topType = schema.spec.topNode || \"doc\";\n  if (!result[topType]) { throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\") }\n  if (!result.text) { throw new RangeError(\"Every schema needs a 'text' type\") }\n  for (var _ in result.text.attrs) { throw new RangeError(\"The text node type should not have attributes\") }\n\n  return result\n};\n\nObject.defineProperties( NodeType.prototype, prototypeAccessors$5 );\n\n// Attribute descriptors\n\nvar Attribute = function Attribute(options) {\n  this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n  this.default = options.default;\n};\n\nvar prototypeAccessors$1$3 = { isRequired: { configurable: true } };\n\nprototypeAccessors$1$3.isRequired.get = function () {\n  return !this.hasDefault\n};\n\nObject.defineProperties( Attribute.prototype, prototypeAccessors$1$3 );\n\n// Marks\n\n// ::- Like nodes, marks (which are associated with nodes to signify\n// things like emphasis or being part of a link) are\n// [tagged](#model.Mark.type) with type objects, which are\n// instantiated once per `Schema`.\nvar MarkType = function MarkType(name, rank, schema, spec) {\n  // :: string\n  // The name of the mark type.\n  this.name = name;\n\n  // :: Schema\n  // The schema that this mark type instance is part of.\n  this.schema = schema;\n\n  // :: MarkSpec\n  // The spec on which the type is based.\n  this.spec = spec;\n\n  this.attrs = initAttrs(spec.attrs);\n\n  this.rank = rank;\n  this.excluded = null;\n  var defaults = defaultAttrs(this.attrs);\n  this.instance = defaults && new Mark(this, defaults);\n};\n\n// :: (?Object) → Mark\n// Create a mark of this type. `attrs` may be `null` or an object\n// containing only some of the mark's attributes. The others, if\n// they have defaults, will be added.\nMarkType.prototype.create = function create (attrs) {\n  if (!attrs && this.instance) { return this.instance }\n  return new Mark(this, computeAttrs(this.attrs, attrs))\n};\n\nMarkType.compile = function compile (marks, schema) {\n  var result = Object.create(null), rank = 0;\n  marks.forEach(function (name, spec) { return result[name] = new MarkType(name, rank++, schema, spec); });\n  return result\n};\n\n// :: ([Mark]) → [Mark]\n// When there is a mark of this type in the given set, a new set\n// without it is returned. Otherwise, the input set is returned.\nMarkType.prototype.removeFromSet = function removeFromSet (set) {\n  for (var i = 0; i < set.length; i++) { if (set[i].type == this) {\n    set = set.slice(0, i).concat(set.slice(i + 1));\n    i--;\n  } }\n  return set\n};\n\n// :: ([Mark]) → ?Mark\n// Tests whether there is a mark of this type in the given set.\nMarkType.prototype.isInSet = function isInSet (set) {\n  for (var i = 0; i < set.length; i++)\n    { if (set[i].type == this) { return set[i] } }\n};\n\n// :: (MarkType) → bool\n// Queries whether a given mark type is\n// [excluded](#model.MarkSpec.excludes) by this one.\nMarkType.prototype.excludes = function excludes (other) {\n  return this.excluded.indexOf(other) > -1\n};\n\n// SchemaSpec:: interface\n// An object describing a schema, as passed to the [`Schema`](#model.Schema)\n// constructor.\n//\n//   nodes:: union<Object<NodeSpec>, OrderedMap<NodeSpec>>\n//   The node types in this schema. Maps names to\n//   [`NodeSpec`](#model.NodeSpec) objects that describe the node type\n//   associated with that name. Their order is significant—it\n//   determines which [parse rules](#model.NodeSpec.parseDOM) take\n//   precedence by default, and which nodes come first in a given\n//   [group](#model.NodeSpec.group).\n//\n//   marks:: ?union<Object<MarkSpec>, OrderedMap<MarkSpec>>\n//   The mark types that exist in this schema. The order in which they\n//   are provided determines the order in which [mark\n//   sets](#model.Mark.addToSet) are sorted and in which [parse\n//   rules](#model.MarkSpec.parseDOM) are tried.\n//\n//   topNode:: ?string\n//   The name of the default top-level node for the schema. Defaults\n//   to `\"doc\"`.\n\n// NodeSpec:: interface\n//\n//   content:: ?string\n//   The content expression for this node, as described in the [schema\n//   guide](/docs/guide/#schema.content_expressions). When not given,\n//   the node does not allow any content.\n//\n//   marks:: ?string\n//   The marks that are allowed inside of this node. May be a\n//   space-separated string referring to mark names or groups, `\"_\"`\n//   to explicitly allow all marks, or `\"\"` to disallow marks. When\n//   not given, nodes with inline content default to allowing all\n//   marks, other nodes default to not allowing marks.\n//\n//   group:: ?string\n//   The group or space-separated groups to which this node belongs,\n//   which can be referred to in the content expressions for the\n//   schema.\n//\n//   inline:: ?bool\n//   Should be set to true for inline nodes. (Implied for text nodes.)\n//\n//   atom:: ?bool\n//   Can be set to true to indicate that, though this isn't a [leaf\n//   node](#model.NodeType.isLeaf), it doesn't have directly editable\n//   content and should be treated as a single unit in the view.\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that nodes of this type get.\n//\n//   selectable:: ?bool\n//   Controls whether nodes of this type can be selected as a [node\n//   selection](#state.NodeSelection). Defaults to true for non-text\n//   nodes.\n//\n//   draggable:: ?bool\n//   Determines whether nodes of this type can be dragged without\n//   being selected. Defaults to false.\n//\n//   code:: ?bool\n//   Can be used to indicate that this node contains code, which\n//   causes some commands to behave differently.\n//\n//   defining:: ?bool\n//   Determines whether this node is considered an important parent\n//   node during replace operations (such as paste). Non-defining (the\n//   default) nodes get dropped when their entire content is replaced,\n//   whereas defining nodes persist and wrap the inserted content.\n//   Likewise, in _inserted_ content the defining parents of the\n//   content are preserved when possible. Typically,\n//   non-default-paragraph textblock types, and possibly list items,\n//   are marked as defining.\n//\n//   isolating:: ?bool\n//   When enabled (default is false), the sides of nodes of this type\n//   count as boundaries that regular editing operations, like\n//   backspacing or lifting, won't cross. An example of a node that\n//   should probably have this enabled is a table cell.\n//\n//   toDOM:: ?(node: Node) → DOMOutputSpec\n//   Defines the default way a node of this type should be serialized\n//   to DOM/HTML (as used by\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)).\n//   Should return a DOM node or an [array\n//   structure](#model.DOMOutputSpec) that describes one, with an\n//   optional number zero (“hole”) in it to indicate where the node's\n//   content should be inserted.\n//\n//   For text nodes, the default is to create a text DOM node. Though\n//   it is possible to create a serializer where text is rendered\n//   differently, this is not supported inside the editor, so you\n//   shouldn't override that in your text node spec.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this node, which can be\n//   used by [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) to\n//   automatically derive a parser. The `node` field in the rules is\n//   implied (the name of this node will be filled in automatically).\n//   If you supply your own parser, you do not need to also specify\n//   parsing rules in your schema.\n//\n//   toDebugString:: ?(node: Node) -> string\n//   Defines the default way a node of this type should be serialized\n//   to a string representation for debugging (e.g. in error messages).\n\n// MarkSpec:: interface\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that marks of this type get.\n//\n//   inclusive:: ?bool\n//   Whether this mark should be active when the cursor is positioned\n//   at its end (or at its start when that is also the start of the\n//   parent node). Defaults to true.\n//\n//   excludes:: ?string\n//   Determines which other marks this mark can coexist with. Should\n//   be a space-separated strings naming other marks or groups of marks.\n//   When a mark is [added](#model.Mark.addToSet) to a set, all marks\n//   that it excludes are removed in the process. If the set contains\n//   any mark that excludes the new mark but is not, itself, excluded\n//   by the new mark, the mark can not be added an the set. You can\n//   use the value `\"_\"` to indicate that the mark excludes all\n//   marks in the schema.\n//\n//   Defaults to only being exclusive with marks of the same type. You\n//   can set it to an empty string (or any string not containing the\n//   mark's own name) to allow multiple marks of a given type to\n//   coexist (as long as they have different attributes).\n//\n//   group:: ?string\n//   The group or space-separated groups to which this mark belongs.\n//\n//   spanning:: ?bool\n//   Determines whether marks of this type can span multiple adjacent\n//   nodes when serialized to DOM/HTML. Defaults to true.\n//\n//   toDOM:: ?(mark: Mark, inline: bool) → DOMOutputSpec\n//   Defines the default way marks of this type should be serialized\n//   to DOM/HTML. When the resulting spec contains a hole, that is\n//   where the marked content is placed. Otherwise, it is appended to\n//   the top node.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this mark (see the\n//   corresponding [node spec field](#model.NodeSpec.parseDOM)). The\n//   `mark` field in the rules is implied.\n\n// AttributeSpec:: interface\n//\n// Used to [define](#model.NodeSpec.attrs) attributes on nodes or\n// marks.\n//\n//   default:: ?any\n//   The default value for this attribute, to use when no explicit\n//   value is provided. Attributes that have no default must be\n//   provided whenever a node or mark of a type that has them is\n//   created.\n\n// ::- A document schema. Holds [node](#model.NodeType) and [mark\n// type](#model.MarkType) objects for the nodes and marks that may\n// occur in conforming documents, and provides functionality for\n// creating and deserializing such documents.\nvar Schema = function Schema(spec) {\n  // :: SchemaSpec\n  // The [spec](#model.SchemaSpec) on which the schema is based,\n  // with the added guarantee that its `nodes` and `marks`\n  // properties are\n  // [`OrderedMap`](https://github.com/marijnh/orderedmap) instances\n  // (not raw objects).\n  this.spec = {};\n  for (var prop in spec) { this.spec[prop] = spec[prop]; }\n  this.spec.nodes = OrderedMap.from(spec.nodes);\n  this.spec.marks = OrderedMap.from(spec.marks);\n\n  // :: Object<NodeType>\n  // An object mapping the schema's node names to node type objects.\n  this.nodes = NodeType.compile(this.spec.nodes, this);\n\n  // :: Object<MarkType>\n  // A map from mark names to mark type objects.\n  this.marks = MarkType.compile(this.spec.marks, this);\n\n  var contentExprCache = Object.create(null);\n  for (var prop$1 in this.nodes) {\n    if (prop$1 in this.marks)\n      { throw new RangeError(prop$1 + \" can not be both a node and a mark\") }\n    var type = this.nodes[prop$1], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks;\n    type.contentMatch = contentExprCache[contentExpr] ||\n      (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n    type.inlineContent = type.contentMatch.inlineContent;\n    type.markSet = markExpr == \"_\" ? null :\n      markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n      markExpr == \"\" || !type.inlineContent ? [] : null;\n  }\n  for (var prop$2 in this.marks) {\n    var type$1 = this.marks[prop$2], excl = type$1.spec.excludes;\n    type$1.excluded = excl == null ? [type$1] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n  }\n\n  this.nodeFromJSON = this.nodeFromJSON.bind(this);\n  this.markFromJSON = this.markFromJSON.bind(this);\n\n  // :: NodeType\n  // The type of the [default top node](#model.SchemaSpec.topNode)\n  // for this schema.\n  this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n\n  // :: Object\n  // An object for storing whatever values modules may want to\n  // compute and cache per schema. (If you want to store something\n  // in it, try to use property names unlikely to clash.)\n  this.cached = Object.create(null);\n  this.cached.wrappings = Object.create(null);\n};\n\n// :: (union<string, NodeType>, ?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n// Create a node in this schema. The `type` may be a string or a\n// `NodeType` instance. Attributes will be extended\n// with defaults, `content` may be a `Fragment`,\n// `null`, a `Node`, or an array of nodes.\nSchema.prototype.node = function node (type, attrs, content, marks) {\n  if (typeof type == \"string\")\n    { type = this.nodeType(type); }\n  else if (!(type instanceof NodeType))\n    { throw new RangeError(\"Invalid node type: \" + type) }\n  else if (type.schema != this)\n    { throw new RangeError(\"Node type from different schema used (\" + type.name + \")\") }\n\n  return type.createChecked(attrs, content, marks)\n};\n\n// :: (string, ?[Mark]) → Node\n// Create a text node in the schema. Empty text nodes are not\n// allowed.\nSchema.prototype.text = function text (text$1, marks) {\n  var type = this.nodes.text;\n  return new TextNode(type, type.defaultAttrs, text$1, Mark.setFrom(marks))\n};\n\n// :: (union<string, MarkType>, ?Object) → Mark\n// Create a mark with the given type and attributes.\nSchema.prototype.mark = function mark (type, attrs) {\n  if (typeof type == \"string\") { type = this.marks[type]; }\n  return type.create(attrs)\n};\n\n// :: (Object) → Node\n// Deserialize a node from its JSON representation. This method is\n// bound.\nSchema.prototype.nodeFromJSON = function nodeFromJSON (json) {\n  return Node.fromJSON(this, json)\n};\n\n// :: (Object) → Mark\n// Deserialize a mark from its JSON representation. This method is\n// bound.\nSchema.prototype.markFromJSON = function markFromJSON (json) {\n  return Mark.fromJSON(this, json)\n};\n\nSchema.prototype.nodeType = function nodeType (name) {\n  var found = this.nodes[name];\n  if (!found) { throw new RangeError(\"Unknown node type: \" + name) }\n  return found\n};\n\nfunction gatherMarks(schema, marks) {\n  var found = [];\n  for (var i = 0; i < marks.length; i++) {\n    var name = marks[i], mark = schema.marks[name], ok = mark;\n    if (mark) {\n      found.push(mark);\n    } else {\n      for (var prop in schema.marks) {\n        var mark$1 = schema.marks[prop];\n        if (name == \"_\" || (mark$1.spec.group && mark$1.spec.group.split(\" \").indexOf(name) > -1))\n          { found.push(ok = mark$1); }\n      }\n    }\n    if (!ok) { throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\") }\n  }\n  return found\n}\n\n// ParseOptions:: interface\n// These are the options recognized by the\n// [`parse`](#model.DOMParser.parse) and\n// [`parseSlice`](#model.DOMParser.parseSlice) methods.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   By default, whitespace is collapsed as per HTML's rules. Pass\n//   `true` to preserve whitespace, but normalize newlines to\n//   spaces, and `\"full\"` to preserve whitespace entirely.\n//\n//   findPositions:: ?[{node: dom.Node, offset: number}]\n//   When given, the parser will, beside parsing the content,\n//   record the document positions of the given DOM positions. It\n//   will do so by writing to the objects, adding a `pos` property\n//   that holds the document position. DOM positions that are not\n//   in the parsed content will not be written to.\n//\n//   from:: ?number\n//   The child node index to start parsing from.\n//\n//   to:: ?number\n//   The child node index to stop parsing at.\n//\n//   topNode:: ?Node\n//   By default, the content is parsed into the schema's default\n//   [top node type](#model.Schema.topNodeType). You can pass this\n//   option to use the type and attributes from a different node\n//   as the top container.\n//\n//   topMatch:: ?ContentMatch\n//   Provide the starting content match that content parsed into the\n//   top node is matched against.\n//\n//   context:: ?ResolvedPos\n//   A set of additional nodes to count as\n//   [context](#model.ParseRule.context) when parsing, above the\n//   given [top node](#model.ParseOptions.topNode).\n\n// ParseRule:: interface\n// A value that describes how to parse a given DOM node or inline\n// style as a ProseMirror node or mark.\n//\n//   tag:: ?string\n//   A CSS selector describing the kind of DOM elements to match. A\n//   single rule should have _either_ a `tag` or a `style` property.\n//\n//   namespace:: ?string\n//   The namespace to match. This should be used with `tag`.\n//   Nodes are only matched when the namespace matches or this property\n//   is null.\n//\n//   style:: ?string\n//   A CSS property name to match. When given, this rule matches\n//   inline styles that list that property. May also have the form\n//   `\"property=value\"`, in which case the rule only matches if the\n//   property's value exactly matches the given value. (For more\n//   complicated filters, use [`getAttrs`](#model.ParseRule.getAttrs)\n//   and return false to indicate that the match failed.) Rules\n//   matching styles may only produce [marks](#model.ParseRule.mark),\n//   not nodes.\n//\n//   priority:: ?number\n//   Can be used to change the order in which the parse rules in a\n//   schema are tried. Those with higher priority come first. Rules\n//   without a priority are counted as having priority 50. This\n//   property is only meaningful in a schema—when directly\n//   constructing a parser, the order of the rule array is used.\n//\n//   consuming:: ?boolean\n//   By default, when a rule matches an element or style, no further\n//   rules get a chance to match it. By setting this to `false`, you\n//   indicate that even when this rule matches, other rules that come\n//   after it should also run.\n//\n//   context:: ?string\n//   When given, restricts this rule to only match when the current\n//   context—the parent nodes into which the content is being\n//   parsed—matches this expression. Should contain one or more node\n//   names or node group names followed by single or double slashes.\n//   For example `\"paragraph/\"` means the rule only matches when the\n//   parent node is a paragraph, `\"blockquote/paragraph/\"` restricts\n//   it to be in a paragraph that is inside a blockquote, and\n//   `\"section//\"` matches any position inside a section—a double\n//   slash matches any sequence of ancestor nodes. To allow multiple\n//   different contexts, they can be separated by a pipe (`|`)\n//   character, as in `\"blockquote/|list_item/\"`.\n//\n//   node:: ?string\n//   The name of the node type to create when this rule matches. Only\n//   valid for rules with a `tag` property, not for style rules. Each\n//   rule should have one of a `node`, `mark`, or `ignore` property\n//   (except when it appears in a [node](#model.NodeSpec.parseDOM) or\n//   [mark spec](#model.MarkSpec.parseDOM), in which case the `node`\n//   or `mark` property will be derived from its position).\n//\n//   mark:: ?string\n//   The name of the mark type to wrap the matched content in.\n//\n//   ignore:: ?bool\n//   When true, ignore content that matches this rule.\n//\n//   closeParent:: ?bool\n//   When true, finding an element that matches this rule will close\n//   the current node.\n//\n//   skip:: ?bool\n//   When true, ignore the node that matches this rule, but do parse\n//   its content.\n//\n//   attrs:: ?Object\n//   Attributes for the node or mark created by this rule. When\n//   `getAttrs` is provided, it takes precedence.\n//\n//   getAttrs:: ?(union<dom.Node, string>) → ?union<Object, false>\n//   A function used to compute the attributes for the node or mark\n//   created by this rule. Can also be used to describe further\n//   conditions the DOM element or style must match. When it returns\n//   `false`, the rule won't match. When it returns null or undefined,\n//   that is interpreted as an empty/default set of attributes.\n//\n//   Called with a DOM Element for `tag` rules, and with a string (the\n//   style's value) for `style` rules.\n//\n//   contentElement:: ?union<string, (dom.Node) → dom.Node>\n//   For `tag` rules that produce non-leaf nodes or marks, by default\n//   the content of the DOM element is parsed as content of the mark\n//   or node. If the child nodes are in a descendent node, this may be\n//   a CSS selector string that the parser must use to find the actual\n//   content element, or a function that returns the actual content\n//   element to the parser.\n//\n//   getContent:: ?(dom.Node, schema: Schema) → Fragment\n//   Can be used to override the content of a matched node. When\n//   present, instead of parsing the node's child nodes, the result of\n//   this function is used.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   Controls whether whitespace should be preserved when parsing the\n//   content inside the matched element. `false` means whitespace may\n//   be collapsed, `true` means that whitespace should be preserved\n//   but newlines normalized to spaces, and `\"full\"` means that\n//   newlines should also be preserved.\n\n// ::- A DOM parser represents a strategy for parsing DOM content into\n// a ProseMirror document conforming to a given schema. Its behavior\n// is defined by an array of [rules](#model.ParseRule).\nvar DOMParser = function DOMParser(schema, rules) {\n  var this$1 = this;\n\n  // :: Schema\n  // The schema into which the parser parses.\n  this.schema = schema;\n  // :: [ParseRule]\n  // The set of [parse rules](#model.ParseRule) that the parser\n  // uses, in order of precedence.\n  this.rules = rules;\n  this.tags = [];\n  this.styles = [];\n\n  rules.forEach(function (rule) {\n    if (rule.tag) { this$1.tags.push(rule); }\n    else if (rule.style) { this$1.styles.push(rule); }\n  });\n\n  // Only normalize list elements when lists in the schema can't directly contain themselves\n  this.normalizeLists = !this.tags.some(function (r) {\n    if (!/^(ul|ol)\\b/.test(r.tag) || !r.node) { return false }\n    var node = schema.nodes[r.node];\n    return node.contentMatch.matchType(node)\n  });\n};\n\n// :: (dom.Node, ?ParseOptions) → Node\n// Parse a document from the content of a DOM node.\nDOMParser.prototype.parse = function parse (dom, options) {\n    if ( options === void 0 ) options = {};\n\n  var context = new ParseContext(this, options, false);\n  context.addAll(dom, null, options.from, options.to);\n  return context.finish()\n};\n\n// :: (dom.Node, ?ParseOptions) → Slice\n// Parses the content of the given DOM node, like\n// [`parse`](#model.DOMParser.parse), and takes the same set of\n// options. But unlike that method, which produces a whole node,\n// this one returns a slice that is open at the sides, meaning that\n// the schema constraints aren't applied to the start of nodes to\n// the left of the input and the end of nodes at the end.\nDOMParser.prototype.parseSlice = function parseSlice (dom, options) {\n    if ( options === void 0 ) options = {};\n\n  var context = new ParseContext(this, options, true);\n  context.addAll(dom, null, options.from, options.to);\n  return Slice.maxOpen(context.finish())\n};\n\nDOMParser.prototype.matchTag = function matchTag (dom, context, after) {\n  for (var i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n    var rule = this.tags[i];\n    if (matches(dom, rule.tag) &&\n        (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n        (!rule.context || context.matchesContext(rule.context))) {\n      if (rule.getAttrs) {\n        var result = rule.getAttrs(dom);\n        if (result === false) { continue }\n        rule.attrs = result;\n      }\n      return rule\n    }\n  }\n};\n\nDOMParser.prototype.matchStyle = function matchStyle (prop, value, context, after) {\n  for (var i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n    var rule = this.styles[i];\n    if (rule.style.indexOf(prop) != 0 ||\n        rule.context && !context.matchesContext(rule.context) ||\n        // Test that the style string either precisely matches the prop,\n        // or has an '=' sign after the prop, followed by the given\n        // value.\n        rule.style.length > prop.length &&\n        (rule.style.charCodeAt(prop.length) != 61 || rule.style.slice(prop.length + 1) != value))\n      { continue }\n    if (rule.getAttrs) {\n      var result = rule.getAttrs(value);\n      if (result === false) { continue }\n      rule.attrs = result;\n    }\n    return rule\n  }\n};\n\n// : (Schema) → [ParseRule]\nDOMParser.schemaRules = function schemaRules (schema) {\n  var result = [];\n  function insert(rule) {\n    var priority = rule.priority == null ? 50 : rule.priority, i = 0;\n    for (; i < result.length; i++) {\n      var next = result[i], nextPriority = next.priority == null ? 50 : next.priority;\n      if (nextPriority < priority) { break }\n    }\n    result.splice(i, 0, rule);\n  }\n\n  var loop = function ( name ) {\n    var rules = schema.marks[name].spec.parseDOM;\n    if (rules) { rules.forEach(function (rule) {\n      insert(rule = copy(rule));\n      rule.mark = name;\n    }); }\n  };\n\n    for (var name in schema.marks) loop( name );\n  var loop$1 = function ( name ) {\n    var rules$1 = schema.nodes[name$1].spec.parseDOM;\n    if (rules$1) { rules$1.forEach(function (rule) {\n      insert(rule = copy(rule));\n      rule.node = name$1;\n    }); }\n  };\n\n    for (var name$1 in schema.nodes) loop$1();\n  return result\n};\n\n// :: (Schema) → DOMParser\n// Construct a DOM parser using the parsing rules listed in a\n// schema's [node specs](#model.NodeSpec.parseDOM), reordered by\n// [priority](#model.ParseRule.priority).\nDOMParser.fromSchema = function fromSchema (schema) {\n  return schema.cached.domParser ||\n    (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)))\n};\n\n// : Object<bool> The block-level tags in HTML5\nvar blockTags = {\n  address: true, article: true, aside: true, blockquote: true, canvas: true,\n  dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n  footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n  h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n  output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n};\n\n// : Object<bool> The tags that we normally ignore.\nvar ignoreTags = {\n  head: true, noscript: true, object: true, script: true, style: true, title: true\n};\n\n// : Object<bool> List tags.\nvar listTags = {ol: true, ul: true};\n\n// Using a bitfield for node context options\nvar OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4;\n\nfunction wsOptionsFor(preserveWhitespace) {\n  return (preserveWhitespace ? OPT_PRESERVE_WS : 0) | (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0)\n}\n\nvar NodeContext = function NodeContext(type, attrs, marks, pendingMarks, solid, match, options) {\n  this.type = type;\n  this.attrs = attrs;\n  this.solid = solid;\n  this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n  this.options = options;\n  this.content = [];\n  // Marks applied to this node itself\n  this.marks = marks;\n  // Marks applied to its children\n  this.activeMarks = Mark.none;\n  // Marks that can't apply here, but will be used in children if possible\n  this.pendingMarks = pendingMarks;\n  // Nested Marks with same type\n  this.stashMarks = [];\n};\n\nNodeContext.prototype.findWrapping = function findWrapping (node) {\n  if (!this.match) {\n    if (!this.type) { return [] }\n    var fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n    if (fill) {\n      this.match = this.type.contentMatch.matchFragment(fill);\n    } else {\n      var start = this.type.contentMatch, wrap;\n      if (wrap = start.findWrapping(node.type)) {\n        this.match = start;\n        return wrap\n      } else {\n        return null\n      }\n    }\n  }\n  return this.match.findWrapping(node.type)\n};\n\nNodeContext.prototype.finish = function finish (openEnd) {\n  if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n    var last = this.content[this.content.length - 1], m;\n    if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n      if (last.text.length == m[0].length) { this.content.pop(); }\n      else { this.content[this.content.length - 1] = last.withText(last.text.slice(0, last.text.length - m[0].length)); }\n    }\n  }\n  var content = Fragment.from(this.content);\n  if (!openEnd && this.match)\n    { content = content.append(this.match.fillBefore(Fragment.empty, true)); }\n  return this.type ? this.type.create(this.attrs, content, this.marks) : content\n};\n\nNodeContext.prototype.popFromStashMark = function popFromStashMark (mark) {\n  for (var i = this.stashMarks.length - 1; i >= 0; i--)\n    { if (mark.eq(this.stashMarks[i])) { return this.stashMarks.splice(i, 1)[0] } }\n};\n\nNodeContext.prototype.applyPending = function applyPending (nextType) {\n  for (var i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n    var mark = pending[i];\n    if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n        !mark.isInSet(this.activeMarks)) {\n      this.activeMarks = mark.addToSet(this.activeMarks);\n      this.pendingMarks = mark.removeFromSet(this.pendingMarks);\n    }\n  }\n};\n\nNodeContext.prototype.inlineContext = function inlineContext (node) {\n  if (this.type) { return this.type.inlineContent }\n  if (this.content.length) { return this.content[0].isInline }\n  return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase())\n};\n\nvar ParseContext = function ParseContext(parser, options, open) {\n  // : DOMParser The parser we are using.\n  this.parser = parser;\n  // : Object The options passed to this parse.\n  this.options = options;\n  this.isOpen = open;\n  var topNode = options.topNode, topContext;\n  var topOptions = wsOptionsFor(options.preserveWhitespace) | (open ? OPT_OPEN_LEFT : 0);\n  if (topNode)\n    { topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true,\n                                 options.topMatch || topNode.type.contentMatch, topOptions); }\n  else if (open)\n    { topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions); }\n  else\n    { topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions); }\n  this.nodes = [topContext];\n  // : [Mark] The current set of marks\n  this.open = 0;\n  this.find = options.findPositions;\n  this.needsBlock = false;\n};\n\nvar prototypeAccessors$6 = { top: { configurable: true },currentPos: { configurable: true } };\n\nprototypeAccessors$6.top.get = function () {\n  return this.nodes[this.open]\n};\n\n// : (dom.Node)\n// Add a DOM node to the content. Text is inserted as text node,\n// otherwise, the node is passed to `addElement` or, if it has a\n// `style` attribute, `addElementWithStyles`.\nParseContext.prototype.addDOM = function addDOM (dom) {\n  if (dom.nodeType == 3) {\n    this.addTextNode(dom);\n  } else if (dom.nodeType == 1) {\n    var style = dom.getAttribute(\"style\");\n    var marks = style ? this.readStyles(parseStyles(style)) : null, top = this.top;\n    if (marks != null) { for (var i = 0; i < marks.length; i++) { this.addPendingMark(marks[i]); } }\n    this.addElement(dom);\n    if (marks != null) { for (var i$1 = 0; i$1 < marks.length; i$1++) { this.removePendingMark(marks[i$1], top); } }\n  }\n};\n\nParseContext.prototype.addTextNode = function addTextNode (dom) {\n  var value = dom.nodeValue;\n  var top = this.top;\n  if (top.options & OPT_PRESERVE_WS_FULL ||\n      top.inlineContext(dom) ||\n      /[^ \\t\\r\\n\\u000c]/.test(value)) {\n    if (!(top.options & OPT_PRESERVE_WS)) {\n      value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n      // If this starts with whitespace, and there is no node before it, or\n      // a hard break, or a text node that ends with whitespace, strip the\n      // leading space.\n      if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n        var nodeBefore = top.content[top.content.length - 1];\n        var domNodeBefore = dom.previousSibling;\n        if (!nodeBefore ||\n            (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n            (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n          { value = value.slice(1); }\n      }\n    } else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n      value = value.replace(/\\r?\\n|\\r/g, \" \");\n    } else {\n      value = value.replace(/\\r\\n?/g, \"\\n\");\n    }\n    if (value) { this.insertNode(this.parser.schema.text(value)); }\n    this.findInText(dom);\n  } else {\n    this.findInside(dom);\n  }\n};\n\n// : (dom.Element, ?ParseRule)\n// Try to find a handler for the given tag and use that to parse. If\n// none is found, the element's content nodes are added directly.\nParseContext.prototype.addElement = function addElement (dom, matchAfter) {\n  var name = dom.nodeName.toLowerCase(), ruleID;\n  if (listTags.hasOwnProperty(name) && this.parser.normalizeLists) { normalizeList(dom); }\n  var rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n      (ruleID = this.parser.matchTag(dom, this, matchAfter));\n  if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n    this.findInside(dom);\n    this.ignoreFallback(dom);\n  } else if (!rule || rule.skip || rule.closeParent) {\n    if (rule && rule.closeParent) { this.open = Math.max(0, this.open - 1); }\n    else if (rule && rule.skip.nodeType) { dom = rule.skip; }\n    var sync, top = this.top, oldNeedsBlock = this.needsBlock;\n    if (blockTags.hasOwnProperty(name)) {\n      sync = true;\n      if (!top.type) { this.needsBlock = true; }\n    } else if (!dom.firstChild) {\n      this.leafFallback(dom);\n      return\n    }\n    this.addAll(dom);\n    if (sync) { this.sync(top); }\n    this.needsBlock = oldNeedsBlock;\n  } else {\n    this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : null);\n  }\n};\n\n// Called for leaf DOM nodes that would otherwise be ignored\nParseContext.prototype.leafFallback = function leafFallback (dom) {\n  if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n    { this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\")); }\n};\n\n// Called for ignored nodes\nParseContext.prototype.ignoreFallback = function ignoreFallback (dom) {\n  // Ignored BR nodes should at least create an inline context\n  if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n    { this.findPlace(this.parser.schema.text(\"-\")); }\n};\n\n// Run any style parser associated with the node's styles. Either\n// return an array of marks, or null to indicate some of the styles\n// had a rule with `ignore` set.\nParseContext.prototype.readStyles = function readStyles (styles) {\n  var marks = Mark.none;\n  style: for (var i = 0; i < styles.length; i += 2) {\n    for (var after = null;;) {\n      var rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after);\n      if (!rule) { continue style }\n      if (rule.ignore) { return null }\n      marks = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(marks);\n      if (rule.consuming === false) { after = rule; }\n      else { break }\n    }\n  }\n  return marks\n};\n\n// : (dom.Element, ParseRule) → bool\n// Look up a handler for the given node. If none are found, return\n// false. Otherwise, apply it, use its return value to drive the way\n// the node's content is wrapped, and return true.\nParseContext.prototype.addElementByRule = function addElementByRule (dom, rule, continueAfter) {\n    var this$1 = this;\n\n  var sync, nodeType, markType, mark;\n  if (rule.node) {\n    nodeType = this.parser.schema.nodes[rule.node];\n    if (!nodeType.isLeaf) {\n      sync = this.enter(nodeType, rule.attrs, rule.preserveWhitespace);\n    } else if (!this.insertNode(nodeType.create(rule.attrs))) {\n      this.leafFallback(dom);\n    }\n  } else {\n    markType = this.parser.schema.marks[rule.mark];\n    mark = markType.create(rule.attrs);\n    this.addPendingMark(mark);\n  }\n  var startIn = this.top;\n\n  if (nodeType && nodeType.isLeaf) {\n    this.findInside(dom);\n  } else if (continueAfter) {\n    this.addElement(dom, continueAfter);\n  } else if (rule.getContent) {\n    this.findInside(dom);\n    rule.getContent(dom, this.parser.schema).forEach(function (node) { return this$1.insertNode(node); });\n  } else {\n    var contentDOM = rule.contentElement;\n    if (typeof contentDOM == \"string\") { contentDOM = dom.querySelector(contentDOM); }\n    else if (typeof contentDOM == \"function\") { contentDOM = contentDOM(dom); }\n    if (!contentDOM) { contentDOM = dom; }\n    this.findAround(dom, contentDOM, true);\n    this.addAll(contentDOM, sync);\n  }\n  if (sync) { this.sync(startIn); this.open--; }\n  if (mark) { this.removePendingMark(mark, startIn); }\n};\n\n// : (dom.Node, ?NodeBuilder, ?number, ?number)\n// Add all child nodes between `startIndex` and `endIndex` (or the\n// whole node, if not given). If `sync` is passed, use it to\n// synchronize after every block element.\nParseContext.prototype.addAll = function addAll (parent, sync, startIndex, endIndex) {\n  var index = startIndex || 0;\n  for (var dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild,\n           end = endIndex == null ? null : parent.childNodes[endIndex];\n       dom != end; dom = dom.nextSibling, ++index) {\n    this.findAtPoint(parent, index);\n    this.addDOM(dom);\n    if (sync && blockTags.hasOwnProperty(dom.nodeName.toLowerCase()))\n      { this.sync(sync); }\n  }\n  this.findAtPoint(parent, index);\n};\n\n// Try to find a way to fit the given node type into the current\n// context. May add intermediate wrappers and/or leave non-solid\n// nodes that we're in.\nParseContext.prototype.findPlace = function findPlace (node) {\n  var route, sync;\n  for (var depth = this.open; depth >= 0; depth--) {\n    var cx = this.nodes[depth];\n    var found = cx.findWrapping(node);\n    if (found && (!route || route.length > found.length)) {\n      route = found;\n      sync = cx;\n      if (!found.length) { break }\n    }\n    if (cx.solid) { break }\n  }\n  if (!route) { return false }\n  this.sync(sync);\n  for (var i = 0; i < route.length; i++)\n    { this.enterInner(route[i], null, false); }\n  return true\n};\n\n// : (Node) → ?Node\n// Try to insert the given node, adjusting the context when needed.\nParseContext.prototype.insertNode = function insertNode (node) {\n  if (node.isInline && this.needsBlock && !this.top.type) {\n    var block = this.textblockFromContext();\n    if (block) { this.enterInner(block); }\n  }\n  if (this.findPlace(node)) {\n    this.closeExtra();\n    var top = this.top;\n    top.applyPending(node.type);\n    if (top.match) { top.match = top.match.matchType(node.type); }\n    var marks = top.activeMarks;\n    for (var i = 0; i < node.marks.length; i++)\n      { if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n        { marks = node.marks[i].addToSet(marks); } }\n    top.content.push(node.mark(marks));\n    return true\n  }\n  return false\n};\n\n// : (NodeType, ?Object) → bool\n// Try to start a node of the given type, adjusting the context when\n// necessary.\nParseContext.prototype.enter = function enter (type, attrs, preserveWS) {\n  var ok = this.findPlace(type.create(attrs));\n  if (ok) { this.enterInner(type, attrs, true, preserveWS); }\n  return ok\n};\n\n// Open a node of the given type\nParseContext.prototype.enterInner = function enterInner (type, attrs, solid, preserveWS) {\n  this.closeExtra();\n  var top = this.top;\n  top.applyPending(type);\n  top.match = top.match && top.match.matchType(type, attrs);\n  var options = preserveWS == null ? top.options & ~OPT_OPEN_LEFT : wsOptionsFor(preserveWS);\n  if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0) { options |= OPT_OPEN_LEFT; }\n  this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options));\n  this.open++;\n};\n\n// Make sure all nodes above this.open are finished and added to\n// their parents\nParseContext.prototype.closeExtra = function closeExtra (openEnd) {\n  var i = this.nodes.length - 1;\n  if (i > this.open) {\n    for (; i > this.open; i--) { this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd)); }\n    this.nodes.length = this.open + 1;\n  }\n};\n\nParseContext.prototype.finish = function finish () {\n  this.open = 0;\n  this.closeExtra(this.isOpen);\n  return this.nodes[0].finish(this.isOpen || this.options.topOpen)\n};\n\nParseContext.prototype.sync = function sync (to) {\n  for (var i = this.open; i >= 0; i--) { if (this.nodes[i] == to) {\n    this.open = i;\n    return\n  } }\n};\n\nprototypeAccessors$6.currentPos.get = function () {\n  this.closeExtra();\n  var pos = 0;\n  for (var i = this.open; i >= 0; i--) {\n    var content = this.nodes[i].content;\n    for (var j = content.length - 1; j >= 0; j--)\n      { pos += content[j].nodeSize; }\n    if (i) { pos++; }\n  }\n  return pos\n};\n\nParseContext.prototype.findAtPoint = function findAtPoint (parent, offset) {\n  if (this.find) { for (var i = 0; i < this.find.length; i++) {\n    if (this.find[i].node == parent && this.find[i].offset == offset)\n      { this.find[i].pos = this.currentPos; }\n  } }\n};\n\nParseContext.prototype.findInside = function findInside (parent) {\n  if (this.find) { for (var i = 0; i < this.find.length; i++) {\n    if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n      { this.find[i].pos = this.currentPos; }\n  } }\n};\n\nParseContext.prototype.findAround = function findAround (parent, content, before) {\n  if (parent != content && this.find) { for (var i = 0; i < this.find.length; i++) {\n    if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n      var pos = content.compareDocumentPosition(this.find[i].node);\n      if (pos & (before ? 2 : 4))\n        { this.find[i].pos = this.currentPos; }\n    }\n  } }\n};\n\nParseContext.prototype.findInText = function findInText (textNode) {\n  if (this.find) { for (var i = 0; i < this.find.length; i++) {\n    if (this.find[i].node == textNode)\n      { this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset); }\n  } }\n};\n\n// : (string) → bool\n// Determines whether the given [context\n// string](#ParseRule.context) matches this context.\nParseContext.prototype.matchesContext = function matchesContext (context) {\n    var this$1 = this;\n\n  if (context.indexOf(\"|\") > -1)\n    { return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this) }\n\n  var parts = context.split(\"/\");\n  var option = this.options.context;\n  var useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n  var minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n  var match = function (i, depth) {\n    for (; i >= 0; i--) {\n      var part = parts[i];\n      if (part == \"\") {\n        if (i == parts.length - 1 || i == 0) { continue }\n        for (; depth >= minDepth; depth--)\n          { if (match(i - 1, depth)) { return true } }\n        return false\n      } else {\n        var next = depth > 0 || (depth == 0 && useRoot) ? this$1.nodes[depth].type\n            : option && depth >= minDepth ? option.node(depth - minDepth).type\n            : null;\n        if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n          { return false }\n        depth--;\n      }\n    }\n    return true\n  };\n  return match(parts.length - 1, this.open)\n};\n\nParseContext.prototype.textblockFromContext = function textblockFromContext () {\n  var $context = this.options.context;\n  if ($context) { for (var d = $context.depth; d >= 0; d--) {\n    var deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n    if (deflt && deflt.isTextblock && deflt.defaultAttrs) { return deflt }\n  } }\n  for (var name in this.parser.schema.nodes) {\n    var type = this.parser.schema.nodes[name];\n    if (type.isTextblock && type.defaultAttrs) { return type }\n  }\n};\n\nParseContext.prototype.addPendingMark = function addPendingMark (mark) {\n  var found = findSameMarkInSet(mark, this.top.pendingMarks);\n  if (found) { this.top.stashMarks.push(found); }\n  this.top.pendingMarks = mark.addToSet(this.top.pendingMarks);\n};\n\nParseContext.prototype.removePendingMark = function removePendingMark (mark, upto) {\n  for (var depth = this.open; depth >= 0; depth--) {\n    var level = this.nodes[depth];\n    var found = level.pendingMarks.lastIndexOf(mark);\n    if (found > -1) {\n      level.pendingMarks = mark.removeFromSet(level.pendingMarks);\n    } else {\n      level.activeMarks = mark.removeFromSet(level.activeMarks);\n      var stashMark = level.popFromStashMark(mark);\n      if (stashMark && level.type && level.type.allowsMarkType(stashMark.type))\n        { level.activeMarks = stashMark.addToSet(level.activeMarks); }\n    }\n    if (level == upto) { break }\n  }\n};\n\nObject.defineProperties( ParseContext.prototype, prototypeAccessors$6 );\n\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n  for (var child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n    var name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n    if (name && listTags.hasOwnProperty(name) && prevItem) {\n      prevItem.appendChild(child);\n      child = prevItem;\n    } else if (name == \"li\") {\n      prevItem = child;\n    } else if (name) {\n      prevItem = null;\n    }\n  }\n}\n\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n  return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector)\n}\n\n// : (string) → [string]\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n  var re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = [];\n  while (m = re.exec(style)) { result.push(m[1], m[2].trim()); }\n  return result\n}\n\nfunction copy(obj) {\n  var copy = {};\n  for (var prop in obj) { copy[prop] = obj[prop]; }\n  return copy\n}\n\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n  var nodes = nodeType.schema.nodes;\n  var loop = function ( name ) {\n    var parent = nodes[name];\n    if (!parent.allowsMarkType(markType)) { return }\n    var seen = [], scan = function (match) {\n      seen.push(match);\n      for (var i = 0; i < match.edgeCount; i++) {\n        var ref = match.edge(i);\n        var type = ref.type;\n        var next = ref.next;\n        if (type == nodeType) { return true }\n        if (seen.indexOf(next) < 0 && scan(next)) { return true }\n      }\n    };\n    if (scan(parent.contentMatch)) { return { v: true } }\n  };\n\n  for (var name in nodes) {\n    var returned = loop( name );\n\n    if ( returned ) return returned.v;\n  }\n}\n\nfunction findSameMarkInSet(mark, set) {\n  for (var i = 0; i < set.length; i++) {\n    if (mark.eq(set[i])) { return set[i] }\n  }\n}\n\n// DOMOutputSpec:: interface\n// A description of a DOM structure. Can be either a string, which is\n// interpreted as a text node, a DOM node, which is interpreted as\n// itself, a `{dom: Node, contentDOM: ?Node}` object, or an array.\n//\n// An array describes a DOM element. The first value in the array\n// should be a string—the name of the DOM element, optionally prefixed\n// by a namespace URL and a space. If the second element is plain\n// object, it is interpreted as a set of attributes for the element.\n// Any elements after that (including the 2nd if it's not an attribute\n// object) are interpreted as children of the DOM elements, and must\n// either be valid `DOMOutputSpec` values, or the number zero.\n//\n// The number zero (pronounced “hole”) is used to indicate the place\n// where a node's child nodes should be inserted. If it occurs in an\n// output spec, it should be the only child element in its parent\n// node.\n\n// ::- A DOM serializer knows how to convert ProseMirror nodes and\n// marks of various types to DOM nodes.\nvar DOMSerializer = function DOMSerializer(nodes, marks) {\n  // :: Object<(node: Node) → DOMOutputSpec>\n  // The node serialization functions.\n  this.nodes = nodes || {};\n  // :: Object<?(mark: Mark, inline: bool) → DOMOutputSpec>\n  // The mark serialization functions.\n  this.marks = marks || {};\n};\n\n// :: (Fragment, ?Object) → dom.DocumentFragment\n// Serialize the content of this fragment to a DOM fragment. When\n// not in the browser, the `document` option, containing a DOM\n// document, should be passed so that the serializer can create\n// nodes.\nDOMSerializer.prototype.serializeFragment = function serializeFragment (fragment, options, target) {\n    var this$1 = this;\n    if ( options === void 0 ) options = {};\n\n  if (!target) { target = doc(options).createDocumentFragment(); }\n\n  var top = target, active = null;\n  fragment.forEach(function (node) {\n    if (active || node.marks.length) {\n      if (!active) { active = []; }\n      var keep = 0, rendered = 0;\n      while (keep < active.length && rendered < node.marks.length) {\n        var next = node.marks[rendered];\n        if (!this$1.marks[next.type.name]) { rendered++; continue }\n        if (!next.eq(active[keep]) || next.type.spec.spanning === false) { break }\n        keep += 2; rendered++;\n      }\n      while (keep < active.length) {\n        top = active.pop();\n        active.pop();\n      }\n      while (rendered < node.marks.length) {\n        var add = node.marks[rendered++];\n        var markDOM = this$1.serializeMark(add, node.isInline, options);\n        if (markDOM) {\n          active.push(add, top);\n          top.appendChild(markDOM.dom);\n          top = markDOM.contentDOM || markDOM.dom;\n        }\n      }\n    }\n    top.appendChild(this$1.serializeNodeInner(node, options));\n  });\n\n  return target\n};\n\nDOMSerializer.prototype.serializeNodeInner = function serializeNodeInner (node, options) {\n    if ( options === void 0 ) options = {};\n\n  var ref =\n      DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node));\n    var dom = ref.dom;\n    var contentDOM = ref.contentDOM;\n  if (contentDOM) {\n    if (node.isLeaf)\n      { throw new RangeError(\"Content hole not allowed in a leaf node spec\") }\n    if (options.onContent)\n      { options.onContent(node, contentDOM, options); }\n    else\n      { this.serializeFragment(node.content, options, contentDOM); }\n  }\n  return dom\n};\n\n// :: (Node, ?Object) → dom.Node\n// Serialize this node to a DOM node. This can be useful when you\n// need to serialize a part of a document, as opposed to the whole\n// document. To serialize a whole document, use\n// [`serializeFragment`](#model.DOMSerializer.serializeFragment) on\n// its [content](#model.Node.content).\nDOMSerializer.prototype.serializeNode = function serializeNode (node, options) {\n    if ( options === void 0 ) options = {};\n\n  var dom = this.serializeNodeInner(node, options);\n  for (var i = node.marks.length - 1; i >= 0; i--) {\n    var wrap = this.serializeMark(node.marks[i], node.isInline, options);\n    if (wrap) {\n(wrap.contentDOM || wrap.dom).appendChild(dom);\n      dom = wrap.dom;\n    }\n  }\n  return dom\n};\n\nDOMSerializer.prototype.serializeMark = function serializeMark (mark, inline, options) {\n    if ( options === void 0 ) options = {};\n\n  var toDOM = this.marks[mark.type.name];\n  return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline))\n};\n\n// :: (dom.Document, DOMOutputSpec) → {dom: dom.Node, contentDOM: ?dom.Node}\n// Render an [output spec](#model.DOMOutputSpec) to a DOM node. If\n// the spec has a hole (zero) in it, `contentDOM` will point at the\n// node with the hole.\nDOMSerializer.renderSpec = function renderSpec (doc, structure, xmlNS) {\n    if ( xmlNS === void 0 ) xmlNS = null;\n\n  if (typeof structure == \"string\")\n    { return {dom: doc.createTextNode(structure)} }\n  if (structure.nodeType != null)\n    { return {dom: structure} }\n  if (structure.dom && structure.dom.nodeType != null)\n    { return structure }\n  var tagName = structure[0], space = tagName.indexOf(\" \");\n  if (space > 0) {\n    xmlNS = tagName.slice(0, space);\n    tagName = tagName.slice(space + 1);\n  }\n  var contentDOM = null, dom = xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName);\n  var attrs = structure[1], start = 1;\n  if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n    start = 2;\n    for (var name in attrs) { if (attrs[name] != null) {\n      var space$1 = name.indexOf(\" \");\n      if (space$1 > 0) { dom.setAttributeNS(name.slice(0, space$1), name.slice(space$1 + 1), attrs[name]); }\n      else { dom.setAttribute(name, attrs[name]); }\n    } }\n  }\n  for (var i = start; i < structure.length; i++) {\n    var child = structure[i];\n    if (child === 0) {\n      if (i < structure.length - 1 || i > start)\n        { throw new RangeError(\"Content hole must be the only child of its parent node\") }\n      return {dom: dom, contentDOM: dom}\n    } else {\n      var ref = DOMSerializer.renderSpec(doc, child, xmlNS);\n        var inner = ref.dom;\n        var innerContent = ref.contentDOM;\n      dom.appendChild(inner);\n      if (innerContent) {\n        if (contentDOM) { throw new RangeError(\"Multiple content holes\") }\n        contentDOM = innerContent;\n      }\n    }\n  }\n  return {dom: dom, contentDOM: contentDOM}\n};\n\n// :: (Schema) → DOMSerializer\n// Build a serializer using the [`toDOM`](#model.NodeSpec.toDOM)\n// properties in a schema's node and mark specs.\nDOMSerializer.fromSchema = function fromSchema (schema) {\n  return schema.cached.domSerializer ||\n    (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)))\n};\n\n// : (Schema) → Object<(node: Node) → DOMOutputSpec>\n// Gather the serializers in a schema's node specs into an object.\n// This can be useful as a base to build a custom serializer from.\nDOMSerializer.nodesFromSchema = function nodesFromSchema (schema) {\n  var result = gatherToDOM(schema.nodes);\n  if (!result.text) { result.text = function (node) { return node.text; }; }\n  return result\n};\n\n// : (Schema) → Object<(mark: Mark) → DOMOutputSpec>\n// Gather the serializers in a schema's mark specs into an object.\nDOMSerializer.marksFromSchema = function marksFromSchema (schema) {\n  return gatherToDOM(schema.marks)\n};\n\nfunction gatherToDOM(obj) {\n  var result = {};\n  for (var name in obj) {\n    var toDOM = obj[name].spec.toDOM;\n    if (toDOM) { result[name] = toDOM; }\n  }\n  return result\n}\n\nfunction doc(options) {\n  // declare global: window\n  return options.document || window.document\n}\n\nexport { ContentMatch, DOMParser, DOMSerializer, Fragment, Mark, MarkType, Node, NodeRange, NodeType, ReplaceError, ResolvedPos, Schema, Slice };\n//# sourceMappingURL=index.es.js.map\n","import { ReplaceError, Slice, Fragment, MarkType } from 'prosemirror-model';\n\n// Mappable:: interface\n// There are several things that positions can be mapped through.\n// Such objects conform to this interface.\n//\n//   map:: (pos: number, assoc: ?number) → number\n//   Map a position through this object. When given, `assoc` (should\n//   be -1 or 1, defaults to 1) determines with which side the\n//   position is associated, which determines in which direction to\n//   move when a chunk of content is inserted at the mapped position.\n//\n//   mapResult:: (pos: number, assoc: ?number) → MapResult\n//   Map a position, and return an object containing additional\n//   information about the mapping. The result's `deleted` field tells\n//   you whether the position was deleted (completely enclosed in a\n//   replaced range) during the mapping. When content on only one side\n//   is deleted, the position itself is only considered deleted when\n//   `assoc` points in the direction of the deleted content.\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\n\nvar lower16 = 0xffff;\nvar factor16 = Math.pow(2, 16);\n\nfunction makeRecover(index, offset) { return index + offset * factor16 }\nfunction recoverIndex(value) { return value & lower16 }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16 }\n\n// ::- An object representing a mapped position with extra\n// information.\nvar MapResult = function MapResult(pos, deleted, recover) {\n  if ( deleted === void 0 ) deleted = false;\n  if ( recover === void 0 ) recover = null;\n\n  // :: number The mapped version of the position.\n  this.pos = pos;\n  // :: bool Tells you whether the position was deleted, that is,\n  // whether the step removed its surroundings from the document.\n  this.deleted = deleted;\n  this.recover = recover;\n};\n\n// :: class extends Mappable\n// A map describing the deletions and insertions made by a step, which\n// can be used to find the correspondence between positions in the\n// pre-step version of a document and the same position in the\n// post-step version.\nvar StepMap = function StepMap(ranges, inverted) {\n  if ( inverted === void 0 ) inverted = false;\n\n  this.ranges = ranges;\n  this.inverted = inverted;\n};\n\nStepMap.prototype.recover = function recover (value) {\n  var diff = 0, index = recoverIndex(value);\n  if (!this.inverted) { for (var i = 0; i < index; i++)\n    { diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1]; } }\n  return this.ranges[index * 3] + diff + recoverOffset(value)\n};\n\n// : (number, ?number) → MapResult\nStepMap.prototype.mapResult = function mapResult (pos, assoc) {\n  if ( assoc === void 0 ) assoc = 1;\n return this._map(pos, assoc, false) };\n\n// : (number, ?number) → number\nStepMap.prototype.map = function map (pos, assoc) {\n  if ( assoc === void 0 ) assoc = 1;\n return this._map(pos, assoc, true) };\n\nStepMap.prototype._map = function _map (pos, assoc, simple) {\n  var diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n  for (var i = 0; i < this.ranges.length; i += 3) {\n    var start = this.ranges[i] - (this.inverted ? diff : 0);\n    if (start > pos) { break }\n    var oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n    if (pos <= end) {\n      var side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n      var result = start + diff + (side < 0 ? 0 : newSize);\n      if (simple) { return result }\n      var recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n      return new MapResult(result, assoc < 0 ? pos != start : pos != end, recover)\n    }\n    diff += newSize - oldSize;\n  }\n  return simple ? pos + diff : new MapResult(pos + diff)\n};\n\nStepMap.prototype.touches = function touches (pos, recover) {\n  var diff = 0, index = recoverIndex(recover);\n  var oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n  for (var i = 0; i < this.ranges.length; i += 3) {\n    var start = this.ranges[i] - (this.inverted ? diff : 0);\n    if (start > pos) { break }\n    var oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n    if (pos <= end && i == index * 3) { return true }\n    diff += this.ranges[i + newIndex] - oldSize;\n  }\n  return false\n};\n\n// :: ((oldStart: number, oldEnd: number, newStart: number, newEnd: number))\n// Calls the given function on each of the changed ranges included in\n// this map.\nStepMap.prototype.forEach = function forEach (f) {\n  var oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n  for (var i = 0, diff = 0; i < this.ranges.length; i += 3) {\n    var start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n    var oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n    f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n    diff += newSize - oldSize;\n  }\n};\n\n// :: () → StepMap\n// Create an inverted version of this map. The result can be used to\n// map positions in the post-step document to the pre-step document.\nStepMap.prototype.invert = function invert () {\n  return new StepMap(this.ranges, !this.inverted)\n};\n\nStepMap.prototype.toString = function toString () {\n  return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges)\n};\n\n// :: (n: number) → StepMap\n// Create a map that moves all positions by offset `n` (which may be\n// negative). This can be useful when applying steps meant for a\n// sub-document to a larger document, or vice-versa.\nStepMap.offset = function offset (n) {\n  return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n])\n};\n\nStepMap.empty = new StepMap([]);\n\n// :: class extends Mappable\n// A mapping represents a pipeline of zero or more [step\n// maps](#transform.StepMap). It has special provisions for losslessly\n// handling mapping positions through a series of steps in which some\n// steps are inverted versions of earlier steps. (This comes up when\n// ‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\n// collaboration or history management.)\nvar Mapping = function Mapping(maps, mirror, from, to) {\n  // :: [StepMap]\n  // The step maps in this mapping.\n  this.maps = maps || [];\n  // :: number\n  // The starting position in the `maps` array, used when `map` or\n  // `mapResult` is called.\n  this.from = from || 0;\n  // :: number\n  // The end position in the `maps` array.\n  this.to = to == null ? this.maps.length : to;\n  this.mirror = mirror;\n};\n\n// :: (?number, ?number) → Mapping\n// Create a mapping that maps only through a part of this one.\nMapping.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.maps.length;\n\n  return new Mapping(this.maps, this.mirror, from, to)\n};\n\nMapping.prototype.copy = function copy () {\n  return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to)\n};\n\n// :: (StepMap, ?number)\n// Add a step map to the end of this mapping. If `mirrors` is\n// given, it should be the index of the step map that is the mirror\n// image of this one.\nMapping.prototype.appendMap = function appendMap (map, mirrors) {\n  this.to = this.maps.push(map);\n  if (mirrors != null) { this.setMirror(this.maps.length - 1, mirrors); }\n};\n\n// :: (Mapping)\n// Add all the step maps in a given mapping to this one (preserving\n// mirroring information).\nMapping.prototype.appendMapping = function appendMapping (mapping) {\n  for (var i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n    var mirr = mapping.getMirror(i);\n    this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : null);\n  }\n};\n\n// :: (number) → ?number\n// Finds the offset of the step map that mirrors the map at the\n// given offset, in this mapping (as per the second argument to\n// `appendMap`).\nMapping.prototype.getMirror = function getMirror (n) {\n  if (this.mirror) { for (var i = 0; i < this.mirror.length; i++)\n    { if (this.mirror[i] == n) { return this.mirror[i + (i % 2 ? -1 : 1)] } } }\n};\n\nMapping.prototype.setMirror = function setMirror (n, m) {\n  if (!this.mirror) { this.mirror = []; }\n  this.mirror.push(n, m);\n};\n\n// :: (Mapping)\n// Append the inverse of the given mapping to this one.\nMapping.prototype.appendMappingInverted = function appendMappingInverted (mapping) {\n  for (var i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n    var mirr = mapping.getMirror(i);\n    this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : null);\n  }\n};\n\n// :: () → Mapping\n// Create an inverted version of this mapping.\nMapping.prototype.invert = function invert () {\n  var inverse = new Mapping;\n  inverse.appendMappingInverted(this);\n  return inverse\n};\n\n// : (number, ?number) → number\n// Map a position through this mapping.\nMapping.prototype.map = function map (pos, assoc) {\n    if ( assoc === void 0 ) assoc = 1;\n\n  if (this.mirror) { return this._map(pos, assoc, true) }\n  for (var i = this.from; i < this.to; i++)\n    { pos = this.maps[i].map(pos, assoc); }\n  return pos\n};\n\n// : (number, ?number) → MapResult\n// Map a position through this mapping, returning a mapping\n// result.\nMapping.prototype.mapResult = function mapResult (pos, assoc) {\n  if ( assoc === void 0 ) assoc = 1;\n return this._map(pos, assoc, false) };\n\nMapping.prototype._map = function _map (pos, assoc, simple) {\n  var deleted = false;\n\n  for (var i = this.from; i < this.to; i++) {\n    var map = this.maps[i], result = map.mapResult(pos, assoc);\n    if (result.recover != null) {\n      var corr = this.getMirror(i);\n      if (corr != null && corr > i && corr < this.to) {\n        i = corr;\n        pos = this.maps[corr].recover(result.recover);\n        continue\n      }\n    }\n\n    if (result.deleted) { deleted = true; }\n    pos = result.pos;\n  }\n\n  return simple ? pos : new MapResult(pos, deleted)\n};\n\nfunction TransformError(message) {\n  var err = Error.call(this, message);\n  err.__proto__ = TransformError.prototype;\n  return err\n}\n\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n\n// ::- Abstraction to build up and track an array of\n// [steps](#transform.Step) representing a document transformation.\n//\n// Most transforming methods return the `Transform` object itself, so\n// that they can be chained.\nvar Transform = function Transform(doc) {\n  // :: Node\n  // The current document (the result of applying the steps in the\n  // transform).\n  this.doc = doc;\n  // :: [Step]\n  // The steps in this transform.\n  this.steps = [];\n  // :: [Node]\n  // The documents before each of the steps.\n  this.docs = [];\n  // :: Mapping\n  // A mapping with the maps for each of the steps in this transform.\n  this.mapping = new Mapping;\n};\n\nvar prototypeAccessors = { before: { configurable: true },docChanged: { configurable: true } };\n\n// :: Node The starting document.\nprototypeAccessors.before.get = function () { return this.docs.length ? this.docs[0] : this.doc };\n\n// :: (step: Step) → this\n// Apply a new step in this transform, saving the result. Throws an\n// error when the step fails.\nTransform.prototype.step = function step (object) {\n  var result = this.maybeStep(object);\n  if (result.failed) { throw new TransformError(result.failed) }\n  return this\n};\n\n// :: (Step) → StepResult\n// Try to apply a step in this transformation, ignoring it if it\n// fails. Returns the step result.\nTransform.prototype.maybeStep = function maybeStep (step) {\n  var result = step.apply(this.doc);\n  if (!result.failed) { this.addStep(step, result.doc); }\n  return result\n};\n\n// :: bool\n// True when the document has been changed (when there are any\n// steps).\nprototypeAccessors.docChanged.get = function () {\n  return this.steps.length > 0\n};\n\nTransform.prototype.addStep = function addStep (step, doc) {\n  this.docs.push(this.doc);\n  this.steps.push(step);\n  this.mapping.appendMap(step.getMap());\n  this.doc = doc;\n};\n\nObject.defineProperties( Transform.prototype, prototypeAccessors );\n\nfunction mustOverride() { throw new Error(\"Override me\") }\n\nvar stepsByID = Object.create(null);\n\n// ::- A step object represents an atomic change. It generally applies\n// only to the document it was created for, since the positions\n// stored in it will only make sense for that document.\n//\n// New steps are defined by creating classes that extend `Step`,\n// overriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\n// methods, and registering your class with a unique\n// JSON-serialization identifier using\n// [`Step.jsonID`](#transform.Step^jsonID).\nvar Step = function Step () {};\n\nStep.prototype.apply = function apply (_doc) { return mustOverride() };\n\n// :: () → StepMap\n// Get the step map that represents the changes made by this step,\n// and which can be used to transform between positions in the old\n// and the new document.\nStep.prototype.getMap = function getMap () { return StepMap.empty };\n\n// :: (doc: Node) → Step\n// Create an inverted version of this step. Needs the document as it\n// was before the step as argument.\nStep.prototype.invert = function invert (_doc) { return mustOverride() };\n\n// :: (mapping: Mappable) → ?Step\n// Map this step through a mappable thing, returning either a\n// version of that step with its positions adjusted, or `null` if\n// the step was entirely deleted by the mapping.\nStep.prototype.map = function map (_mapping) { return mustOverride() };\n\n// :: (other: Step) → ?Step\n// Try to merge this step with another one, to be applied directly\n// after it. Returns the merged step when possible, null if the\n// steps can't be merged.\nStep.prototype.merge = function merge (_other) { return null };\n\n// :: () → Object\n// Create a JSON-serializeable representation of this step. When\n// defining this for a custom subclass, make sure the result object\n// includes the step type's [JSON id](#transform.Step^jsonID) under\n// the `stepType` property.\nStep.prototype.toJSON = function toJSON () { return mustOverride() };\n\n// :: (Schema, Object) → Step\n// Deserialize a step from its JSON representation. Will call\n// through to the step class' own implementation of this method.\nStep.fromJSON = function fromJSON (schema, json) {\n  if (!json || !json.stepType) { throw new RangeError(\"Invalid input for Step.fromJSON\") }\n  var type = stepsByID[json.stepType];\n  if (!type) { throw new RangeError((\"No step type \" + (json.stepType) + \" defined\")) }\n  return type.fromJSON(schema, json)\n};\n\n// :: (string, constructor<Step>)\n// To be able to serialize steps to JSON, each step needs a string\n// ID to attach to its JSON representation. Use this method to\n// register an ID for your step classes. Try to pick something\n// that's unlikely to clash with steps from other modules.\nStep.jsonID = function jsonID (id, stepClass) {\n  if (id in stepsByID) { throw new RangeError(\"Duplicate use of step JSON ID \" + id) }\n  stepsByID[id] = stepClass;\n  stepClass.prototype.jsonID = id;\n  return stepClass\n};\n\n// ::- The result of [applying](#transform.Step.apply) a step. Contains either a\n// new document or a failure value.\nvar StepResult = function StepResult(doc, failed) {\n  // :: ?Node The transformed document.\n  this.doc = doc;\n  // :: ?string Text providing information about a failed step.\n  this.failed = failed;\n};\n\n// :: (Node) → StepResult\n// Create a successful step result.\nStepResult.ok = function ok (doc) { return new StepResult(doc, null) };\n\n// :: (string) → StepResult\n// Create a failed step result.\nStepResult.fail = function fail (message) { return new StepResult(null, message) };\n\n// :: (Node, number, number, Slice) → StepResult\n// Call [`Node.replace`](#model.Node.replace) with the given\n// arguments. Create a successful result if it succeeds, and a\n// failed one if it throws a `ReplaceError`.\nStepResult.fromReplace = function fromReplace (doc, from, to, slice) {\n  try {\n    return StepResult.ok(doc.replace(from, to, slice))\n  } catch (e) {\n    if (e instanceof ReplaceError) { return StepResult.fail(e.message) }\n    throw e\n  }\n};\n\n// ::- Replace a part of the document with a slice of new content.\nvar ReplaceStep = /*@__PURE__*/(function (Step) {\n  function ReplaceStep(from, to, slice, structure) {\n    Step.call(this);\n    // :: number\n    // The start position of the replaced range.\n    this.from = from;\n    // :: number\n    // The end position of the replaced range.\n    this.to = to;\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice;\n    this.structure = !!structure;\n  }\n\n  if ( Step ) ReplaceStep.__proto__ = Step;\n  ReplaceStep.prototype = Object.create( Step && Step.prototype );\n  ReplaceStep.prototype.constructor = ReplaceStep;\n\n  ReplaceStep.prototype.apply = function apply (doc) {\n    if (this.structure && contentBetween(doc, this.from, this.to))\n      { return StepResult.fail(\"Structure replace would overwrite content\") }\n    return StepResult.fromReplace(doc, this.from, this.to, this.slice)\n  };\n\n  ReplaceStep.prototype.getMap = function getMap () {\n    return new StepMap([this.from, this.to - this.from, this.slice.size])\n  };\n\n  ReplaceStep.prototype.invert = function invert (doc) {\n    return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to))\n  };\n\n  ReplaceStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    if (from.deleted && to.deleted) { return null }\n    return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice)\n  };\n\n  ReplaceStep.prototype.merge = function merge (other) {\n    if (!(other instanceof ReplaceStep) || other.structure || this.structure) { return null }\n\n    if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n      var slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n      return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure)\n    } else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n      var slice$1 = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n      return new ReplaceStep(other.from, this.to, slice$1, this.structure)\n    } else {\n      return null\n    }\n  };\n\n  ReplaceStep.prototype.toJSON = function toJSON () {\n    var json = {stepType: \"replace\", from: this.from, to: this.to};\n    if (this.slice.size) { json.slice = this.slice.toJSON(); }\n    if (this.structure) { json.structure = true; }\n    return json\n  };\n\n  ReplaceStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      { throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\") }\n    return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure)\n  };\n\n  return ReplaceStep;\n}(Step));\n\nStep.jsonID(\"replace\", ReplaceStep);\n\n// ::- Replace a part of the document with a slice of content, but\n// preserve a range of the replaced content by moving it into the\n// slice.\nvar ReplaceAroundStep = /*@__PURE__*/(function (Step) {\n  function ReplaceAroundStep(from, to, gapFrom, gapTo, slice, insert, structure) {\n    Step.call(this);\n    // :: number\n    // The start position of the replaced range.\n    this.from = from;\n    // :: number\n    // The end position of the replaced range.\n    this.to = to;\n    // :: number\n    // The start of preserved range.\n    this.gapFrom = gapFrom;\n    // :: number\n    // The end of preserved range.\n    this.gapTo = gapTo;\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice;\n    // :: number\n    // The position in the slice where the preserved range should be\n    // inserted.\n    this.insert = insert;\n    this.structure = !!structure;\n  }\n\n  if ( Step ) ReplaceAroundStep.__proto__ = Step;\n  ReplaceAroundStep.prototype = Object.create( Step && Step.prototype );\n  ReplaceAroundStep.prototype.constructor = ReplaceAroundStep;\n\n  ReplaceAroundStep.prototype.apply = function apply (doc) {\n    if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n                           contentBetween(doc, this.gapTo, this.to)))\n      { return StepResult.fail(\"Structure gap-replace would overwrite content\") }\n\n    var gap = doc.slice(this.gapFrom, this.gapTo);\n    if (gap.openStart || gap.openEnd)\n      { return StepResult.fail(\"Gap is not a flat range\") }\n    var inserted = this.slice.insertAt(this.insert, gap.content);\n    if (!inserted) { return StepResult.fail(\"Content does not fit in gap\") }\n    return StepResult.fromReplace(doc, this.from, this.to, inserted)\n  };\n\n  ReplaceAroundStep.prototype.getMap = function getMap () {\n    return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n                        this.gapTo, this.to - this.gapTo, this.slice.size - this.insert])\n  };\n\n  ReplaceAroundStep.prototype.invert = function invert (doc) {\n    var gap = this.gapTo - this.gapFrom;\n    return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap,\n                                 this.from + this.insert, this.from + this.insert + gap,\n                                 doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from),\n                                 this.gapFrom - this.from, this.structure)\n  };\n\n  ReplaceAroundStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    var gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1);\n    if ((from.deleted && to.deleted) || gapFrom < from.pos || gapTo > to.pos) { return null }\n    return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure)\n  };\n\n  ReplaceAroundStep.prototype.toJSON = function toJSON () {\n    var json = {stepType: \"replaceAround\", from: this.from, to: this.to,\n                gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert};\n    if (this.slice.size) { json.slice = this.slice.toJSON(); }\n    if (this.structure) { json.structure = true; }\n    return json\n  };\n\n  ReplaceAroundStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n        typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n      { throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\") }\n    return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo,\n                                 Slice.fromJSON(schema, json.slice), json.insert, !!json.structure)\n  };\n\n  return ReplaceAroundStep;\n}(Step));\n\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\n\nfunction contentBetween(doc, from, to) {\n  var $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n  while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n    depth--;\n    dist--;\n  }\n  if (dist > 0) {\n    var next = $from.node(depth).maybeChild($from.indexAfter(depth));\n    while (dist > 0) {\n      if (!next || next.isLeaf) { return true }\n      next = next.firstChild;\n      dist--;\n    }\n  }\n  return false\n}\n\nfunction canCut(node, start, end) {\n  return (start == 0 || node.canReplace(start, node.childCount)) &&\n    (end == node.childCount || node.canReplace(0, end))\n}\n\n// :: (NodeRange) → ?number\n// Try to find a target depth to which the content in the given range\n// can be lifted. Will not go across\n// [isolating](#model.NodeSpec.isolating) parent nodes.\nfunction liftTarget(range) {\n  var parent = range.parent;\n  var content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n  for (var depth = range.depth;; --depth) {\n    var node = range.$from.node(depth);\n    var index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n    if (depth < range.depth && node.canReplace(index, endIndex, content))\n      { return depth }\n    if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex)) { break }\n  }\n}\n\n// :: (NodeRange, number) → this\n// Split the content in the given range off from its parent, if there\n// is sibling content before or after it, and move it up the tree to\n// the depth specified by `target`. You'll probably want to use\n// [`liftTarget`](#transform.liftTarget) to compute `target`, to make\n// sure the lift is valid.\nTransform.prototype.lift = function(range, target) {\n  var $from = range.$from;\n  var $to = range.$to;\n  var depth = range.depth;\n\n  var gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n  var start = gapStart, end = gapEnd;\n\n  var before = Fragment.empty, openStart = 0;\n  for (var d = depth, splitting = false; d > target; d--)\n    { if (splitting || $from.index(d) > 0) {\n      splitting = true;\n      before = Fragment.from($from.node(d).copy(before));\n      openStart++;\n    } else {\n      start--;\n    } }\n  var after = Fragment.empty, openEnd = 0;\n  for (var d$1 = depth, splitting$1 = false; d$1 > target; d$1--)\n    { if (splitting$1 || $to.after(d$1 + 1) < $to.end(d$1)) {\n      splitting$1 = true;\n      after = Fragment.from($to.node(d$1).copy(after));\n      openEnd++;\n    } else {\n      end++;\n    } }\n\n  return this.step(new ReplaceAroundStep(start, end, gapStart, gapEnd,\n                                         new Slice(before.append(after), openStart, openEnd),\n                                         before.size - openStart, true))\n};\n\n// :: (NodeRange, NodeType, ?Object, ?NodeRange) → ?[{type: NodeType, attrs: ?Object}]\n// Try to find a valid way to wrap the content in the given range in a\n// node of the given type. May introduce extra nodes around and inside\n// the wrapper node, if necessary. Returns null if no valid wrapping\n// could be found. When `innerRange` is given, that range's content is\n// used as the content to fit into the wrapping, instead of the\n// content of `range`.\nfunction findWrapping(range, nodeType, attrs, innerRange) {\n  if ( innerRange === void 0 ) innerRange = range;\n\n  var around = findWrappingOutside(range, nodeType);\n  var inner = around && findWrappingInside(innerRange, nodeType);\n  if (!inner) { return null }\n  return around.map(withAttrs).concat({type: nodeType, attrs: attrs}).concat(inner.map(withAttrs))\n}\n\nfunction withAttrs(type) { return {type: type, attrs: null} }\n\nfunction findWrappingOutside(range, type) {\n  var parent = range.parent;\n  var startIndex = range.startIndex;\n  var endIndex = range.endIndex;\n  var around = parent.contentMatchAt(startIndex).findWrapping(type);\n  if (!around) { return null }\n  var outer = around.length ? around[0] : type;\n  return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null\n}\n\nfunction findWrappingInside(range, type) {\n  var parent = range.parent;\n  var startIndex = range.startIndex;\n  var endIndex = range.endIndex;\n  var inner = parent.child(startIndex);\n  var inside = type.contentMatch.findWrapping(inner.type);\n  if (!inside) { return null }\n  var lastType = inside.length ? inside[inside.length - 1] : type;\n  var innerMatch = lastType.contentMatch;\n  for (var i = startIndex; innerMatch && i < endIndex; i++)\n    { innerMatch = innerMatch.matchType(parent.child(i).type); }\n  if (!innerMatch || !innerMatch.validEnd) { return null }\n  return inside\n}\n\n// :: (NodeRange, [{type: NodeType, attrs: ?Object}]) → this\n// Wrap the given [range](#model.NodeRange) in the given set of wrappers.\n// The wrappers are assumed to be valid in this position, and should\n// probably be computed with [`findWrapping`](#transform.findWrapping).\nTransform.prototype.wrap = function(range, wrappers) {\n  var content = Fragment.empty;\n  for (var i = wrappers.length - 1; i >= 0; i--)\n    { content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content)); }\n\n  var start = range.start, end = range.end;\n  return this.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true))\n};\n\n// :: (number, ?number, NodeType, ?Object) → this\n// Set the type of all textblocks (partly) between `from` and `to` to\n// the given node type with the given attributes.\nTransform.prototype.setBlockType = function(from, to, type, attrs) {\n  var this$1 = this;\n  if ( to === void 0 ) to = from;\n\n  if (!type.isTextblock) { throw new RangeError(\"Type given to setBlockType should be a textblock\") }\n  var mapFrom = this.steps.length;\n  this.doc.nodesBetween(from, to, function (node, pos) {\n    if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(this$1.doc, this$1.mapping.slice(mapFrom).map(pos), type)) {\n      // Ensure all markup that isn't allowed in the new node type is cleared\n      this$1.clearIncompatible(this$1.mapping.slice(mapFrom).map(pos, 1), type);\n      var mapping = this$1.mapping.slice(mapFrom);\n      var startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n      this$1.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1,\n                                      new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true));\n      return false\n    }\n  });\n  return this\n};\n\nfunction canChangeType(doc, pos, type) {\n  var $pos = doc.resolve(pos), index = $pos.index();\n  return $pos.parent.canReplaceWith(index, index + 1, type)\n}\n\n// :: (number, ?NodeType, ?Object, ?[Mark]) → this\n// Change the type, attributes, and/or marks of the node at `pos`.\n// When `type` isn't given, the existing node type is preserved,\nTransform.prototype.setNodeMarkup = function(pos, type, attrs, marks) {\n  var node = this.doc.nodeAt(pos);\n  if (!node) { throw new RangeError(\"No node at given position\") }\n  if (!type) { type = node.type; }\n  var newNode = type.create(attrs, null, marks || node.marks);\n  if (node.isLeaf)\n    { return this.replaceWith(pos, pos + node.nodeSize, newNode) }\n\n  if (!type.validContent(node.content))\n    { throw new RangeError(\"Invalid content for node type \" + type.name) }\n\n  return this.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1,\n                                         new Slice(Fragment.from(newNode), 0, 0), 1, true))\n};\n\n// :: (Node, number, number, ?[?{type: NodeType, attrs: ?Object}]) → bool\n// Check whether splitting at the given position is allowed.\nfunction canSplit(doc, pos, depth, typesAfter) {\n  if ( depth === void 0 ) depth = 1;\n\n  var $pos = doc.resolve(pos), base = $pos.depth - depth;\n  var innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n  if (base < 0 || $pos.parent.type.spec.isolating ||\n      !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n      !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n    { return false }\n  for (var d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n    var node = $pos.node(d), index$1 = $pos.index(d);\n    if (node.type.spec.isolating) { return false }\n    var rest = node.content.cutByIndex(index$1, node.childCount);\n    var after = (typesAfter && typesAfter[i]) || node;\n    if (after != node) { rest = rest.replaceChild(0, after.type.create(after.attrs)); }\n    if (!node.canReplace(index$1 + 1, node.childCount) || !after.type.validContent(rest))\n      { return false }\n  }\n  var index = $pos.indexAfter(base);\n  var baseType = typesAfter && typesAfter[0];\n  return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type)\n}\n\n// :: (number, ?number, ?[?{type: NodeType, attrs: ?Object}]) → this\n// Split the node at the given position, and optionally, if `depth` is\n// greater than one, any number of nodes above that. By default, the\n// parts split off will inherit the node type of the original node.\n// This can be changed by passing an array of types and attributes to\n// use after the split.\nTransform.prototype.split = function(pos, depth, typesAfter) {\n  if ( depth === void 0 ) depth = 1;\n\n  var $pos = this.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n  for (var d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n    before = Fragment.from($pos.node(d).copy(before));\n    var typeAfter = typesAfter && typesAfter[i];\n    after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n  }\n  return this.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true))\n};\n\n// :: (Node, number) → bool\n// Test whether the blocks before and after a given position can be\n// joined.\nfunction canJoin(doc, pos) {\n  var $pos = doc.resolve(pos), index = $pos.index();\n  return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n    $pos.parent.canReplace(index, index + 1)\n}\n\nfunction joinable(a, b) {\n  return a && b && !a.isLeaf && a.canAppend(b)\n}\n\n// :: (Node, number, ?number) → ?number\n// Find an ancestor of the given position that can be joined to the\n// block before (or after if `dir` is positive). Returns the joinable\n// point, if any.\nfunction joinPoint(doc, pos, dir) {\n  if ( dir === void 0 ) dir = -1;\n\n  var $pos = doc.resolve(pos);\n  for (var d = $pos.depth;; d--) {\n    var before = (void 0), after = (void 0), index = $pos.index(d);\n    if (d == $pos.depth) {\n      before = $pos.nodeBefore;\n      after = $pos.nodeAfter;\n    } else if (dir > 0) {\n      before = $pos.node(d + 1);\n      index++;\n      after = $pos.node(d).maybeChild(index);\n    } else {\n      before = $pos.node(d).maybeChild(index - 1);\n      after = $pos.node(d + 1);\n    }\n    if (before && !before.isTextblock && joinable(before, after) &&\n        $pos.node(d).canReplace(index, index + 1)) { return pos }\n    if (d == 0) { break }\n    pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n  }\n}\n\n// :: (number, ?number) → this\n// Join the blocks around the given position. If depth is 2, their\n// last and first siblings are also joined, and so on.\nTransform.prototype.join = function(pos, depth) {\n  if ( depth === void 0 ) depth = 1;\n\n  var step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true);\n  return this.step(step)\n};\n\n// :: (Node, number, NodeType) → ?number\n// Try to find a point where a node of the given type can be inserted\n// near `pos`, by searching up the node hierarchy when `pos` itself\n// isn't a valid place but is at the start or end of a node. Return\n// null if no position was found.\nfunction insertPoint(doc, pos, nodeType) {\n  var $pos = doc.resolve(pos);\n  if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType)) { return pos }\n\n  if ($pos.parentOffset == 0)\n    { for (var d = $pos.depth - 1; d >= 0; d--) {\n      var index = $pos.index(d);\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) { return $pos.before(d + 1) }\n      if (index > 0) { return null }\n    } }\n  if ($pos.parentOffset == $pos.parent.content.size)\n    { for (var d$1 = $pos.depth - 1; d$1 >= 0; d$1--) {\n      var index$1 = $pos.indexAfter(d$1);\n      if ($pos.node(d$1).canReplaceWith(index$1, index$1, nodeType)) { return $pos.after(d$1 + 1) }\n      if (index$1 < $pos.node(d$1).childCount) { return null }\n    } }\n}\n\n// :: (Node, number, Slice) → ?number\n// Finds a position at or around the given position where the given\n// slice can be inserted. Will look at parent nodes' nearest boundary\n// and try there, even if the original position wasn't directly at the\n// start or end of that node. Returns null when no position was found.\nfunction dropPoint(doc, pos, slice) {\n  var $pos = doc.resolve(pos);\n  if (!slice.content.size) { return pos }\n  var content = slice.content;\n  for (var i = 0; i < slice.openStart; i++) { content = content.firstChild.content; }\n  for (var pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n    for (var d = $pos.depth; d >= 0; d--) {\n      var bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1;\n      var insertPos = $pos.index(d) + (bias > 0 ? 1 : 0);\n      var parent = $pos.node(d), fits = false;\n      if (pass == 1) {\n        fits = parent.canReplace(insertPos, insertPos, content);\n      } else {\n        var wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type);\n        fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0]);\n      }\n      if (fits)\n        { return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1) }\n    }\n  }\n  return null\n}\n\nfunction mapFragment(fragment, f, parent) {\n  var mapped = [];\n  for (var i = 0; i < fragment.childCount; i++) {\n    var child = fragment.child(i);\n    if (child.content.size) { child = child.copy(mapFragment(child.content, f, child)); }\n    if (child.isInline) { child = f(child, parent, i); }\n    mapped.push(child);\n  }\n  return Fragment.fromArray(mapped)\n}\n\n// ::- Add a mark to all inline content between two positions.\nvar AddMarkStep = /*@__PURE__*/(function (Step) {\n  function AddMarkStep(from, to, mark) {\n    Step.call(this);\n    // :: number\n    // The start of the marked range.\n    this.from = from;\n    // :: number\n    // The end of the marked range.\n    this.to = to;\n    // :: Mark\n    // The mark to add.\n    this.mark = mark;\n  }\n\n  if ( Step ) AddMarkStep.__proto__ = Step;\n  AddMarkStep.prototype = Object.create( Step && Step.prototype );\n  AddMarkStep.prototype.constructor = AddMarkStep;\n\n  AddMarkStep.prototype.apply = function apply (doc) {\n    var this$1 = this;\n\n    var oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n    var parent = $from.node($from.sharedDepth(this.to));\n    var slice = new Slice(mapFragment(oldSlice.content, function (node, parent) {\n      if (!node.isAtom || !parent.type.allowsMarkType(this$1.mark.type)) { return node }\n      return node.mark(this$1.mark.addToSet(node.marks))\n    }, parent), oldSlice.openStart, oldSlice.openEnd);\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  };\n\n  AddMarkStep.prototype.invert = function invert () {\n    return new RemoveMarkStep(this.from, this.to, this.mark)\n  };\n\n  AddMarkStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    if (from.deleted && to.deleted || from.pos >= to.pos) { return null }\n    return new AddMarkStep(from.pos, to.pos, this.mark)\n  };\n\n  AddMarkStep.prototype.merge = function merge (other) {\n    if (other instanceof AddMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      { return new AddMarkStep(Math.min(this.from, other.from),\n                             Math.max(this.to, other.to), this.mark) }\n  };\n\n  AddMarkStep.prototype.toJSON = function toJSON () {\n    return {stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  };\n\n  AddMarkStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      { throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\") }\n    return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  };\n\n  return AddMarkStep;\n}(Step));\n\nStep.jsonID(\"addMark\", AddMarkStep);\n\n// ::- Remove a mark from all inline content between two positions.\nvar RemoveMarkStep = /*@__PURE__*/(function (Step) {\n  function RemoveMarkStep(from, to, mark) {\n    Step.call(this);\n    // :: number\n    // The start of the unmarked range.\n    this.from = from;\n    // :: number\n    // The end of the unmarked range.\n    this.to = to;\n    // :: Mark\n    // The mark to remove.\n    this.mark = mark;\n  }\n\n  if ( Step ) RemoveMarkStep.__proto__ = Step;\n  RemoveMarkStep.prototype = Object.create( Step && Step.prototype );\n  RemoveMarkStep.prototype.constructor = RemoveMarkStep;\n\n  RemoveMarkStep.prototype.apply = function apply (doc) {\n    var this$1 = this;\n\n    var oldSlice = doc.slice(this.from, this.to);\n    var slice = new Slice(mapFragment(oldSlice.content, function (node) {\n      return node.mark(this$1.mark.removeFromSet(node.marks))\n    }), oldSlice.openStart, oldSlice.openEnd);\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  };\n\n  RemoveMarkStep.prototype.invert = function invert () {\n    return new AddMarkStep(this.from, this.to, this.mark)\n  };\n\n  RemoveMarkStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    if (from.deleted && to.deleted || from.pos >= to.pos) { return null }\n    return new RemoveMarkStep(from.pos, to.pos, this.mark)\n  };\n\n  RemoveMarkStep.prototype.merge = function merge (other) {\n    if (other instanceof RemoveMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      { return new RemoveMarkStep(Math.min(this.from, other.from),\n                                Math.max(this.to, other.to), this.mark) }\n  };\n\n  RemoveMarkStep.prototype.toJSON = function toJSON () {\n    return {stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  };\n\n  RemoveMarkStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      { throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\") }\n    return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  };\n\n  return RemoveMarkStep;\n}(Step));\n\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n\n// :: (number, number, Mark) → this\n// Add the given mark to the inline content between `from` and `to`.\nTransform.prototype.addMark = function(from, to, mark) {\n  var this$1 = this;\n\n  var removed = [], added = [], removing = null, adding = null;\n  this.doc.nodesBetween(from, to, function (node, pos, parent) {\n    if (!node.isInline) { return }\n    var marks = node.marks;\n    if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n      var start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n      var newSet = mark.addToSet(marks);\n\n      for (var i = 0; i < marks.length; i++) {\n        if (!marks[i].isInSet(newSet)) {\n          if (removing && removing.to == start && removing.mark.eq(marks[i]))\n            { removing.to = end; }\n          else\n            { removed.push(removing = new RemoveMarkStep(start, end, marks[i])); }\n        }\n      }\n\n      if (adding && adding.to == start)\n        { adding.to = end; }\n      else\n        { added.push(adding = new AddMarkStep(start, end, mark)); }\n    }\n  });\n\n  removed.forEach(function (s) { return this$1.step(s); });\n  added.forEach(function (s) { return this$1.step(s); });\n  return this\n};\n\n// :: (number, number, ?union<Mark, MarkType>) → this\n// Remove marks from inline nodes between `from` and `to`. When `mark`\n// is a single mark, remove precisely that mark. When it is a mark type,\n// remove all marks of that type. When it is null, remove all marks of\n// any type.\nTransform.prototype.removeMark = function(from, to, mark) {\n  var this$1 = this;\n  if ( mark === void 0 ) mark = null;\n\n  var matched = [], step = 0;\n  this.doc.nodesBetween(from, to, function (node, pos) {\n    if (!node.isInline) { return }\n    step++;\n    var toRemove = null;\n    if (mark instanceof MarkType) {\n      var set = node.marks, found;\n      while (found = mark.isInSet(set)) {\n(toRemove || (toRemove = [])).push(found);\n        set = found.removeFromSet(set);\n      }\n    } else if (mark) {\n      if (mark.isInSet(node.marks)) { toRemove = [mark]; }\n    } else {\n      toRemove = node.marks;\n    }\n    if (toRemove && toRemove.length) {\n      var end = Math.min(pos + node.nodeSize, to);\n      for (var i = 0; i < toRemove.length; i++) {\n        var style = toRemove[i], found$1 = (void 0);\n        for (var j = 0; j < matched.length; j++) {\n          var m = matched[j];\n          if (m.step == step - 1 && style.eq(matched[j].style)) { found$1 = m; }\n        }\n        if (found$1) {\n          found$1.to = end;\n          found$1.step = step;\n        } else {\n          matched.push({style: style, from: Math.max(pos, from), to: end, step: step});\n        }\n      }\n    }\n  });\n  matched.forEach(function (m) { return this$1.step(new RemoveMarkStep(m.from, m.to, m.style)); });\n  return this\n};\n\n// :: (number, NodeType, ?ContentMatch) → this\n// Removes all marks and nodes from the content of the node at `pos`\n// that don't match the given new parent node type. Accepts an\n// optional starting [content match](#model.ContentMatch) as third\n// argument.\nTransform.prototype.clearIncompatible = function(pos, parentType, match) {\n  if ( match === void 0 ) match = parentType.contentMatch;\n\n  var node = this.doc.nodeAt(pos);\n  var delSteps = [], cur = pos + 1;\n  for (var i = 0; i < node.childCount; i++) {\n    var child = node.child(i), end = cur + child.nodeSize;\n    var allowed = match.matchType(child.type, child.attrs);\n    if (!allowed) {\n      delSteps.push(new ReplaceStep(cur, end, Slice.empty));\n    } else {\n      match = allowed;\n      for (var j = 0; j < child.marks.length; j++) { if (!parentType.allowsMarkType(child.marks[j].type))\n        { this.step(new RemoveMarkStep(cur, end, child.marks[j])); } }\n    }\n    cur = end;\n  }\n  if (!match.validEnd) {\n    var fill = match.fillBefore(Fragment.empty, true);\n    this.replace(cur, cur, new Slice(fill, 0, 0));\n  }\n  for (var i$1 = delSteps.length - 1; i$1 >= 0; i$1--) { this.step(delSteps[i$1]); }\n  return this\n};\n\n// :: (Node, number, ?number, ?Slice) → ?Step\n// ‘Fit’ a slice into a given position in the document, producing a\n// [step](#transform.Step) that inserts it. Will return null if\n// there's no meaningful way to insert the slice here, or inserting it\n// would be a no-op (an empty slice over an empty range).\nfunction replaceStep(doc, from, to, slice) {\n  if ( to === void 0 ) to = from;\n  if ( slice === void 0 ) slice = Slice.empty;\n\n  if (from == to && !slice.size) { return null }\n\n  var $from = doc.resolve(from), $to = doc.resolve(to);\n  // Optimization -- avoid work if it's obvious that it's not needed.\n  if (fitsTrivially($from, $to, slice)) { return new ReplaceStep(from, to, slice) }\n  return new Fitter($from, $to, slice).fit()\n}\n\n// :: (number, ?number, ?Slice) → this\n// Replace the part of the document between `from` and `to` with the\n// given `slice`.\nTransform.prototype.replace = function(from, to, slice) {\n  if ( to === void 0 ) to = from;\n  if ( slice === void 0 ) slice = Slice.empty;\n\n  var step = replaceStep(this.doc, from, to, slice);\n  if (step) { this.step(step); }\n  return this\n};\n\n// :: (number, number, union<Fragment, Node, [Node]>) → this\n// Replace the given range with the given content, which may be a\n// fragment, node, or array of nodes.\nTransform.prototype.replaceWith = function(from, to, content) {\n  return this.replace(from, to, new Slice(Fragment.from(content), 0, 0))\n};\n\n// :: (number, number) → this\n// Delete the content between the given positions.\nTransform.prototype.delete = function(from, to) {\n  return this.replace(from, to, Slice.empty)\n};\n\n// :: (number, union<Fragment, Node, [Node]>) → this\n// Insert the given content at the given position.\nTransform.prototype.insert = function(pos, content) {\n  return this.replaceWith(pos, pos, content)\n};\n\nfunction fitsTrivially($from, $to, slice) {\n  return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n    $from.parent.canReplace($from.index(), $to.index(), slice.content)\n}\n\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nvar Fitter = function Fitter($from, $to, slice) {\n  this.$to = $to;\n  this.$from = $from;\n  this.unplaced = slice;\n\n  this.frontier = [];\n  for (var i = 0; i <= $from.depth; i++) {\n    var node = $from.node(i);\n    this.frontier.push({\n      type: node.type,\n      match: node.contentMatchAt($from.indexAfter(i))\n    });\n  }\n\n  this.placed = Fragment.empty;\n  for (var i$1 = $from.depth; i$1 > 0; i$1--)\n    { this.placed = Fragment.from($from.node(i$1).copy(this.placed)); }\n};\n\nvar prototypeAccessors$1 = { depth: { configurable: true } };\n\nprototypeAccessors$1.depth.get = function () { return this.frontier.length - 1 };\n\nFitter.prototype.fit = function fit () {\n  // As long as there's unplaced content, try to place some of it.\n  // If that fails, either increase the open score of the unplaced\n  // slice, or drop nodes from it, and then try again.\n  while (this.unplaced.size) {\n    var fit = this.findFittable();\n    if (fit) { this.placeNodes(fit); }\n    else { this.openMore() || this.dropNode(); }\n  }\n  // When there's inline content directly after the frontier _and_\n  // directly after `this.$to`, we must generate a `ReplaceAround`\n  // step that pulls that content into the node after the frontier.\n  // That means the fitting must be done to the end of the textblock\n  // node after `this.$to`, not `this.$to` itself.\n  var moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n  var $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n  if (!$to) { return null }\n\n  // If closing to `$to` succeeded, create a step\n  var content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n  while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n    content = content.firstChild.content;\n    openStart--; openEnd--;\n  }\n  var slice = new Slice(content, openStart, openEnd);\n  if (moveInline > -1)\n    { return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize) }\n  if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n    { return new ReplaceStep($from.pos, $to.pos, slice) }\n};\n\n// Find a position on the start spine of `this.unplaced` that has\n// content that can be moved somewhere on the frontier. Returns two\n// depths, one for the slice and one for the frontier.\nFitter.prototype.findFittable = function findFittable () {\n  // Only try wrapping nodes (pass 2) after finding a place without\n  // wrapping failed.\n  for (var pass = 1; pass <= 2; pass++) {\n    for (var sliceDepth = this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n      var fragment = (void 0), parent = (void 0);\n      if (sliceDepth) {\n        parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n        fragment = parent.content;\n      } else {\n        fragment = this.unplaced.content;\n      }\n      var first = fragment.firstChild;\n      for (var frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n        var ref = this.frontier[frontierDepth];\n          var type = ref.type;\n          var match = ref.match;\n          var wrap = (void 0), inject = (void 0);\n        // In pass 1, if the next node matches, or there is no next\n        // node but the parents look compatible, we've found a\n        // place.\n        if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                          : type.compatibleContent(parent.type)))\n          { return {sliceDepth: sliceDepth, frontierDepth: frontierDepth, parent: parent, inject: inject} }\n        // In pass 2, look for a set of wrapping nodes that make\n        // `first` fit here.\n        else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n          { return {sliceDepth: sliceDepth, frontierDepth: frontierDepth, parent: parent, wrap: wrap} }\n        // Don't continue looking further up if the parent node\n        // would fit here.\n        if (parent && match.matchType(parent.type)) { break }\n      }\n    }\n  }\n};\n\nFitter.prototype.openMore = function openMore () {\n  var ref = this.unplaced;\n    var content = ref.content;\n    var openStart = ref.openStart;\n    var openEnd = ref.openEnd;\n  var inner = contentAt(content, openStart);\n  if (!inner.childCount || inner.firstChild.isLeaf) { return false }\n  this.unplaced = new Slice(content, openStart + 1,\n                            Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n  return true\n};\n\nFitter.prototype.dropNode = function dropNode () {\n  var ref = this.unplaced;\n    var content = ref.content;\n    var openStart = ref.openStart;\n    var openEnd = ref.openEnd;\n  var inner = contentAt(content, openStart);\n  if (inner.childCount <= 1 && openStart > 0) {\n    var openAtEnd = content.size - openStart <= openStart + inner.size;\n    this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1,\n                              openAtEnd ? openStart - 1 : openEnd);\n  } else {\n    this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n  }\n};\n\n// : ({sliceDepth: number, frontierDepth: number, parent: ?Node, wrap: ?[NodeType], inject: ?Fragment})\n// Move content from the unplaced slice at `sliceDepth` to the\n// frontier node at `frontierDepth`. Close that frontier node when\n// applicable.\nFitter.prototype.placeNodes = function placeNodes (ref) {\n    var sliceDepth = ref.sliceDepth;\n    var frontierDepth = ref.frontierDepth;\n    var parent = ref.parent;\n    var inject = ref.inject;\n    var wrap = ref.wrap;\n\n  while (this.depth > frontierDepth) { this.closeFrontierNode(); }\n  if (wrap) { for (var i = 0; i < wrap.length; i++) { this.openFrontierNode(wrap[i]); } }\n\n  var slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n  var openStart = slice.openStart - sliceDepth;\n  var taken = 0, add = [];\n  var ref$1 = this.frontier[frontierDepth];\n    var match = ref$1.match;\n    var type = ref$1.type;\n  if (inject) {\n    for (var i$1 = 0; i$1 < inject.childCount; i$1++) { add.push(inject.child(i$1)); }\n    match = match.matchFragment(inject);\n  }\n  // Computes the amount of (end) open nodes at the end of the\n  // fragment. When 0, the parent is open, but no more. When\n  // negative, nothing is open.\n  var openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n  // Scan over the fragment, fitting as many child nodes as\n  // possible.\n  while (taken < fragment.childCount) {\n    var next = fragment.child(taken), matches = match.matchType(next.type);\n    if (!matches) { break }\n    taken++;\n    if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n      match = matches;\n      add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0,\n                              taken == fragment.childCount ? openEndCount : -1));\n    }\n  }\n  var toEnd = taken == fragment.childCount;\n  if (!toEnd) { openEndCount = -1; }\n\n  this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n  this.frontier[frontierDepth].match = match;\n\n  // If the parent types match, and the entire node was moved, and\n  // it's not open, close this frontier node right away.\n  if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n    { this.closeFrontierNode(); }\n\n  // Add new frontier nodes for any open nodes at the end.\n  for (var i$2 = 0, cur = fragment; i$2 < openEndCount; i$2++) {\n    var node = cur.lastChild;\n    this.frontier.push({type: node.type, match: node.contentMatchAt(node.childCount)});\n    cur = node.content;\n  }\n\n  // Update `this.unplaced`. Drop the entire node from which we\n  // placed it we got to its end, otherwise just drop the placed\n  // nodes.\n  this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n    : sliceDepth == 0 ? Slice.empty\n    : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1),\n                sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n};\n\nFitter.prototype.mustMoveInline = function mustMoveInline () {\n  if (!this.$to.parent.isTextblock || this.$to.end() == this.$to.pos) { return -1 }\n  var top = this.frontier[this.depth], level;\n  if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n      (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth)) { return -1 }\n\n  var ref = this.$to;\n    var depth = ref.depth;\n    var after = this.$to.after(depth);\n  while (depth > 1 && after == this.$to.end(--depth)) { ++after; }\n  return after\n};\n\nFitter.prototype.findCloseLevel = function findCloseLevel ($to) {\n  scan: for (var i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n    var ref = this.frontier[i];\n      var match = ref.match;\n      var type = ref.type;\n    var dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n    var fit = contentAfterFits($to, i, type, match, dropInner);\n    if (!fit) { continue }\n    for (var d = i - 1; d >= 0; d--) {\n      var ref$1 = this.frontier[d];\n        var match$1 = ref$1.match;\n        var type$1 = ref$1.type;\n      var matches = contentAfterFits($to, d, type$1, match$1, true);\n      if (!matches || matches.childCount) { continue scan }\n    }\n    return {depth: i, fit: fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to}\n  }\n};\n\nFitter.prototype.close = function close ($to) {\n  var close = this.findCloseLevel($to);\n  if (!close) { return null }\n\n  while (this.depth > close.depth) { this.closeFrontierNode(); }\n  if (close.fit.childCount) { this.placed = addToFragment(this.placed, close.depth, close.fit); }\n  $to = close.move;\n  for (var d = close.depth + 1; d <= $to.depth; d++) {\n    var node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n    this.openFrontierNode(node.type, node.attrs, add);\n  }\n  return $to\n};\n\nFitter.prototype.openFrontierNode = function openFrontierNode (type, attrs, content) {\n  var top = this.frontier[this.depth];\n  top.match = top.match.matchType(type);\n  this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n  this.frontier.push({type: type, match: type.contentMatch});\n};\n\nFitter.prototype.closeFrontierNode = function closeFrontierNode () {\n  var open = this.frontier.pop();\n  var add = open.match.fillBefore(Fragment.empty, true);\n  if (add.childCount) { this.placed = addToFragment(this.placed, this.frontier.length, add); }\n};\n\nObject.defineProperties( Fitter.prototype, prototypeAccessors$1 );\n\nfunction dropFromFragment(fragment, depth, count) {\n  if (depth == 0) { return fragment.cutByIndex(count) }\n  return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)))\n}\n\nfunction addToFragment(fragment, depth, content) {\n  if (depth == 0) { return fragment.append(content) }\n  return fragment.replaceChild(fragment.childCount - 1,\n                               fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)))\n}\n\nfunction contentAt(fragment, depth) {\n  for (var i = 0; i < depth; i++) { fragment = fragment.firstChild.content; }\n  return fragment\n}\n\nfunction closeNodeStart(node, openStart, openEnd) {\n  if (openStart <= 0) { return node }\n  var frag = node.content;\n  if (openStart > 1)\n    { frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0)); }\n  if (openStart > 0) {\n    frag = node.type.contentMatch.fillBefore(frag).append(frag);\n    if (openEnd <= 0) { frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true)); }\n  }\n  return node.copy(frag)\n}\n\nfunction contentAfterFits($to, depth, type, match, open) {\n  var node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n  if (index == node.childCount && !type.compatibleContent(node.type)) { return null }\n  var fit = match.fillBefore(node.content, true, index);\n  return fit && !invalidMarks(type, node.content, index) ? fit : null\n}\n\nfunction invalidMarks(type, fragment, start) {\n  for (var i = start; i < fragment.childCount; i++)\n    { if (!type.allowsMarks(fragment.child(i).marks)) { return true } }\n  return false\n}\n\n// :: (number, number, Slice) → this\n// Replace a range of the document with a given slice, using `from`,\n// `to`, and the slice's [`openStart`](#model.Slice.openStart) property\n// as hints, rather than fixed start and end points. This method may\n// grow the replaced area or close open nodes in the slice in order to\n// get a fit that is more in line with WYSIWYG expectations, by\n// dropping fully covered parent nodes of the replaced region when\n// they are marked [non-defining](#model.NodeSpec.defining), or\n// including an open parent node from the slice that _is_ marked as\n// [defining](#model.NodeSpec.defining).\n//\n// This is the method, for example, to handle paste. The similar\n// [`replace`](#transform.Transform.replace) method is a more\n// primitive tool which will _not_ move the start and end of its given\n// range, and is useful in situations where you need more precise\n// control over what happens.\nTransform.prototype.replaceRange = function(from, to, slice) {\n  if (!slice.size) { return this.deleteRange(from, to) }\n\n  var $from = this.doc.resolve(from), $to = this.doc.resolve(to);\n  if (fitsTrivially($from, $to, slice))\n    { return this.step(new ReplaceStep(from, to, slice)) }\n\n  var targetDepths = coveredDepths($from, this.doc.resolve(to));\n  // Can't replace the whole document, so remove 0 if it's present\n  if (targetDepths[targetDepths.length - 1] == 0) { targetDepths.pop(); }\n  // Negative numbers represent not expansion over the whole node at\n  // that depth, but replacing from $from.before(-D) to $to.pos.\n  var preferredTarget = -($from.depth + 1);\n  targetDepths.unshift(preferredTarget);\n  // This loop picks a preferred target depth, if one of the covering\n  // depths is not outside of a defining node, and adds negative\n  // depths for any depth that has $from at its start and does not\n  // cross a defining node.\n  for (var d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n    var spec = $from.node(d).type.spec;\n    if (spec.defining || spec.isolating) { break }\n    if (targetDepths.indexOf(d) > -1) { preferredTarget = d; }\n    else if ($from.before(d) == pos) { targetDepths.splice(1, 0, -d); }\n  }\n  // Try to fit each possible depth of the slice into each possible\n  // target depth, starting with the preferred depths.\n  var preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n\n  var leftNodes = [], preferredDepth = slice.openStart;\n  for (var content = slice.content, i = 0;; i++) {\n    var node = content.firstChild;\n    leftNodes.push(node);\n    if (i == slice.openStart) { break }\n    content = node.content;\n  }\n  // Back up if the node directly above openStart, or the node above\n  // that separated only by a non-defining textblock node, is defining.\n  if (preferredDepth > 0 && leftNodes[preferredDepth - 1].type.spec.defining &&\n      $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 1].type)\n    { preferredDepth -= 1; }\n  else if (preferredDepth >= 2 && leftNodes[preferredDepth - 1].isTextblock && leftNodes[preferredDepth - 2].type.spec.defining &&\n           $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 2].type)\n    { preferredDepth -= 2; }\n\n  for (var j = slice.openStart; j >= 0; j--) {\n    var openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n    var insert = leftNodes[openDepth];\n    if (!insert) { continue }\n    for (var i$1 = 0; i$1 < targetDepths.length; i$1++) {\n      // Loop over possible expansion levels, starting with the\n      // preferred one\n      var targetDepth = targetDepths[(i$1 + preferredTargetIndex) % targetDepths.length], expand = true;\n      if (targetDepth < 0) { expand = false; targetDepth = -targetDepth; }\n      var parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n      if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n        { return this.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to,\n                            new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth),\n                                      openDepth, slice.openEnd)) }\n    }\n  }\n\n  var startSteps = this.steps.length;\n  for (var i$2 = targetDepths.length - 1; i$2 >= 0; i$2--) {\n    this.replace(from, to, slice);\n    if (this.steps.length > startSteps) { break }\n    var depth = targetDepths[i$2];\n    if (depth < 0) { continue }\n    from = $from.before(depth); to = $to.after(depth);\n  }\n  return this\n};\n\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n  if (depth < oldOpen) {\n    var first = fragment.firstChild;\n    fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n  }\n  if (depth > newOpen) {\n    var match = parent.contentMatchAt(0);\n    var start = match.fillBefore(fragment).append(fragment);\n    fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n  }\n  return fragment\n}\n\n// :: (number, number, Node) → this\n// Replace the given range with a node, but use `from` and `to` as\n// hints, rather than precise positions. When from and to are the same\n// and are at the start or end of a parent node in which the given\n// node doesn't fit, this method may _move_ them out towards a parent\n// that does allow the given node to be placed. When the given range\n// completely covers a parent node, this method may completely replace\n// that parent node.\nTransform.prototype.replaceRangeWith = function(from, to, node) {\n  if (!node.isInline && from == to && this.doc.resolve(from).parent.content.size) {\n    var point = insertPoint(this.doc, from, node.type);\n    if (point != null) { from = to = point; }\n  }\n  return this.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0))\n};\n\n// :: (number, number) → this\n// Delete the given range, expanding it to cover fully covered\n// parent nodes until a valid replace is found.\nTransform.prototype.deleteRange = function(from, to) {\n  var $from = this.doc.resolve(from), $to = this.doc.resolve(to);\n  var covered = coveredDepths($from, $to);\n  for (var i = 0; i < covered.length; i++) {\n    var depth = covered[i], last = i == covered.length - 1;\n    if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n      { return this.delete($from.start(depth), $to.end(depth)) }\n    if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n      { return this.delete($from.before(depth), $to.after(depth)) }\n  }\n  for (var d = 1; d <= $from.depth && d <= $to.depth; d++) {\n    if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n      { return this.delete($from.before(d), to) }\n  }\n  return this.delete(from, to)\n};\n\n// : (ResolvedPos, ResolvedPos) → [number]\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n  var result = [], minDepth = Math.min($from.depth, $to.depth);\n  for (var d = minDepth; d >= 0; d--) {\n    var start = $from.start(d);\n    if (start < $from.pos - ($from.depth - d) ||\n        $to.end(d) > $to.pos + ($to.depth - d) ||\n        $from.node(d).type.spec.isolating ||\n        $to.node(d).type.spec.isolating) { break }\n    if (start == $to.start(d) ||\n        (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n         d && $to.start(d - 1) == start - 1))\n      { result.push(d); }\n  }\n  return result\n}\n\nexport { AddMarkStep, MapResult, Mapping, RemoveMarkStep, ReplaceAroundStep, ReplaceStep, Step, StepMap, StepResult, Transform, TransformError, canJoin, canSplit, dropPoint, findWrapping, insertPoint, joinPoint, liftTarget, replaceStep };\n//# sourceMappingURL=index.es.js.map\n","import { Slice, Fragment, Mark, Node } from 'prosemirror-model';\nimport { ReplaceStep, ReplaceAroundStep, Transform } from 'prosemirror-transform';\n\nvar classesById = Object.create(null);\n\n// ::- Superclass for editor selections. Every selection type should\n// extend this. Should not be instantiated directly.\nvar Selection = function Selection($anchor, $head, ranges) {\n  // :: [SelectionRange]\n  // The ranges covered by the selection.\n  this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n  // :: ResolvedPos\n  // The resolved anchor of the selection (the side that stays in\n  // place when the selection is modified).\n  this.$anchor = $anchor;\n  // :: ResolvedPos\n  // The resolved head of the selection (the side that moves when\n  // the selection is modified).\n  this.$head = $head;\n};\n\nvar prototypeAccessors = { anchor: { configurable: true },head: { configurable: true },from: { configurable: true },to: { configurable: true },$from: { configurable: true },$to: { configurable: true },empty: { configurable: true } };\n\n// :: number\n// The selection's anchor, as an unresolved position.\nprototypeAccessors.anchor.get = function () { return this.$anchor.pos };\n\n// :: number\n// The selection's head.\nprototypeAccessors.head.get = function () { return this.$head.pos };\n\n// :: number\n// The lower bound of the selection's main range.\nprototypeAccessors.from.get = function () { return this.$from.pos };\n\n// :: number\n// The upper bound of the selection's main range.\nprototypeAccessors.to.get = function () { return this.$to.pos };\n\n// :: ResolvedPos\n// The resolved lowerbound of the selection's main range.\nprototypeAccessors.$from.get = function () {\n  return this.ranges[0].$from\n};\n\n// :: ResolvedPos\n// The resolved upper bound of the selection's main range.\nprototypeAccessors.$to.get = function () {\n  return this.ranges[0].$to\n};\n\n// :: bool\n// Indicates whether the selection contains any content.\nprototypeAccessors.empty.get = function () {\n  var ranges = this.ranges;\n  for (var i = 0; i < ranges.length; i++)\n    { if (ranges[i].$from.pos != ranges[i].$to.pos) { return false } }\n  return true\n};\n\n// eq:: (Selection) → bool\n// Test whether the selection is the same as another selection.\n\n// map:: (doc: Node, mapping: Mappable) → Selection\n// Map this selection through a [mappable](#transform.Mappable) thing. `doc`\n// should be the new document to which we are mapping.\n\n// :: () → Slice\n// Get the content of this selection as a slice.\nSelection.prototype.content = function content () {\n  return this.$from.node(0).slice(this.from, this.to, true)\n};\n\n// :: (Transaction, ?Slice)\n// Replace the selection with a slice or, if no slice is given,\n// delete the selection. Will append to the given transaction.\nSelection.prototype.replace = function replace (tr, content) {\n    if ( content === void 0 ) content = Slice.empty;\n\n  // Put the new selection at the position after the inserted\n  // content. When that ended in an inline node, search backwards,\n  // to get the position after that node. If not, search forward.\n  var lastNode = content.content.lastChild, lastParent = null;\n  for (var i = 0; i < content.openEnd; i++) {\n    lastParent = lastNode;\n    lastNode = lastNode.lastChild;\n  }\n\n  var mapFrom = tr.steps.length, ranges = this.ranges;\n  for (var i$1 = 0; i$1 < ranges.length; i$1++) {\n    var ref = ranges[i$1];\n      var $from = ref.$from;\n      var $to = ref.$to;\n      var mapping = tr.mapping.slice(mapFrom);\n    tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i$1 ? Slice.empty : content);\n    if (i$1 == 0)\n      { selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1); }\n  }\n};\n\n// :: (Transaction, Node)\n// Replace the selection with the given node, appending the changes\n// to the given transaction.\nSelection.prototype.replaceWith = function replaceWith (tr, node) {\n  var mapFrom = tr.steps.length, ranges = this.ranges;\n  for (var i = 0; i < ranges.length; i++) {\n    var ref = ranges[i];\n      var $from = ref.$from;\n      var $to = ref.$to;\n      var mapping = tr.mapping.slice(mapFrom);\n    var from = mapping.map($from.pos), to = mapping.map($to.pos);\n    if (i) {\n      tr.deleteRange(from, to);\n    } else {\n      tr.replaceRangeWith(from, to, node);\n      selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n    }\n  }\n};\n\n// toJSON:: () → Object\n// Convert the selection to a JSON representation. When implementing\n// this for a custom selection class, make sure to give the object a\n// `type` property whose value matches the ID under which you\n// [registered](#state.Selection^jsonID) your class.\n\n// :: (ResolvedPos, number, ?bool) → ?Selection\n// Find a valid cursor or leaf node selection starting at the given\n// position and searching back if `dir` is negative, and forward if\n// positive. When `textOnly` is true, only consider cursor\n// selections. Will return null when no valid selection position is\n// found.\nSelection.findFrom = function findFrom ($pos, dir, textOnly) {\n  var inner = $pos.parent.inlineContent ? new TextSelection($pos)\n      : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n  if (inner) { return inner }\n\n  for (var depth = $pos.depth - 1; depth >= 0; depth--) {\n    var found = dir < 0\n        ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n        : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n    if (found) { return found }\n  }\n};\n\n// :: (ResolvedPos, ?number) → Selection\n// Find a valid cursor or leaf node selection near the given\n// position. Searches forward first by default, but if `bias` is\n// negative, it will search backwards first.\nSelection.near = function near ($pos, bias) {\n    if ( bias === void 0 ) bias = 1;\n\n  return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0))\n};\n\n// :: (Node) → Selection\n// Find the cursor or leaf node selection closest to the start of\n// the given document. Will return an\n// [`AllSelection`](#state.AllSelection) if no valid position\n// exists.\nSelection.atStart = function atStart (doc) {\n  return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc)\n};\n\n// :: (Node) → Selection\n// Find the cursor or leaf node selection closest to the end of the\n// given document.\nSelection.atEnd = function atEnd (doc) {\n  return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc)\n};\n\n// :: (Node, Object) → Selection\n// Deserialize the JSON representation of a selection. Must be\n// implemented for custom classes (as a static class method).\nSelection.fromJSON = function fromJSON (doc, json) {\n  if (!json || !json.type) { throw new RangeError(\"Invalid input for Selection.fromJSON\") }\n  var cls = classesById[json.type];\n  if (!cls) { throw new RangeError((\"No selection type \" + (json.type) + \" defined\")) }\n  return cls.fromJSON(doc, json)\n};\n\n// :: (string, constructor<Selection>)\n// To be able to deserialize selections from JSON, custom selection\n// classes must register themselves with an ID string, so that they\n// can be disambiguated. Try to pick something that's unlikely to\n// clash with classes from other modules.\nSelection.jsonID = function jsonID (id, selectionClass) {\n  if (id in classesById) { throw new RangeError(\"Duplicate use of selection JSON ID \" + id) }\n  classesById[id] = selectionClass;\n  selectionClass.prototype.jsonID = id;\n  return selectionClass\n};\n\n// :: () → SelectionBookmark\n// Get a [bookmark](#state.SelectionBookmark) for this selection,\n// which is a value that can be mapped without having access to a\n// current document, and later resolved to a real selection for a\n// given document again. (This is used mostly by the history to\n// track and restore old selections.) The default implementation of\n// this method just converts the selection to a text selection and\n// returns the bookmark for that.\nSelection.prototype.getBookmark = function getBookmark () {\n  return TextSelection.between(this.$anchor, this.$head).getBookmark()\n};\n\nObject.defineProperties( Selection.prototype, prototypeAccessors );\n\n// :: bool\n// Controls whether, when a selection of this type is active in the\n// browser, the selected range should be visible to the user. Defaults\n// to `true`.\nSelection.prototype.visible = true;\n\n// SelectionBookmark:: interface\n// A lightweight, document-independent representation of a selection.\n// You can define a custom bookmark type for a custom selection class\n// to make the history handle it well.\n//\n//   map:: (mapping: Mapping) → SelectionBookmark\n//   Map the bookmark through a set of changes.\n//\n//   resolve:: (doc: Node) → Selection\n//   Resolve the bookmark to a real selection again. This may need to\n//   do some error checking and may fall back to a default (usually\n//   [`TextSelection.between`](#state.TextSelection^between)) if\n//   mapping made the bookmark invalid.\n\n// ::- Represents a selected range in a document.\nvar SelectionRange = function SelectionRange($from, $to) {\n  // :: ResolvedPos\n  // The lower bound of the range.\n  this.$from = $from;\n  // :: ResolvedPos\n  // The upper bound of the range.\n  this.$to = $to;\n};\n\n// ::- A text selection represents a classical editor selection, with\n// a head (the moving side) and anchor (immobile side), both of which\n// point into textblock nodes. It can be empty (a regular cursor\n// position).\nvar TextSelection = /*@__PURE__*/(function (Selection) {\n  function TextSelection($anchor, $head) {\n    if ( $head === void 0 ) $head = $anchor;\n\n    Selection.call(this, $anchor, $head);\n  }\n\n  if ( Selection ) TextSelection.__proto__ = Selection;\n  TextSelection.prototype = Object.create( Selection && Selection.prototype );\n  TextSelection.prototype.constructor = TextSelection;\n\n  var prototypeAccessors$1 = { $cursor: { configurable: true } };\n\n  // :: ?ResolvedPos\n  // Returns a resolved position if this is a cursor selection (an\n  // empty text selection), and null otherwise.\n  prototypeAccessors$1.$cursor.get = function () { return this.$anchor.pos == this.$head.pos ? this.$head : null };\n\n  TextSelection.prototype.map = function map (doc, mapping) {\n    var $head = doc.resolve(mapping.map(this.head));\n    if (!$head.parent.inlineContent) { return Selection.near($head) }\n    var $anchor = doc.resolve(mapping.map(this.anchor));\n    return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head)\n  };\n\n  TextSelection.prototype.replace = function replace (tr, content) {\n    if ( content === void 0 ) content = Slice.empty;\n\n    Selection.prototype.replace.call(this, tr, content);\n    if (content == Slice.empty) {\n      var marks = this.$from.marksAcross(this.$to);\n      if (marks) { tr.ensureMarks(marks); }\n    }\n  };\n\n  TextSelection.prototype.eq = function eq (other) {\n    return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head\n  };\n\n  TextSelection.prototype.getBookmark = function getBookmark () {\n    return new TextBookmark(this.anchor, this.head)\n  };\n\n  TextSelection.prototype.toJSON = function toJSON () {\n    return {type: \"text\", anchor: this.anchor, head: this.head}\n  };\n\n  TextSelection.fromJSON = function fromJSON (doc, json) {\n    if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n      { throw new RangeError(\"Invalid input for TextSelection.fromJSON\") }\n    return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head))\n  };\n\n  // :: (Node, number, ?number) → TextSelection\n  // Create a text selection from non-resolved positions.\n  TextSelection.create = function create (doc, anchor, head) {\n    if ( head === void 0 ) head = anchor;\n\n    var $anchor = doc.resolve(anchor);\n    return new this($anchor, head == anchor ? $anchor : doc.resolve(head))\n  };\n\n  // :: (ResolvedPos, ResolvedPos, ?number) → Selection\n  // Return a text selection that spans the given positions or, if\n  // they aren't text positions, find a text selection near them.\n  // `bias` determines whether the method searches forward (default)\n  // or backwards (negative number) first. Will fall back to calling\n  // [`Selection.near`](#state.Selection^near) when the document\n  // doesn't contain a valid text position.\n  TextSelection.between = function between ($anchor, $head, bias) {\n    var dPos = $anchor.pos - $head.pos;\n    if (!bias || dPos) { bias = dPos >= 0 ? 1 : -1; }\n    if (!$head.parent.inlineContent) {\n      var found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n      if (found) { $head = found.$head; }\n      else { return Selection.near($head, bias) }\n    }\n    if (!$anchor.parent.inlineContent) {\n      if (dPos == 0) {\n        $anchor = $head;\n      } else {\n        $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n        if (($anchor.pos < $head.pos) != (dPos < 0)) { $anchor = $head; }\n      }\n    }\n    return new TextSelection($anchor, $head)\n  };\n\n  Object.defineProperties( TextSelection.prototype, prototypeAccessors$1 );\n\n  return TextSelection;\n}(Selection));\n\nSelection.jsonID(\"text\", TextSelection);\n\nvar TextBookmark = function TextBookmark(anchor, head) {\n  this.anchor = anchor;\n  this.head = head;\n};\nTextBookmark.prototype.map = function map (mapping) {\n  return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head))\n};\nTextBookmark.prototype.resolve = function resolve (doc) {\n  return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head))\n};\n\n// ::- A node selection is a selection that points at a single node.\n// All nodes marked [selectable](#model.NodeSpec.selectable) can be\n// the target of a node selection. In such a selection, `from` and\n// `to` point directly before and after the selected node, `anchor`\n// equals `from`, and `head` equals `to`..\nvar NodeSelection = /*@__PURE__*/(function (Selection) {\n  function NodeSelection($pos) {\n    var node = $pos.nodeAfter;\n    var $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n    Selection.call(this, $pos, $end);\n    // :: Node The selected node.\n    this.node = node;\n  }\n\n  if ( Selection ) NodeSelection.__proto__ = Selection;\n  NodeSelection.prototype = Object.create( Selection && Selection.prototype );\n  NodeSelection.prototype.constructor = NodeSelection;\n\n  NodeSelection.prototype.map = function map (doc, mapping) {\n    var ref = mapping.mapResult(this.anchor);\n    var deleted = ref.deleted;\n    var pos = ref.pos;\n    var $pos = doc.resolve(pos);\n    if (deleted) { return Selection.near($pos) }\n    return new NodeSelection($pos)\n  };\n\n  NodeSelection.prototype.content = function content () {\n    return new Slice(Fragment.from(this.node), 0, 0)\n  };\n\n  NodeSelection.prototype.eq = function eq (other) {\n    return other instanceof NodeSelection && other.anchor == this.anchor\n  };\n\n  NodeSelection.prototype.toJSON = function toJSON () {\n    return {type: \"node\", anchor: this.anchor}\n  };\n\n  NodeSelection.prototype.getBookmark = function getBookmark () { return new NodeBookmark(this.anchor) };\n\n  NodeSelection.fromJSON = function fromJSON (doc, json) {\n    if (typeof json.anchor != \"number\")\n      { throw new RangeError(\"Invalid input for NodeSelection.fromJSON\") }\n    return new NodeSelection(doc.resolve(json.anchor))\n  };\n\n  // :: (Node, number) → NodeSelection\n  // Create a node selection from non-resolved positions.\n  NodeSelection.create = function create (doc, from) {\n    return new this(doc.resolve(from))\n  };\n\n  // :: (Node) → bool\n  // Determines whether the given node may be selected as a node\n  // selection.\n  NodeSelection.isSelectable = function isSelectable (node) {\n    return !node.isText && node.type.spec.selectable !== false\n  };\n\n  return NodeSelection;\n}(Selection));\n\nNodeSelection.prototype.visible = false;\n\nSelection.jsonID(\"node\", NodeSelection);\n\nvar NodeBookmark = function NodeBookmark(anchor) {\n  this.anchor = anchor;\n};\nNodeBookmark.prototype.map = function map (mapping) {\n  var ref = mapping.mapResult(this.anchor);\n    var deleted = ref.deleted;\n    var pos = ref.pos;\n  return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos)\n};\nNodeBookmark.prototype.resolve = function resolve (doc) {\n  var $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n  if (node && NodeSelection.isSelectable(node)) { return new NodeSelection($pos) }\n  return Selection.near($pos)\n};\n\n// ::- A selection type that represents selecting the whole document\n// (which can not necessarily be expressed with a text selection, when\n// there are for example leaf block nodes at the start or end of the\n// document).\nvar AllSelection = /*@__PURE__*/(function (Selection) {\n  function AllSelection(doc) {\n    Selection.call(this, doc.resolve(0), doc.resolve(doc.content.size));\n  }\n\n  if ( Selection ) AllSelection.__proto__ = Selection;\n  AllSelection.prototype = Object.create( Selection && Selection.prototype );\n  AllSelection.prototype.constructor = AllSelection;\n\n  AllSelection.prototype.replace = function replace (tr, content) {\n    if ( content === void 0 ) content = Slice.empty;\n\n    if (content == Slice.empty) {\n      tr.delete(0, tr.doc.content.size);\n      var sel = Selection.atStart(tr.doc);\n      if (!sel.eq(tr.selection)) { tr.setSelection(sel); }\n    } else {\n      Selection.prototype.replace.call(this, tr, content);\n    }\n  };\n\n  AllSelection.prototype.toJSON = function toJSON () { return {type: \"all\"} };\n\n  AllSelection.fromJSON = function fromJSON (doc) { return new AllSelection(doc) };\n\n  AllSelection.prototype.map = function map (doc) { return new AllSelection(doc) };\n\n  AllSelection.prototype.eq = function eq (other) { return other instanceof AllSelection };\n\n  AllSelection.prototype.getBookmark = function getBookmark () { return AllBookmark };\n\n  return AllSelection;\n}(Selection));\n\nSelection.jsonID(\"all\", AllSelection);\n\nvar AllBookmark = {\n  map: function map() { return this },\n  resolve: function resolve(doc) { return new AllSelection(doc) }\n};\n\n// FIXME we'll need some awareness of text direction when scanning for selections\n\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text) {\n  if (node.inlineContent) { return TextSelection.create(doc, pos) }\n  for (var i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n    var child = node.child(i);\n    if (!child.isAtom) {\n      var inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n      if (inner) { return inner }\n    } else if (!text && NodeSelection.isSelectable(child)) {\n      return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0))\n    }\n    pos += child.nodeSize * dir;\n  }\n}\n\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n  var last = tr.steps.length - 1;\n  if (last < startLen) { return }\n  var step = tr.steps[last];\n  if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) { return }\n  var map = tr.mapping.maps[last], end;\n  map.forEach(function (_from, _to, _newFrom, newTo) { if (end == null) { end = newTo; } });\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nvar UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n\n// ::- An editor state transaction, which can be applied to a state to\n// create an updated state. Use\n// [`EditorState.tr`](#state.EditorState.tr) to create an instance.\n//\n// Transactions track changes to the document (they are a subclass of\n// [`Transform`](#transform.Transform)), but also other state changes,\n// like selection updates and adjustments of the set of [stored\n// marks](#state.EditorState.storedMarks). In addition, you can store\n// metadata properties in a transaction, which are extra pieces of\n// information that client code or plugins can use to describe what a\n// transacion represents, so that they can update their [own\n// state](#state.StateField) accordingly.\n//\n// The [editor view](#view.EditorView) uses a few metadata properties:\n// it will attach a property `\"pointer\"` with the value `true` to\n// selection transactions directly caused by mouse or touch input, and\n// a `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\nvar Transaction = /*@__PURE__*/(function (Transform) {\n  function Transaction(state) {\n    Transform.call(this, state.doc);\n    // :: number\n    // The timestamp associated with this transaction, in the same\n    // format as `Date.now()`.\n    this.time = Date.now();\n    this.curSelection = state.selection;\n    // The step count for which the current selection is valid.\n    this.curSelectionFor = 0;\n    // :: ?[Mark]\n    // The stored marks set by this transaction, if any.\n    this.storedMarks = state.storedMarks;\n    // Bitfield to track which aspects of the state were updated by\n    // this transaction.\n    this.updated = 0;\n    // Object used to store metadata properties for the transaction.\n    this.meta = Object.create(null);\n  }\n\n  if ( Transform ) Transaction.__proto__ = Transform;\n  Transaction.prototype = Object.create( Transform && Transform.prototype );\n  Transaction.prototype.constructor = Transaction;\n\n  var prototypeAccessors = { selection: { configurable: true },selectionSet: { configurable: true },storedMarksSet: { configurable: true },isGeneric: { configurable: true },scrolledIntoView: { configurable: true } };\n\n  // :: Selection\n  // The transaction's current selection. This defaults to the editor\n  // selection [mapped](#state.Selection.map) through the steps in the\n  // transaction, but can be overwritten with\n  // [`setSelection`](#state.Transaction.setSelection).\n  prototypeAccessors.selection.get = function () {\n    if (this.curSelectionFor < this.steps.length) {\n      this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n      this.curSelectionFor = this.steps.length;\n    }\n    return this.curSelection\n  };\n\n  // :: (Selection) → Transaction\n  // Update the transaction's current selection. Will determine the\n  // selection that the editor gets when the transaction is applied.\n  Transaction.prototype.setSelection = function setSelection (selection) {\n    if (selection.$from.doc != this.doc)\n      { throw new RangeError(\"Selection passed to setSelection must point at the current document\") }\n    this.curSelection = selection;\n    this.curSelectionFor = this.steps.length;\n    this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n    this.storedMarks = null;\n    return this\n  };\n\n  // :: bool\n  // Whether the selection was explicitly updated by this transaction.\n  prototypeAccessors.selectionSet.get = function () {\n    return (this.updated & UPDATED_SEL) > 0\n  };\n\n  // :: (?[Mark]) → Transaction\n  // Set the current stored marks.\n  Transaction.prototype.setStoredMarks = function setStoredMarks (marks) {\n    this.storedMarks = marks;\n    this.updated |= UPDATED_MARKS;\n    return this\n  };\n\n  // :: ([Mark]) → Transaction\n  // Make sure the current stored marks or, if that is null, the marks\n  // at the selection, match the given set of marks. Does nothing if\n  // this is already the case.\n  Transaction.prototype.ensureMarks = function ensureMarks (marks) {\n    if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n      { this.setStoredMarks(marks); }\n    return this\n  };\n\n  // :: (Mark) → Transaction\n  // Add a mark to the set of stored marks.\n  Transaction.prototype.addStoredMark = function addStoredMark (mark) {\n    return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()))\n  };\n\n  // :: (union<Mark, MarkType>) → Transaction\n  // Remove a mark or mark type from the set of stored marks.\n  Transaction.prototype.removeStoredMark = function removeStoredMark (mark) {\n    return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()))\n  };\n\n  // :: bool\n  // Whether the stored marks were explicitly set for this transaction.\n  prototypeAccessors.storedMarksSet.get = function () {\n    return (this.updated & UPDATED_MARKS) > 0\n  };\n\n  Transaction.prototype.addStep = function addStep (step, doc) {\n    Transform.prototype.addStep.call(this, step, doc);\n    this.updated = this.updated & ~UPDATED_MARKS;\n    this.storedMarks = null;\n  };\n\n  // :: (number) → Transaction\n  // Update the timestamp for the transaction.\n  Transaction.prototype.setTime = function setTime (time) {\n    this.time = time;\n    return this\n  };\n\n  // :: (Slice) → Transaction\n  // Replace the current selection with the given slice.\n  Transaction.prototype.replaceSelection = function replaceSelection (slice) {\n    this.selection.replace(this, slice);\n    return this\n  };\n\n  // :: (Node, ?bool) → Transaction\n  // Replace the selection with the given node. When `inheritMarks` is\n  // true and the content is inline, it inherits the marks from the\n  // place where it is inserted.\n  Transaction.prototype.replaceSelectionWith = function replaceSelectionWith (node, inheritMarks) {\n    var selection = this.selection;\n    if (inheritMarks !== false)\n      { node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none))); }\n    selection.replaceWith(this, node);\n    return this\n  };\n\n  // :: () → Transaction\n  // Delete the selection.\n  Transaction.prototype.deleteSelection = function deleteSelection () {\n    this.selection.replace(this);\n    return this\n  };\n\n  // :: (string, from: ?number, to: ?number) → Transaction\n  // Replace the given range, or the selection if no range is given,\n  // with a text node containing the given string.\n  Transaction.prototype.insertText = function insertText (text, from, to) {\n    if ( to === void 0 ) to = from;\n\n    var schema = this.doc.type.schema;\n    if (from == null) {\n      if (!text) { return this.deleteSelection() }\n      return this.replaceSelectionWith(schema.text(text), true)\n    } else {\n      if (!text) { return this.deleteRange(from, to) }\n      var marks = this.storedMarks;\n      if (!marks) {\n        var $from = this.doc.resolve(from);\n        marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n      }\n      this.replaceRangeWith(from, to, schema.text(text, marks));\n      if (!this.selection.empty) { this.setSelection(Selection.near(this.selection.$to)); }\n      return this\n    }\n  };\n\n  // :: (union<string, Plugin, PluginKey>, any) → Transaction\n  // Store a metadata property in this transaction, keyed either by\n  // name or by plugin.\n  Transaction.prototype.setMeta = function setMeta (key, value) {\n    this.meta[typeof key == \"string\" ? key : key.key] = value;\n    return this\n  };\n\n  // :: (union<string, Plugin, PluginKey>) → any\n  // Retrieve a metadata property for a given name or plugin.\n  Transaction.prototype.getMeta = function getMeta (key) {\n    return this.meta[typeof key == \"string\" ? key : key.key]\n  };\n\n  // :: bool\n  // Returns true if this transaction doesn't contain any metadata,\n  // and can thus safely be extended.\n  prototypeAccessors.isGeneric.get = function () {\n    for (var _ in this.meta) { return false }\n    return true\n  };\n\n  // :: () → Transaction\n  // Indicate that the editor should scroll the selection into view\n  // when updated to the state produced by this transaction.\n  Transaction.prototype.scrollIntoView = function scrollIntoView () {\n    this.updated |= UPDATED_SCROLL;\n    return this\n  };\n\n  prototypeAccessors.scrolledIntoView.get = function () {\n    return (this.updated & UPDATED_SCROLL) > 0\n  };\n\n  Object.defineProperties( Transaction.prototype, prototypeAccessors );\n\n  return Transaction;\n}(Transform));\n\nfunction bind(f, self) {\n  return !self || !f ? f : f.bind(self)\n}\n\nvar FieldDesc = function FieldDesc(name, desc, self) {\n  this.name = name;\n  this.init = bind(desc.init, self);\n  this.apply = bind(desc.apply, self);\n};\n\nvar baseFields = [\n  new FieldDesc(\"doc\", {\n    init: function init(config) { return config.doc || config.schema.topNodeType.createAndFill() },\n    apply: function apply(tr) { return tr.doc }\n  }),\n\n  new FieldDesc(\"selection\", {\n    init: function init(config, instance) { return config.selection || Selection.atStart(instance.doc) },\n    apply: function apply(tr) { return tr.selection }\n  }),\n\n  new FieldDesc(\"storedMarks\", {\n    init: function init(config) { return config.storedMarks || null },\n    apply: function apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null }\n  }),\n\n  new FieldDesc(\"scrollToSelection\", {\n    init: function init() { return 0 },\n    apply: function apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev }\n  })\n];\n\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nvar Configuration = function Configuration(schema, plugins) {\n  var this$1 = this;\n\n  this.schema = schema;\n  this.fields = baseFields.concat();\n  this.plugins = [];\n  this.pluginsByKey = Object.create(null);\n  if (plugins) { plugins.forEach(function (plugin) {\n    if (this$1.pluginsByKey[plugin.key])\n      { throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\") }\n    this$1.plugins.push(plugin);\n    this$1.pluginsByKey[plugin.key] = plugin;\n    if (plugin.spec.state)\n      { this$1.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin)); }\n  }); }\n};\n\n// ::- The state of a ProseMirror editor is represented by an object\n// of this type. A state is a persistent data structure—it isn't\n// updated, but rather a new state value is computed from an old one\n// using the [`apply`](#state.EditorState.apply) method.\n//\n// A state holds a number of built-in fields, and plugins can\n// [define](#state.PluginSpec.state) additional fields.\nvar EditorState = function EditorState(config) {\n  this.config = config;\n};\n\nvar prototypeAccessors$1 = { schema: { configurable: true },plugins: { configurable: true },tr: { configurable: true } };\n\n// doc:: Node\n// The current document.\n\n// selection:: Selection\n// The selection.\n\n// storedMarks:: ?[Mark]\n// A set of marks to apply to the next input. Will be null when\n// no explicit marks have been set.\n\n// :: Schema\n// The schema of the state's document.\nprototypeAccessors$1.schema.get = function () {\n  return this.config.schema\n};\n\n// :: [Plugin]\n// The plugins that are active in this state.\nprototypeAccessors$1.plugins.get = function () {\n  return this.config.plugins\n};\n\n// :: (Transaction) → EditorState\n// Apply the given transaction to produce a new state.\nEditorState.prototype.apply = function apply (tr) {\n  return this.applyTransaction(tr).state\n};\n\n// : (Transaction) → bool\nEditorState.prototype.filterTransaction = function filterTransaction (tr, ignore) {\n    if ( ignore === void 0 ) ignore = -1;\n\n  for (var i = 0; i < this.config.plugins.length; i++) { if (i != ignore) {\n    var plugin = this.config.plugins[i];\n    if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n      { return false }\n  } }\n  return true\n};\n\n// :: (Transaction) → {state: EditorState, transactions: [Transaction]}\n// Verbose variant of [`apply`](#state.EditorState.apply) that\n// returns the precise transactions that were applied (which might\n// be influenced by the [transaction\n// hooks](#state.PluginSpec.filterTransaction) of\n// plugins) along with the new state.\nEditorState.prototype.applyTransaction = function applyTransaction (rootTr) {\n  if (!this.filterTransaction(rootTr)) { return {state: this, transactions: []} }\n\n  var trs = [rootTr], newState = this.applyInner(rootTr), seen = null;\n  // This loop repeatedly gives plugins a chance to respond to\n  // transactions as new transactions are added, making sure to only\n  // pass the transactions the plugin did not see before.\n   for (;;) {\n    var haveNew = false;\n    for (var i = 0; i < this.config.plugins.length; i++) {\n      var plugin = this.config.plugins[i];\n      if (plugin.spec.appendTransaction) {\n        var n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this;\n        var tr = n < trs.length &&\n            plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n        if (tr && newState.filterTransaction(tr, i)) {\n          tr.setMeta(\"appendedTransaction\", rootTr);\n          if (!seen) {\n            seen = [];\n            for (var j = 0; j < this.config.plugins.length; j++)\n              { seen.push(j < i ? {state: newState, n: trs.length} : {state: this, n: 0}); }\n          }\n          trs.push(tr);\n          newState = newState.applyInner(tr);\n          haveNew = true;\n        }\n        if (seen) { seen[i] = {state: newState, n: trs.length}; }\n      }\n    }\n    if (!haveNew) { return {state: newState, transactions: trs} }\n  }\n};\n\n// : (Transaction) → EditorState\nEditorState.prototype.applyInner = function applyInner (tr) {\n  if (!tr.before.eq(this.doc)) { throw new RangeError(\"Applying a mismatched transaction\") }\n  var newInstance = new EditorState(this.config), fields = this.config.fields;\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance);\n  }\n  for (var i$1 = 0; i$1 < applyListeners.length; i$1++) { applyListeners[i$1](this, tr, newInstance); }\n  return newInstance\n};\n\n// :: Transaction\n// Start a [transaction](#state.Transaction) from this state.\nprototypeAccessors$1.tr.get = function () { return new Transaction(this) };\n\n// :: (Object) → EditorState\n// Create a new state.\n//\n// config::- Configuration options. Must contain `schema` or `doc` (or both).\n//\n//    schema:: ?Schema\n//    The schema to use (only relevant if no `doc` is specified).\n//\n//    doc:: ?Node\n//    The starting document.\n//\n//    selection:: ?Selection\n//    A valid selection in the document.\n//\n//    storedMarks:: ?[Mark]\n//    The initial set of [stored marks](#state.EditorState.storedMarks).\n//\n//    plugins:: ?[Plugin]\n//    The plugins that should be active in this state.\nEditorState.create = function create (config) {\n  var $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins);\n  var instance = new EditorState($config);\n  for (var i = 0; i < $config.fields.length; i++)\n    { instance[$config.fields[i].name] = $config.fields[i].init(config, instance); }\n  return instance\n};\n\n// :: (Object) → EditorState\n// Create a new state based on this one, but with an adjusted set of\n// active plugins. State fields that exist in both sets of plugins\n// are kept unchanged. Those that no longer exist are dropped, and\n// those that are new are initialized using their\n// [`init`](#state.StateField.init) method, passing in the new\n// configuration object..\n//\n// config::- configuration options\n//\n//   plugins:: [Plugin]\n//   New set of active plugins.\nEditorState.prototype.reconfigure = function reconfigure (config) {\n  var $config = new Configuration(this.schema, config.plugins);\n  var fields = $config.fields, instance = new EditorState($config);\n  for (var i = 0; i < fields.length; i++) {\n    var name = fields[i].name;\n    instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance);\n  }\n  return instance\n};\n\n// :: (?union<Object<Plugin>, string, number>) → Object\n// Serialize this state to JSON. If you want to serialize the state\n// of plugins, pass an object mapping property names to use in the\n// resulting JSON object to plugin objects. The argument may also be\n// a string or number, in which case it is ignored, to support the\n// way `JSON.stringify` calls `toString` methods.\nEditorState.prototype.toJSON = function toJSON (pluginFields) {\n  var result = {doc: this.doc.toJSON(), selection: this.selection.toJSON()};\n  if (this.storedMarks) { result.storedMarks = this.storedMarks.map(function (m) { return m.toJSON(); }); }\n  if (pluginFields && typeof pluginFields == 'object') { for (var prop in pluginFields) {\n    if (prop == \"doc\" || prop == \"selection\")\n      { throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\") }\n    var plugin = pluginFields[prop], state = plugin.spec.state;\n    if (state && state.toJSON) { result[prop] = state.toJSON.call(plugin, this[plugin.key]); }\n  } }\n  return result\n};\n\n// :: (Object, Object, ?Object<Plugin>) → EditorState\n// Deserialize a JSON representation of a state. `config` should\n// have at least a `schema` field, and should contain array of\n// plugins to initialize the state with. `pluginFields` can be used\n// to deserialize the state of plugins, by associating plugin\n// instances with the property names they use in the JSON object.\n//\n// config::- configuration options\n//\n//   schema:: Schema\n//   The schema to use.\n//\n//   plugins:: ?[Plugin]\n//   The set of active plugins.\nEditorState.fromJSON = function fromJSON (config, json, pluginFields) {\n  if (!json) { throw new RangeError(\"Invalid input for EditorState.fromJSON\") }\n  if (!config.schema) { throw new RangeError(\"Required config field 'schema' missing\") }\n  var $config = new Configuration(config.schema, config.plugins);\n  var instance = new EditorState($config);\n  $config.fields.forEach(function (field) {\n    if (field.name == \"doc\") {\n      instance.doc = Node.fromJSON(config.schema, json.doc);\n    } else if (field.name == \"selection\") {\n      instance.selection = Selection.fromJSON(instance.doc, json.selection);\n    } else if (field.name == \"storedMarks\") {\n      if (json.storedMarks) { instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON); }\n    } else {\n      if (pluginFields) { for (var prop in pluginFields) {\n        var plugin = pluginFields[prop], state = plugin.spec.state;\n        if (plugin.key == field.name && state && state.fromJSON &&\n            Object.prototype.hasOwnProperty.call(json, prop)) {\n          // This field belongs to a plugin mapped to a JSON field, read it from there.\n          instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n          return\n        }\n      } }\n      instance[field.name] = field.init(config, instance);\n    }\n  });\n  return instance\n};\n\n// Kludge to allow the view to track mappings between different\n// instances of a state.\n//\n// FIXME this is no longer needed as of prosemirror-view 1.9.0,\n// though due to backwards-compat we should probably keep it around\n// for a while (if only as a no-op)\nEditorState.addApplyListener = function addApplyListener (f) {\n  applyListeners.push(f);\n};\nEditorState.removeApplyListener = function removeApplyListener (f) {\n  var found = applyListeners.indexOf(f);\n  if (found > -1) { applyListeners.splice(found, 1); }\n};\n\nObject.defineProperties( EditorState.prototype, prototypeAccessors$1 );\n\nvar applyListeners = [];\n\n// PluginSpec:: interface\n//\n// This is the type passed to the [`Plugin`](#state.Plugin)\n// constructor. It provides a definition for a plugin.\n//\n//   props:: ?EditorProps\n//   The [view props](#view.EditorProps) added by this plugin. Props\n//   that are functions will be bound to have the plugin instance as\n//   their `this` binding.\n//\n//   state:: ?StateField<any>\n//   Allows a plugin to define a [state field](#state.StateField), an\n//   extra slot in the state object in which it can keep its own data.\n//\n//   key:: ?PluginKey\n//   Can be used to make this a keyed plugin. You can have only one\n//   plugin with a given key in a given state, but it is possible to\n//   access the plugin's configuration and state through the key,\n//   without having access to the plugin instance object.\n//\n//   view:: ?(EditorView) → Object\n//   When the plugin needs to interact with the editor view, or\n//   set something up in the DOM, use this field. The function\n//   will be called when the plugin's state is associated with an\n//   editor view.\n//\n//     return::-\n//     Should return an object with the following optional\n//     properties:\n//\n//       update:: ?(view: EditorView, prevState: EditorState)\n//       Called whenever the view's state is updated.\n//\n//       destroy:: ?()\n//       Called when the view is destroyed or receives a state\n//       with different plugins.\n//\n//   filterTransaction:: ?(Transaction, EditorState) → bool\n//   When present, this will be called before a transaction is\n//   applied by the state, allowing the plugin to cancel it (by\n//   returning false).\n//\n//   appendTransaction:: ?(transactions: [Transaction], oldState: EditorState, newState: EditorState) → ?Transaction\n//   Allows the plugin to append another transaction to be applied\n//   after the given array of transactions. When another plugin\n//   appends a transaction after this was called, it is called again\n//   with the new state and new transactions—but only the new\n//   transactions, i.e. it won't be passed transactions that it\n//   already saw.\n\nfunction bindProps(obj, self, target) {\n  for (var prop in obj) {\n    var val = obj[prop];\n    if (val instanceof Function) { val = val.bind(self); }\n    else if (prop == \"handleDOMEvents\") { val = bindProps(val, self, {}); }\n    target[prop] = val;\n  }\n  return target\n}\n\n// ::- Plugins bundle functionality that can be added to an editor.\n// They are part of the [editor state](#state.EditorState) and\n// may influence that state and the view that contains it.\nvar Plugin = function Plugin(spec) {\n  // :: EditorProps\n  // The [props](#view.EditorProps) exported by this plugin.\n  this.props = {};\n  if (spec.props) { bindProps(spec.props, this, this.props); }\n  // :: Object\n  // The plugin's [spec object](#state.PluginSpec).\n  this.spec = spec;\n  this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n};\n\n// :: (EditorState) → any\n// Extract the plugin's state field from an editor state.\nPlugin.prototype.getState = function getState (state) { return state[this.key] };\n\n// StateField:: interface<T>\n// A plugin spec may provide a state field (under its\n// [`state`](#state.PluginSpec.state) property) of this type, which\n// describes the state it wants to keep. Functions provided here are\n// always called with the plugin instance as their `this` binding.\n//\n//   init:: (config: Object, instance: EditorState) → T\n//   Initialize the value of the field. `config` will be the object\n//   passed to [`EditorState.create`](#state.EditorState^create). Note\n//   that `instance` is a half-initialized state instance, and will\n//   not have values for plugin fields initialized after this one.\n//\n//   apply:: (tr: Transaction, value: T, oldState: EditorState, newState: EditorState) → T\n//   Apply the given transaction to this state field, producing a new\n//   field value. Note that the `newState` argument is again a partially\n//   constructed state does not yet contain the state from plugins\n//   coming after this one.\n//\n//   toJSON:: ?(value: T) → *\n//   Convert this field to JSON. Optional, can be left off to disable\n//   JSON serialization for the field.\n//\n//   fromJSON:: ?(config: Object, value: *, state: EditorState) → T\n//   Deserialize the JSON representation of this field. Note that the\n//   `state` argument is again a half-initialized state.\n\nvar keys = Object.create(null);\n\nfunction createKey(name) {\n  if (name in keys) { return name + \"$\" + ++keys[name] }\n  keys[name] = 0;\n  return name + \"$\"\n}\n\n// ::- A key is used to [tag](#state.PluginSpec.key)\n// plugins in a way that makes it possible to find them, given an\n// editor state. Assigning a key does mean only one plugin of that\n// type can be active in a state.\nvar PluginKey = function PluginKey(name) {\nif ( name === void 0 ) name = \"key\";\n this.key = createKey(name); };\n\n// :: (EditorState) → ?Plugin\n// Get the active plugin with this key, if any, from an editor\n// state.\nPluginKey.prototype.get = function get (state) { return state.config.pluginsByKey[this.key] };\n\n// :: (EditorState) → ?any\n// Get the plugin's state from an editor state.\nPluginKey.prototype.getState = function getState (state) { return state[this.key] };\n\nexport { AllSelection, EditorState, NodeSelection, Plugin, PluginKey, Selection, SelectionRange, TextSelection, Transaction };\n//# sourceMappingURL=index.es.js.map\n","import { TextSelection, NodeSelection, Selection, AllSelection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, DOMParser, Slice } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nvar result = {};\n\nif (typeof navigator != \"undefined\" && typeof document != \"undefined\") {\n  var ie_edge = /Edge\\/(\\d+)/.exec(navigator.userAgent);\n  var ie_upto10 = /MSIE \\d/.test(navigator.userAgent);\n  var ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent);\n\n  result.mac = /Mac/.test(navigator.platform);\n  var ie = result.ie = !!(ie_upto10 || ie_11up || ie_edge);\n  result.ie_version = ie_upto10 ? document.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : null;\n  result.gecko = !ie && /gecko\\/(\\d+)/i.test(navigator.userAgent);\n  result.gecko_version = result.gecko && +(/Firefox\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1];\n  var chrome = !ie && /Chrome\\/(\\d+)/.exec(navigator.userAgent);\n  result.chrome = !!chrome;\n  result.chrome_version = chrome && +chrome[1];\n  // Is true for both iOS and iPadOS for convenience\n  result.safari = !ie && /Apple Computer/.test(navigator.vendor);\n  result.ios = result.safari && (/Mobile\\/\\w+/.test(navigator.userAgent) || navigator.maxTouchPoints > 2);\n  result.android = /Android \\d/.test(navigator.userAgent);\n  result.webkit = \"webkitFontSmoothing\" in document.documentElement.style;\n  result.webkit_version = result.webkit && +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1];\n}\n\nvar domIndex = function(node) {\n  for (var index = 0;; index++) {\n    node = node.previousSibling;\n    if (!node) { return index }\n  }\n};\n\nvar parentNode = function(node) {\n  var parent = node.assignedSlot || node.parentNode;\n  return parent && parent.nodeType == 11 ? parent.host : parent\n};\n\nvar reusedRange = null;\n\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nvar textRange = function(node, from, to) {\n  var range = reusedRange || (reusedRange = document.createRange());\n  range.setEnd(node, to == null ? node.nodeValue.length : to);\n  range.setStart(node, from || 0);\n  return range\n};\n\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nvar isEquivalentPosition = function(node, off, targetNode, targetOff) {\n  return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n                        scanFor(node, off, targetNode, targetOff, 1))\n};\n\nvar atomElements = /^(img|br|input|textarea|hr)$/i;\n\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n  for (;;) {\n    if (node == targetNode && off == targetOff) { return true }\n    if (off == (dir < 0 ? 0 : nodeSize(node))) {\n      var parent = node.parentNode;\n      if (parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) || node.contentEditable == \"false\")\n        { return false }\n      off = domIndex(node) + (dir < 0 ? 0 : 1);\n      node = parent;\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n      if (node.contentEditable == \"false\") { return false }\n      off = dir < 0 ? nodeSize(node) : 0;\n    } else {\n      return false\n    }\n  }\n}\n\nfunction nodeSize(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nfunction isOnEdge(node, offset, parent) {\n  for (var atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n    if (node == parent) { return true }\n    var index = domIndex(node);\n    node = node.parentNode;\n    if (!node) { return false }\n    atStart = atStart && index == 0;\n    atEnd = atEnd && index == nodeSize(node);\n  }\n}\n\nfunction hasBlockDesc(dom) {\n  var desc;\n  for (var cur = dom; cur; cur = cur.parentNode) { if (desc = cur.pmViewDesc) { break } }\n  return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom)\n}\n\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nvar selectionCollapsed = function(domSel) {\n  var collapsed = domSel.isCollapsed;\n  if (collapsed && result.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n    { collapsed = false; }\n  return collapsed\n};\n\nfunction keyEvent(keyCode, key) {\n  var event = document.createEvent(\"Event\");\n  event.initEvent(\"keydown\", true, true);\n  event.keyCode = keyCode;\n  event.key = event.code = key;\n  return event\n}\n\nfunction windowRect(doc) {\n  return {left: 0, right: doc.documentElement.clientWidth,\n          top: 0, bottom: doc.documentElement.clientHeight}\n}\n\nfunction getSide(value, side) {\n  return typeof value == \"number\" ? value : value[side]\n}\n\nfunction clientRect(node) {\n  var rect = node.getBoundingClientRect();\n  // Adjust for elements with style \"transform: scale()\"\n  var scaleX = (rect.width / node.offsetWidth) || 1;\n  var scaleY = (rect.height / node.offsetHeight) || 1;\n  // Make sure scrollbar width isn't included in the rectangle\n  return {left: rect.left, right: rect.left + node.clientWidth * scaleX,\n          top: rect.top, bottom: rect.top + node.clientHeight * scaleY}\n}\n\nfunction scrollRectIntoView(view, rect, startDOM) {\n  var scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n  var doc = view.dom.ownerDocument;\n  for (var parent = startDOM || view.dom;; parent = parentNode(parent)) {\n    if (!parent) { break }\n    if (parent.nodeType != 1) { continue }\n    var atTop = parent == doc.body || parent.nodeType != 1;\n    var bounding = atTop ? windowRect(doc) : clientRect(parent);\n    var moveX = 0, moveY = 0;\n    if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n      { moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\")); }\n    else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n      { moveY = rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\"); }\n    if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n      { moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\")); }\n    else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n      { moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\"); }\n    if (moveX || moveY) {\n      if (atTop) {\n        doc.defaultView.scrollBy(moveX, moveY);\n      } else {\n        var startX = parent.scrollLeft, startY = parent.scrollTop;\n        if (moveY) { parent.scrollTop += moveY; }\n        if (moveX) { parent.scrollLeft += moveX; }\n        var dX = parent.scrollLeft - startX, dY = parent.scrollTop - startY;\n        rect = {left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY};\n      }\n    }\n    if (atTop) { break }\n  }\n}\n\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n  var rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n  var refDOM, refTop;\n  for (var x = (rect.left + rect.right) / 2, y = startY + 1;\n       y < Math.min(innerHeight, rect.bottom); y += 5) {\n    var dom = view.root.elementFromPoint(x, y);\n    if (dom == view.dom || !view.dom.contains(dom)) { continue }\n    var localRect = dom.getBoundingClientRect();\n    if (localRect.top >= startY - 20) {\n      refDOM = dom;\n      refTop = localRect.top;\n      break\n    }\n  }\n  return {refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom)}\n}\n\nfunction scrollStack(dom) {\n  var stack = [], doc = dom.ownerDocument;\n  for (; dom; dom = parentNode(dom)) {\n    stack.push({dom: dom, top: dom.scrollTop, left: dom.scrollLeft});\n    if (dom == doc) { break }\n  }\n  return stack\n}\n\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos(ref) {\n  var refDOM = ref.refDOM;\n  var refTop = ref.refTop;\n  var stack = ref.stack;\n\n  var newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n  restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\n\nfunction restoreScrollStack(stack, dTop) {\n  for (var i = 0; i < stack.length; i++) {\n    var ref = stack[i];\n    var dom = ref.dom;\n    var top = ref.top;\n    var left = ref.left;\n    if (dom.scrollTop != top + dTop) { dom.scrollTop = top + dTop; }\n    if (dom.scrollLeft != left) { dom.scrollLeft = left; }\n  }\n}\n\nvar preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n  if (dom.setActive) { return dom.setActive() } // in IE\n  if (preventScrollSupported) { return dom.focus(preventScrollSupported) }\n\n  var stored = scrollStack(dom);\n  dom.focus(preventScrollSupported == null ? {\n    get preventScroll() {\n      preventScrollSupported = {preventScroll: true};\n      return true\n    }\n  } : undefined);\n  if (!preventScrollSupported) {\n    preventScrollSupported = false;\n    restoreScrollStack(stored, 0);\n  }\n}\n\nfunction findOffsetInNode(node, coords) {\n  var closest, dxClosest = 2e8, coordsClosest, offset = 0;\n  var rowBot = coords.top, rowTop = coords.top;\n  for (var child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n    var rects = (void 0);\n    if (child.nodeType == 1) { rects = child.getClientRects(); }\n    else if (child.nodeType == 3) { rects = textRange(child).getClientRects(); }\n    else { continue }\n\n    for (var i = 0; i < rects.length; i++) {\n      var rect = rects[i];\n      if (rect.top <= rowBot && rect.bottom >= rowTop) {\n        rowBot = Math.max(rect.bottom, rowBot);\n        rowTop = Math.min(rect.top, rowTop);\n        var dx = rect.left > coords.left ? rect.left - coords.left\n            : rect.right < coords.left ? coords.left - rect.right : 0;\n        if (dx < dxClosest) {\n          closest = child;\n          dxClosest = dx;\n          coordsClosest = dx && closest.nodeType == 3 ? {left: rect.right < coords.left ? rect.right : rect.left, top: coords.top} : coords;\n          if (child.nodeType == 1 && dx)\n            { offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0); }\n          continue\n        }\n      }\n      if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                       coords.left >= rect.left && coords.top >= rect.bottom))\n        { offset = childIndex + 1; }\n    }\n  }\n  if (closest && closest.nodeType == 3) { return findOffsetInText(closest, coordsClosest) }\n  if (!closest || (dxClosest && closest.nodeType == 1)) { return {node: node, offset: offset} }\n  return findOffsetInNode(closest, coordsClosest)\n}\n\nfunction findOffsetInText(node, coords) {\n  var len = node.nodeValue.length;\n  var range = document.createRange();\n  for (var i = 0; i < len; i++) {\n    range.setEnd(node, i + 1);\n    range.setStart(node, i);\n    var rect = singleRect(range, 1);\n    if (rect.top == rect.bottom) { continue }\n    if (inRect(coords, rect))\n      { return {node: node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)} }\n  }\n  return {node: node, offset: 0}\n}\n\nfunction inRect(coords, rect) {\n  return coords.left >= rect.left - 1 && coords.left <= rect.right + 1&&\n    coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1\n}\n\nfunction targetKludge(dom, coords) {\n  var parent = dom.parentNode;\n  if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n    { return parent }\n  return dom\n}\n\nfunction posFromElement(view, elt, coords) {\n  var ref = findOffsetInNode(elt, coords);\n  var node = ref.node;\n  var offset = ref.offset;\n  var bias = -1;\n  if (node.nodeType == 1 && !node.firstChild) {\n    var rect = node.getBoundingClientRect();\n    bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n  }\n  return view.docView.posFromDOM(node, offset, bias)\n}\n\nfunction posFromCaret(view, node, offset, coords) {\n  // Browser (in caretPosition/RangeFromPoint) will agressively\n  // normalize towards nearby inline nodes. Since we are interested in\n  // positions between block nodes too, we first walk up the hierarchy\n  // of nodes to see if there are block nodes that the coordinates\n  // fall outside of. If so, we take the position before/after that\n  // block. If not, we call `posFromDOM` on the raw node/offset.\n  var outside = -1;\n  for (var cur = node;;) {\n    if (cur == view.dom) { break }\n    var desc = view.docView.nearestDesc(cur, true);\n    if (!desc) { return null }\n    if (desc.node.isBlock && desc.parent) {\n      var rect = desc.dom.getBoundingClientRect();\n      if (rect.left > coords.left || rect.top > coords.top) { outside = desc.posBefore; }\n      else if (rect.right < coords.left || rect.bottom < coords.top) { outside = desc.posAfter; }\n      else { break }\n    }\n    cur = desc.dom.parentNode;\n  }\n  return outside > -1 ? outside : view.docView.posFromDOM(node, offset)\n}\n\nfunction elementFromPoint(element, coords, box) {\n  var len = element.childNodes.length;\n  if (len && box.top < box.bottom) {\n    for (var startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n      var child = element.childNodes[i];\n      if (child.nodeType == 1) {\n        var rects = child.getClientRects();\n        for (var j = 0; j < rects.length; j++) {\n          var rect = rects[j];\n          if (inRect(coords, rect)) { return elementFromPoint(child, coords, rect) }\n        }\n      }\n      if ((i = (i + 1) % len) == startI) { break }\n    }\n  }\n  return element\n}\n\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n  var assign, assign$1;\n\n  var doc = view.dom.ownerDocument, node, offset;\n  if (doc.caretPositionFromPoint) {\n    try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n      var pos$1 = doc.caretPositionFromPoint(coords.left, coords.top);\n      if (pos$1) { ((assign = pos$1, node = assign.offsetNode, offset = assign.offset)); }\n    } catch (_) {}\n  }\n  if (!node && doc.caretRangeFromPoint) {\n    var range = doc.caretRangeFromPoint(coords.left, coords.top);\n    if (range) { ((assign$1 = range, node = assign$1.startContainer, offset = assign$1.startOffset)); }\n  }\n\n  var elt = (view.root.elementFromPoint ? view.root : doc).elementFromPoint(coords.left, coords.top + 1), pos;\n  if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n    var box = view.dom.getBoundingClientRect();\n    if (!inRect(coords, box)) { return null }\n    elt = elementFromPoint(view.dom, coords, box);\n    if (!elt) { return null }\n  }\n  // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n  if (result.safari) {\n    for (var p = elt; node && p; p = parentNode(p))\n      { if (p.draggable) { node = offset = null; } }\n  }\n  elt = targetKludge(elt, coords);\n  if (node) {\n    if (result.gecko && node.nodeType == 1) {\n      // Firefox will sometimes return offsets into <input> nodes, which\n      // have no actual children, from caretPositionFromPoint (#953)\n      offset = Math.min(offset, node.childNodes.length);\n      // It'll also move the returned position before image nodes,\n      // even if those are behind it.\n      if (offset < node.childNodes.length) {\n        var next = node.childNodes[offset], box$1;\n        if (next.nodeName == \"IMG\" && (box$1 = next.getBoundingClientRect()).right <= coords.left &&\n            box$1.bottom > coords.top)\n          { offset++; }\n      }\n    }\n    // Suspiciously specific kludge to work around caret*FromPoint\n    // never returning a position at the end of the document\n    if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n        coords.top > node.lastChild.getBoundingClientRect().bottom)\n      { pos = view.state.doc.content.size; }\n    // Ignore positions directly after a BR, since caret*FromPoint\n    // 'round up' positions that would be more accurately placed\n    // before the BR node.\n    else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n      { pos = posFromCaret(view, node, offset, coords); }\n  }\n  if (pos == null) { pos = posFromElement(view, elt, coords); }\n\n  var desc = view.docView.nearestDesc(elt, true);\n  return {pos: pos, inside: desc ? desc.posAtStart - desc.border : -1}\n}\n\nfunction singleRect(object, bias) {\n  var rects = object.getClientRects();\n  return !rects.length ? object.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1]\n}\n\nvar BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n\n// : (EditorView, number, number) → {left: number, top: number, right: number, bottom: number}\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n  var ref = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n  var node = ref.node;\n  var offset = ref.offset;\n\n  var supportEmptyRange = result.webkit || result.gecko;\n  if (node.nodeType == 3) {\n    // These browsers support querying empty text ranges. Prefer that in\n    // bidi context or when at the end of a node.\n    if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n      var rect = singleRect(textRange(node, offset, offset), side);\n      // Firefox returns bad results (the position before the space)\n      // when querying a position directly after line-broken\n      // whitespace. Detect this situation and and kludge around it\n      if (result.gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n        var rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n        if (rectBefore.top == rect.top) {\n          var rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n          if (rectAfter.top != rect.top)\n            { return flattenV(rectAfter, rectAfter.left < rectBefore.left) }\n        }\n      }\n      return rect\n    } else {\n      var from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n      if (side < 0 && !offset) { to++; takeSide = -1; }\n      else if (side >= 0 && offset == node.nodeValue.length) { from--; takeSide = 1; }\n      else if (side < 0) { from--; }\n      else { to ++; }\n      return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0)\n    }\n  }\n\n  // Return a horizontal line in block context\n  if (!view.state.doc.resolve(pos).parent.inlineContent) {\n    if (offset && (side < 0 || offset == nodeSize(node))) {\n      var before = node.childNodes[offset - 1];\n      if (before.nodeType == 1) { return flattenH(before.getBoundingClientRect(), false) }\n    }\n    if (offset < nodeSize(node)) {\n      var after = node.childNodes[offset];\n      if (after.nodeType == 1) { return flattenH(after.getBoundingClientRect(), true) }\n    }\n    return flattenH(node.getBoundingClientRect(), side >= 0)\n  }\n\n  // Inline, not in text node (this is not Bidi-safe)\n  if (offset && (side < 0 || offset == nodeSize(node))) {\n    var before$1 = node.childNodes[offset - 1];\n    var target = before$1.nodeType == 3 ? textRange(before$1, nodeSize(before$1) - (supportEmptyRange ? 0 : 1))\n        // BR nodes tend to only return the rectangle before them.\n        // Only use them if they are the last element in their parent\n        : before$1.nodeType == 1 && (before$1.nodeName != \"BR\" || !before$1.nextSibling) ? before$1 : null;\n    if (target) { return flattenV(singleRect(target, 1), false) }\n  }\n  if (offset < nodeSize(node)) {\n    var after$1 = node.childNodes[offset];\n    while (after$1.pmViewDesc && after$1.pmViewDesc.ignoreForCoords) { after$1 = after$1.nextSibling; }\n    var target$1 = !after$1 ? null : after$1.nodeType == 3 ? textRange(after$1, 0, (supportEmptyRange ? 0 : 1))\n        : after$1.nodeType == 1 ? after$1 : null;\n    if (target$1) { return flattenV(singleRect(target$1, -1), true) }\n  }\n  // All else failed, just try to get a rectangle for the target node\n  return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0)\n}\n\nfunction flattenV(rect, left) {\n  if (rect.width == 0) { return rect }\n  var x = left ? rect.left : rect.right;\n  return {top: rect.top, bottom: rect.bottom, left: x, right: x}\n}\n\nfunction flattenH(rect, top) {\n  if (rect.height == 0) { return rect }\n  var y = top ? rect.top : rect.bottom;\n  return {top: y, bottom: y, left: rect.left, right: rect.right}\n}\n\nfunction withFlushedState(view, state, f) {\n  var viewState = view.state, active = view.root.activeElement;\n  if (viewState != state) { view.updateState(state); }\n  if (active != view.dom) { view.focus(); }\n  try {\n    return f()\n  } finally {\n    if (viewState != state) { view.updateState(viewState); }\n    if (active != view.dom && active) { active.focus(); }\n  }\n}\n\n// : (EditorView, number, number)\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n  var sel = state.selection;\n  var $pos = dir == \"up\" ? sel.$from : sel.$to;\n  return withFlushedState(view, state, function () {\n    var ref = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n    var dom = ref.node;\n    for (;;) {\n      var nearest = view.docView.nearestDesc(dom, true);\n      if (!nearest) { break }\n      if (nearest.node.isBlock) { dom = nearest.dom; break }\n      dom = nearest.dom.parentNode;\n    }\n    var coords = coordsAtPos(view, $pos.pos, 1);\n    for (var child = dom.firstChild; child; child = child.nextSibling) {\n      var boxes = (void 0);\n      if (child.nodeType == 1) { boxes = child.getClientRects(); }\n      else if (child.nodeType == 3) { boxes = textRange(child, 0, child.nodeValue.length).getClientRects(); }\n      else { continue }\n      for (var i = 0; i < boxes.length; i++) {\n        var box = boxes[i];\n        if (box.bottom > box.top + 1 &&\n            (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n             : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n          { return false }\n      }\n    }\n    return true\n  })\n}\n\nvar maybeRTL = /[\\u0590-\\u08ac]/;\n\nfunction endOfTextblockHorizontal(view, state, dir) {\n  var ref = state.selection;\n  var $head = ref.$head;\n  if (!$head.parent.isTextblock) { return false }\n  var offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n  var sel = view.root.getSelection();\n  // If the textblock is all LTR, or the browser doesn't support\n  // Selection.modify (Edge), fall back to a primitive approach\n  if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n    { return dir == \"left\" || dir == \"backward\" ? atStart : atEnd }\n\n  return withFlushedState(view, state, function () {\n    // This is a huge hack, but appears to be the best we can\n    // currently do: use `Selection.modify` to move the selection by\n    // one character, and see if that moves the cursor out of the\n    // textblock (or doesn't move it at all, when at the start/end of\n    // the document).\n    var oldRange = sel.getRangeAt(0), oldNode = sel.focusNode, oldOff = sel.focusOffset;\n    var oldBidiLevel = sel.caretBidiLevel; // Only for Firefox\n    sel.modify(\"move\", dir, \"character\");\n    var parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n    var result = !parentDOM.contains(sel.focusNode.nodeType == 1 ? sel.focusNode : sel.focusNode.parentNode) ||\n        (oldNode == sel.focusNode && oldOff == sel.focusOffset);\n    // Restore the previous selection\n    sel.removeAllRanges();\n    sel.addRange(oldRange);\n    if (oldBidiLevel != null) { sel.caretBidiLevel = oldBidiLevel; }\n    return result\n  })\n}\n\nvar cachedState = null, cachedDir = null, cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n  if (cachedState == state && cachedDir == dir) { return cachedResult }\n  cachedState = state; cachedDir = dir;\n  return cachedResult = dir == \"up\" || dir == \"down\"\n    ? endOfTextblockVertical(view, state, dir)\n    : endOfTextblockHorizontal(view, state, dir)\n}\n\n// NodeView:: interface\n//\n// By default, document nodes are rendered using the result of the\n// [`toDOM`](#model.NodeSpec.toDOM) method of their spec, and managed\n// entirely by the editor. For some use cases, such as embedded\n// node-specific editing interfaces, you want more control over\n// the behavior of a node's in-editor representation, and need to\n// [define](#view.EditorProps.nodeViews) a custom node view.\n//\n// Mark views only support `dom` and `contentDOM`, and don't support\n// any of the node view methods.\n//\n// Objects returned as node views must conform to this interface.\n//\n//   dom:: ?dom.Node\n//   The outer DOM node that represents the document node. When not\n//   given, the default strategy is used to create a DOM node.\n//\n//   contentDOM:: ?dom.Node\n//   The DOM node that should hold the node's content. Only meaningful\n//   if the node view also defines a `dom` property and if its node\n//   type is not a leaf node type. When this is present, ProseMirror\n//   will take care of rendering the node's children into it. When it\n//   is not present, the node view itself is responsible for rendering\n//   (or deciding not to render) its child nodes.\n//\n//   update:: ?(node: Node, decorations: [Decoration], innerDecorations: DecorationSource) → bool\n//   When given, this will be called when the view is updating itself.\n//   It will be given a node (possibly of a different type), an array\n//   of active decorations around the node (which are automatically\n//   drawn, and the node view may ignore if it isn't interested in\n//   them), and a [decoration source](#view.DecorationSource) that\n//   represents any decorations that apply to the content of the node\n//   (which again may be ignored). It should return true if it was\n//   able to update to that node, and false otherwise. If the node\n//   view has a `contentDOM` property (or no `dom` property), updating\n//   its child nodes will be handled by ProseMirror.\n//\n//   selectNode:: ?()\n//   Can be used to override the way the node's selected status (as a\n//   node selection) is displayed.\n//\n//   deselectNode:: ?()\n//   When defining a `selectNode` method, you should also provide a\n//   `deselectNode` method to remove the effect again.\n//\n//   setSelection:: ?(anchor: number, head: number, root: dom.Document)\n//   This will be called to handle setting the selection inside the\n//   node. The `anchor` and `head` positions are relative to the start\n//   of the node. By default, a DOM selection will be created between\n//   the DOM positions corresponding to those positions, but if you\n//   override it you can do something else.\n//\n//   stopEvent:: ?(event: dom.Event) → bool\n//   Can be used to prevent the editor view from trying to handle some\n//   or all DOM events that bubble up from the node view. Events for\n//   which this returns true are not handled by the editor.\n//\n//   ignoreMutation:: ?(dom.MutationRecord) → bool\n//   Called when a DOM\n//   [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver)\n//   or a selection change happens within the view. When the change is\n//   a selection change, the record will have a `type` property of\n//   `\"selection\"` (which doesn't occur for native mutation records).\n//   Return false if the editor should re-read the selection or\n//   re-parse the range around the mutation, true if it can safely be\n//   ignored.\n//\n//   destroy:: ?()\n//   Called when the node view is removed from the editor or the whole\n//   editor is destroyed. (Not available for marks.)\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\n\nvar NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nvar ViewDesc = function ViewDesc(parent, children, dom, contentDOM) {\n  this.parent = parent;\n  this.children = children;\n  this.dom = dom;\n  // An expando property on the DOM node provides a link back to its\n  // description.\n  dom.pmViewDesc = this;\n  // This is the node that holds the child views. It may be null for\n  // descs that don't have children.\n  this.contentDOM = contentDOM;\n  this.dirty = NOT_DIRTY;\n};\n\nvar prototypeAccessors = { size: { configurable: true },border: { configurable: true },posBefore: { configurable: true },posAtStart: { configurable: true },posAfter: { configurable: true },posAtEnd: { configurable: true },contentLost: { configurable: true },domAtom: { configurable: true },ignoreForCoords: { configurable: true } };\n\n// Used to check whether a given description corresponds to a\n// widget/mark/node.\nViewDesc.prototype.matchesWidget = function matchesWidget () { return false };\nViewDesc.prototype.matchesMark = function matchesMark () { return false };\nViewDesc.prototype.matchesNode = function matchesNode () { return false };\nViewDesc.prototype.matchesHack = function matchesHack (_nodeName) { return false };\n\n// : () → ?ParseRule\n// When parsing in-editor content (in domchange.js), we allow\n// descriptions to determine the parse rules that should be used to\n// parse them.\nViewDesc.prototype.parseRule = function parseRule () { return null };\n\n// : (dom.Event) → bool\n// Used by the editor's event handler to ignore events that come\n// from certain descs.\nViewDesc.prototype.stopEvent = function stopEvent () { return false };\n\n// The size of the content represented by this desc.\nprototypeAccessors.size.get = function () {\n  var size = 0;\n  for (var i = 0; i < this.children.length; i++) { size += this.children[i].size; }\n  return size\n};\n\n// For block nodes, this represents the space taken up by their\n// start/end tokens.\nprototypeAccessors.border.get = function () { return 0 };\n\nViewDesc.prototype.destroy = function destroy () {\n  this.parent = null;\n  if (this.dom.pmViewDesc == this) { this.dom.pmViewDesc = null; }\n  for (var i = 0; i < this.children.length; i++)\n    { this.children[i].destroy(); }\n};\n\nViewDesc.prototype.posBeforeChild = function posBeforeChild (child) {\n  for (var i = 0, pos = this.posAtStart; i < this.children.length; i++) {\n    var cur = this.children[i];\n    if (cur == child) { return pos }\n    pos += cur.size;\n  }\n};\n\nprototypeAccessors.posBefore.get = function () {\n  return this.parent.posBeforeChild(this)\n};\n\nprototypeAccessors.posAtStart.get = function () {\n  return this.parent ? this.parent.posBeforeChild(this) + this.border : 0\n};\n\nprototypeAccessors.posAfter.get = function () {\n  return this.posBefore + this.size\n};\n\nprototypeAccessors.posAtEnd.get = function () {\n  return this.posAtStart + this.size - 2 * this.border\n};\n\n// : (dom.Node, number, ?number) → number\nViewDesc.prototype.localPosFromDOM = function localPosFromDOM (dom, offset, bias) {\n  // If the DOM position is in the content, use the child desc after\n  // it to figure out a position.\n  if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n    if (bias < 0) {\n      var domBefore, desc;\n      if (dom == this.contentDOM) {\n        domBefore = dom.childNodes[offset - 1];\n      } else {\n        while (dom.parentNode != this.contentDOM) { dom = dom.parentNode; }\n        domBefore = dom.previousSibling;\n      }\n      while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this)) { domBefore = domBefore.previousSibling; }\n      return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart\n    } else {\n      var domAfter, desc$1;\n      if (dom == this.contentDOM) {\n        domAfter = dom.childNodes[offset];\n      } else {\n        while (dom.parentNode != this.contentDOM) { dom = dom.parentNode; }\n        domAfter = dom.nextSibling;\n      }\n      while (domAfter && !((desc$1 = domAfter.pmViewDesc) && desc$1.parent == this)) { domAfter = domAfter.nextSibling; }\n      return domAfter ? this.posBeforeChild(desc$1) : this.posAtEnd\n    }\n  }\n  // Otherwise, use various heuristics, falling back on the bias\n  // parameter, to determine whether to return the position at the\n  // start or at the end of this view desc.\n  var atEnd;\n  if (dom == this.dom && this.contentDOM) {\n    atEnd = offset > domIndex(this.contentDOM);\n  } else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n    atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n  } else if (this.dom.firstChild) {\n    if (offset == 0) { for (var search = dom;; search = search.parentNode) {\n      if (search == this.dom) { atEnd = false; break }\n      if (search.parentNode.firstChild != search) { break }\n    } }\n    if (atEnd == null && offset == dom.childNodes.length) { for (var search$1 = dom;; search$1 = search$1.parentNode) {\n      if (search$1 == this.dom) { atEnd = true; break }\n      if (search$1.parentNode.lastChild != search$1) { break }\n    } }\n  }\n  return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart\n};\n\n// Scan up the dom finding the first desc that is a descendant of\n// this one.\nViewDesc.prototype.nearestDesc = function nearestDesc (dom, onlyNodes) {\n  for (var first = true, cur = dom; cur; cur = cur.parentNode) {\n    var desc = this.getDesc(cur);\n    if (desc && (!onlyNodes || desc.node)) {\n      // If dom is outside of this desc's nodeDOM, don't count it.\n      if (first && desc.nodeDOM &&\n          !(desc.nodeDOM.nodeType == 1 ? desc.nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : desc.nodeDOM == dom))\n        { first = false; }\n      else\n        { return desc }\n    }\n  }\n};\n\nViewDesc.prototype.getDesc = function getDesc (dom) {\n  var desc = dom.pmViewDesc;\n  for (var cur = desc; cur; cur = cur.parent) { if (cur == this) { return desc } }\n};\n\nViewDesc.prototype.posFromDOM = function posFromDOM (dom, offset, bias) {\n  for (var scan = dom; scan; scan = scan.parentNode) {\n    var desc = this.getDesc(scan);\n    if (desc) { return desc.localPosFromDOM(dom, offset, bias) }\n  }\n  return -1\n};\n\n// : (number) → ?NodeViewDesc\n// Find the desc for the node after the given pos, if any. (When a\n// parent node overrode rendering, there might not be one.)\nViewDesc.prototype.descAt = function descAt (pos) {\n  for (var i = 0, offset = 0; i < this.children.length; i++) {\n    var child = this.children[i], end = offset + child.size;\n    if (offset == pos && end != offset) {\n      while (!child.border && child.children.length) { child = child.children[0]; }\n      return child\n    }\n    if (pos < end) { return child.descAt(pos - offset - child.border) }\n    offset = end;\n  }\n};\n\n// : (number, number) → {node: dom.Node, offset: number}\nViewDesc.prototype.domFromPos = function domFromPos (pos, side) {\n  if (!this.contentDOM) { return {node: this.dom, offset: 0} }\n  // First find the position in the child array\n  var i = 0, offset = 0;\n  for (var curPos = 0; i < this.children.length; i++) {\n    var child = this.children[i], end = curPos + child.size;\n    if (end > pos || child instanceof TrailingHackViewDesc) { offset = pos - curPos; break }\n    curPos = end;\n  }\n  // If this points into the middle of a child, call through\n  if (offset) { return this.children[i].domFromPos(offset - this.children[i].border, side) }\n  // Go back if there were any zero-length widgets with side >= 0 before this point\n  for (var prev = (void 0); i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.widget.type.side >= 0; i--) {}\n  // Scan towards the first useable node\n  if (side <= 0) {\n    var prev$1, enter = true;\n    for (;; i--, enter = false) {\n      prev$1 = i ? this.children[i - 1] : null;\n      if (!prev$1 || prev$1.dom.parentNode == this.contentDOM) { break }\n    }\n    if (prev$1 && side && enter && !prev$1.border && !prev$1.domAtom) { return prev$1.domFromPos(prev$1.size, side) }\n    return {node: this.contentDOM, offset: prev$1 ? domIndex(prev$1.dom) + 1 : 0}\n  } else {\n    var next, enter$1 = true;\n    for (;; i++, enter$1 = false) {\n      next = i < this.children.length ? this.children[i] : null;\n      if (!next || next.dom.parentNode == this.contentDOM) { break }\n    }\n    if (next && enter$1 && !next.border && !next.domAtom) { return next.domFromPos(0, side) }\n    return {node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length}\n  }\n};\n\n// Used to find a DOM range in a single parent for a given changed\n// range.\nViewDesc.prototype.parseRange = function parseRange (from, to, base) {\n    if ( base === void 0 ) base = 0;\n\n  if (this.children.length == 0)\n    { return {node: this.contentDOM, from: from, to: to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length} }\n\n  var fromOffset = -1, toOffset = -1;\n  for (var offset = base, i = 0;; i++) {\n    var child = this.children[i], end = offset + child.size;\n    if (fromOffset == -1 && from <= end) {\n      var childBase = offset + child.border;\n      // FIXME maybe descend mark views to parse a narrower range?\n      if (from >= childBase && to <= end - child.border && child.node &&\n          child.contentDOM && this.contentDOM.contains(child.contentDOM))\n        { return child.parseRange(from, to, childBase) }\n\n      from = offset;\n      for (var j = i; j > 0; j--) {\n        var prev = this.children[j - 1];\n        if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n          fromOffset = domIndex(prev.dom) + 1;\n          break\n        }\n        from -= prev.size;\n      }\n      if (fromOffset == -1) { fromOffset = 0; }\n    }\n    if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n      to = end;\n      for (var j$1 = i + 1; j$1 < this.children.length; j$1++) {\n        var next = this.children[j$1];\n        if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n          toOffset = domIndex(next.dom);\n          break\n        }\n        to += next.size;\n      }\n      if (toOffset == -1) { toOffset = this.contentDOM.childNodes.length; }\n      break\n    }\n    offset = end;\n  }\n  return {node: this.contentDOM, from: from, to: to, fromOffset: fromOffset, toOffset: toOffset}\n};\n\nViewDesc.prototype.emptyChildAt = function emptyChildAt (side) {\n  if (this.border || !this.contentDOM || !this.children.length) { return false }\n  var child = this.children[side < 0 ? 0 : this.children.length - 1];\n  return child.size == 0 || child.emptyChildAt(side)\n};\n\n// : (number) → dom.Node\nViewDesc.prototype.domAfterPos = function domAfterPos (pos) {\n  var ref = this.domFromPos(pos, 0);\n    var node = ref.node;\n    var offset = ref.offset;\n  if (node.nodeType != 1 || offset == node.childNodes.length)\n    { throw new RangeError(\"No node after pos \" + pos) }\n  return node.childNodes[offset]\n};\n\n// : (number, number, dom.Document)\n// View descs are responsible for setting any selection that falls\n// entirely inside of them, so that custom implementations can do\n// custom things with the selection. Note that this falls apart when\n// a selection starts in such a node and ends in another, in which\n// case we just use whatever domFromPos produces as a best effort.\nViewDesc.prototype.setSelection = function setSelection (anchor, head, root, force) {\n  // If the selection falls entirely in a child, give it to that child\n  var from = Math.min(anchor, head), to = Math.max(anchor, head);\n  for (var i = 0, offset = 0; i < this.children.length; i++) {\n    var child = this.children[i], end = offset + child.size;\n    if (from > offset && to < end)\n      { return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force) }\n    offset = end;\n  }\n\n  var anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n  var headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n  var domSel = root.getSelection();\n\n  var brKludge = false;\n  // On Firefox, using Selection.collapse to put the cursor after a\n  // BR node for some reason doesn't always work (#1073). On Safari,\n  // the cursor sometimes inexplicable visually lags behind its\n  // reported position in such situations (#1092).\n  if ((result.gecko || result.safari) && anchor == head) {\n    var node = anchorDOM.node;\n      var offset$1 = anchorDOM.offset;\n    if (node.nodeType == 3) {\n      brKludge = offset$1 && node.nodeValue[offset$1 - 1] == \"\\n\";\n      // Issue #1128\n      if (brKludge && offset$1 == node.nodeValue.length) {\n        for (var scan = node, after = (void 0); scan; scan = scan.parentNode) {\n          if (after = scan.nextSibling) {\n            if (after.nodeName == \"BR\")\n              { anchorDOM = headDOM = {node: after.parentNode, offset: domIndex(after) + 1}; }\n            break\n          }\n          var desc = scan.pmViewDesc;\n          if (desc && desc.node && desc.node.isBlock) { break }\n        }\n      }\n    } else {\n      var prev = node.childNodes[offset$1 - 1];\n      brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n    }\n  }\n  // Firefox can act strangely when the selection is in front of an\n  // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n  if (result.gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n    var after$1 = domSel.focusNode.childNodes[domSel.focusOffset];\n    if (after$1 && after$1.contentEditable == \"false\") { force = true; }\n  }\n\n  if (!(force || brKludge && result.safari) &&\n      isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n      isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n    { return }\n\n  // Selection.extend can be used to create an 'inverted' selection\n  // (one where the focus is before the anchor), but not all\n  // browsers support it yet.\n  var domSelExtended = false;\n  if ((domSel.extend || anchor == head) && !brKludge) {\n    domSel.collapse(anchorDOM.node, anchorDOM.offset);\n    try {\n      if (anchor != head) { domSel.extend(headDOM.node, headDOM.offset); }\n      domSelExtended = true;\n    } catch (err) {\n      // In some cases with Chrome the selection is empty after calling\n      // collapse, even when it should be valid. This appears to be a bug, but\n      // it is difficult to isolate. If this happens fallback to the old path\n      // without using extend.\n      if (!(err instanceof DOMException)) { throw err }\n      // declare global: DOMException\n    }\n  }\n  if (!domSelExtended) {\n    if (anchor > head) { var tmp = anchorDOM; anchorDOM = headDOM; headDOM = tmp; }\n    var range = document.createRange();\n    range.setEnd(headDOM.node, headDOM.offset);\n    range.setStart(anchorDOM.node, anchorDOM.offset);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n  }\n};\n\n// : (dom.MutationRecord) → bool\nViewDesc.prototype.ignoreMutation = function ignoreMutation (mutation) {\n  return !this.contentDOM && mutation.type != \"selection\"\n};\n\nprototypeAccessors.contentLost.get = function () {\n  return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM)\n};\n\n// Remove a subtree of the element tree that has been touched\n// by a DOM change, so that the next update will redraw it.\nViewDesc.prototype.markDirty = function markDirty (from, to) {\n  for (var offset = 0, i = 0; i < this.children.length; i++) {\n    var child = this.children[i], end = offset + child.size;\n    if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n      var startInside = offset + child.border, endInside = end - child.border;\n      if (from >= startInside && to <= endInside) {\n        this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n        if (from == startInside && to == endInside &&\n            (child.contentLost || child.dom.parentNode != this.contentDOM)) { child.dirty = NODE_DIRTY; }\n        else { child.markDirty(from - startInside, to - startInside); }\n        return\n      } else {\n        child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM ? CONTENT_DIRTY : NODE_DIRTY;\n      }\n    }\n    offset = end;\n  }\n  this.dirty = CONTENT_DIRTY;\n};\n\nViewDesc.prototype.markParentsDirty = function markParentsDirty () {\n  var level = 1;\n  for (var node = this.parent; node; node = node.parent, level++) {\n    var dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n    if (node.dirty < dirty) { node.dirty = dirty; }\n  }\n};\n\nprototypeAccessors.domAtom.get = function () { return false };\n\nprototypeAccessors.ignoreForCoords.get = function () { return false };\n\nObject.defineProperties( ViewDesc.prototype, prototypeAccessors );\n\n// Reused array to avoid allocating fresh arrays for things that will\n// stay empty anyway.\nvar nothing = [];\n\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nvar WidgetViewDesc = /*@__PURE__*/(function (ViewDesc) {\n  function WidgetViewDesc(parent, widget, view, pos) {\n    var self, dom = widget.type.toDOM;\n    if (typeof dom == \"function\") { dom = dom(view, function () {\n      if (!self) { return pos }\n      if (self.parent) { return self.parent.posBeforeChild(self) }\n    }); }\n    if (!widget.type.spec.raw) {\n      if (dom.nodeType != 1) {\n        var wrap = document.createElement(\"span\");\n        wrap.appendChild(dom);\n        dom = wrap;\n      }\n      dom.contentEditable = false;\n      dom.classList.add(\"ProseMirror-widget\");\n    }\n    ViewDesc.call(this, parent, nothing, dom, null);\n    this.widget = widget;\n    self = this;\n  }\n\n  if ( ViewDesc ) WidgetViewDesc.__proto__ = ViewDesc;\n  WidgetViewDesc.prototype = Object.create( ViewDesc && ViewDesc.prototype );\n  WidgetViewDesc.prototype.constructor = WidgetViewDesc;\n\n  var prototypeAccessors$1 = { domAtom: { configurable: true } };\n\n  WidgetViewDesc.prototype.matchesWidget = function matchesWidget (widget) {\n    return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type)\n  };\n\n  WidgetViewDesc.prototype.parseRule = function parseRule () { return {ignore: true} };\n\n  WidgetViewDesc.prototype.stopEvent = function stopEvent (event) {\n    var stop = this.widget.spec.stopEvent;\n    return stop ? stop(event) : false\n  };\n\n  WidgetViewDesc.prototype.ignoreMutation = function ignoreMutation (mutation) {\n    return mutation.type != \"selection\" || this.widget.spec.ignoreSelection\n  };\n\n  prototypeAccessors$1.domAtom.get = function () { return true };\n\n  Object.defineProperties( WidgetViewDesc.prototype, prototypeAccessors$1 );\n\n  return WidgetViewDesc;\n}(ViewDesc));\n\nvar CompositionViewDesc = /*@__PURE__*/(function (ViewDesc) {\n  function CompositionViewDesc(parent, dom, textDOM, text) {\n    ViewDesc.call(this, parent, nothing, dom, null);\n    this.textDOM = textDOM;\n    this.text = text;\n  }\n\n  if ( ViewDesc ) CompositionViewDesc.__proto__ = ViewDesc;\n  CompositionViewDesc.prototype = Object.create( ViewDesc && ViewDesc.prototype );\n  CompositionViewDesc.prototype.constructor = CompositionViewDesc;\n\n  var prototypeAccessors$2 = { size: { configurable: true } };\n\n  prototypeAccessors$2.size.get = function () { return this.text.length };\n\n  CompositionViewDesc.prototype.localPosFromDOM = function localPosFromDOM (dom, offset) {\n    if (dom != this.textDOM) { return this.posAtStart + (offset ? this.size : 0) }\n    return this.posAtStart + offset\n  };\n\n  CompositionViewDesc.prototype.domFromPos = function domFromPos (pos) {\n    return {node: this.textDOM, offset: pos}\n  };\n\n  CompositionViewDesc.prototype.ignoreMutation = function ignoreMutation (mut) {\n    return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue\n   };\n\n  Object.defineProperties( CompositionViewDesc.prototype, prototypeAccessors$2 );\n\n  return CompositionViewDesc;\n}(ViewDesc));\n\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nvar MarkViewDesc = /*@__PURE__*/(function (ViewDesc) {\n  function MarkViewDesc(parent, mark, dom, contentDOM) {\n    ViewDesc.call(this, parent, [], dom, contentDOM);\n    this.mark = mark;\n  }\n\n  if ( ViewDesc ) MarkViewDesc.__proto__ = ViewDesc;\n  MarkViewDesc.prototype = Object.create( ViewDesc && ViewDesc.prototype );\n  MarkViewDesc.prototype.constructor = MarkViewDesc;\n\n  MarkViewDesc.create = function create (parent, mark, inline, view) {\n    var custom = view.nodeViews[mark.type.name];\n    var spec = custom && custom(mark, view, inline);\n    if (!spec || !spec.dom)\n      { spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline)); }\n    return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom)\n  };\n\n  MarkViewDesc.prototype.parseRule = function parseRule () { return {mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM} };\n\n  MarkViewDesc.prototype.matchesMark = function matchesMark (mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark) };\n\n  MarkViewDesc.prototype.markDirty = function markDirty (from, to) {\n    ViewDesc.prototype.markDirty.call(this, from, to);\n    // Move dirty info to nearest node view\n    if (this.dirty != NOT_DIRTY) {\n      var parent = this.parent;\n      while (!parent.node) { parent = parent.parent; }\n      if (parent.dirty < this.dirty) { parent.dirty = this.dirty; }\n      this.dirty = NOT_DIRTY;\n    }\n  };\n\n  MarkViewDesc.prototype.slice = function slice (from, to, view) {\n    var copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n    var nodes = this.children, size = this.size;\n    if (to < size) { nodes = replaceNodes(nodes, to, size, view); }\n    if (from > 0) { nodes = replaceNodes(nodes, 0, from, view); }\n    for (var i = 0; i < nodes.length; i++) { nodes[i].parent = copy; }\n    copy.children = nodes;\n    return copy\n  };\n\n  return MarkViewDesc;\n}(ViewDesc));\n\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nvar NodeViewDesc = /*@__PURE__*/(function (ViewDesc) {\n  function NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n    ViewDesc.call(this, parent, node.isLeaf ? nothing : [], dom, contentDOM);\n    this.nodeDOM = nodeDOM;\n    this.node = node;\n    this.outerDeco = outerDeco;\n    this.innerDeco = innerDeco;\n    if (contentDOM) { this.updateChildren(view, pos); }\n  }\n\n  if ( ViewDesc ) NodeViewDesc.__proto__ = ViewDesc;\n  NodeViewDesc.prototype = Object.create( ViewDesc && ViewDesc.prototype );\n  NodeViewDesc.prototype.constructor = NodeViewDesc;\n\n  var prototypeAccessors$3 = { size: { configurable: true },border: { configurable: true },domAtom: { configurable: true } };\n\n  // By default, a node is rendered using the `toDOM` method from the\n  // node type spec. But client code can use the `nodeViews` spec to\n  // supply a custom node view, which can influence various aspects of\n  // the way the node works.\n  //\n  // (Using subclassing for this was intentionally decided against,\n  // since it'd require exposing a whole slew of finicky\n  // implementation details to the user code that they probably will\n  // never need.)\n  NodeViewDesc.create = function create (parent, node, outerDeco, innerDeco, view, pos) {\n    var assign;\n\n    var custom = view.nodeViews[node.type.name], descObj;\n    var spec = custom && custom(node, view, function () {\n      // (This is a function that allows the custom view to find its\n      // own position)\n      if (!descObj) { return pos }\n      if (descObj.parent) { return descObj.parent.posBeforeChild(descObj) }\n    }, outerDeco, innerDeco);\n\n    var dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n    if (node.isText) {\n      if (!dom) { dom = document.createTextNode(node.text); }\n      else if (dom.nodeType != 3) { throw new RangeError(\"Text must be rendered as a DOM text node\") }\n    } else if (!dom) {\n((assign = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)), dom = assign.dom, contentDOM = assign.contentDOM));\n    }\n    if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n      if (!dom.hasAttribute(\"contenteditable\")) { dom.contentEditable = false; }\n      if (node.type.spec.draggable) { dom.draggable = true; }\n    }\n\n    var nodeDOM = dom;\n    dom = applyOuterDeco(dom, outerDeco, node);\n\n    if (spec)\n      { return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM,\n                                              spec, view, pos + 1) }\n    else if (node.isText)\n      { return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) }\n    else\n      { return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos + 1) }\n  };\n\n  NodeViewDesc.prototype.parseRule = function parseRule () {\n    var this$1 = this;\n\n    // Experimental kludge to allow opt-in re-parsing of nodes\n    if (this.node.type.spec.reparseInView) { return null }\n    // FIXME the assumption that this can always return the current\n    // attrs means that if the user somehow manages to change the\n    // attrs in the dom, that won't be picked up. Not entirely sure\n    // whether this is a problem\n    var rule = {node: this.node.type.name, attrs: this.node.attrs};\n    if (this.node.type.spec.code) { rule.preserveWhitespace = \"full\"; }\n    if (this.contentDOM && !this.contentLost) { rule.contentElement = this.contentDOM; }\n    else { rule.getContent = function () { return this$1.contentDOM ? Fragment.empty : this$1.node.content; }; }\n    return rule\n  };\n\n  NodeViewDesc.prototype.matchesNode = function matchesNode (node, outerDeco, innerDeco) {\n    return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n      sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco)\n  };\n\n  prototypeAccessors$3.size.get = function () { return this.node.nodeSize };\n\n  prototypeAccessors$3.border.get = function () { return this.node.isLeaf ? 0 : 1 };\n\n  // Syncs `this.children` to match `this.node.content` and the local\n  // decorations, possibly introducing nesting for marks. Then, in a\n  // separate step, syncs the DOM inside `this.contentDOM` to\n  // `this.children`.\n  NodeViewDesc.prototype.updateChildren = function updateChildren (view, pos) {\n    var this$1 = this;\n\n    var inline = this.node.inlineContent, off = pos;\n    var composition = view.composing && this.localCompositionInfo(view, pos);\n    var localComposition = composition && composition.pos > -1 ? composition : null;\n    var compositionInChild = composition && composition.pos < 0;\n    var updater = new ViewTreeUpdater(this, localComposition && localComposition.node);\n    iterDeco(this.node, this.innerDeco, function (widget, i, insideNode) {\n      if (widget.spec.marks)\n        { updater.syncToMarks(widget.spec.marks, inline, view); }\n      else if (widget.type.side >= 0 && !insideNode)\n        { updater.syncToMarks(i == this$1.node.childCount ? Mark.none : this$1.node.child(i).marks, inline, view); }\n      // If the next node is a desc matching this widget, reuse it,\n      // otherwise insert the widget as a new view desc.\n      updater.placeWidget(widget, view, off);\n    }, function (child, outerDeco, innerDeco, i) {\n      // Make sure the wrapping mark descs match the node's marks.\n      updater.syncToMarks(child.marks, inline, view);\n      // Try several strategies for drawing this node\n      var compIndex;\n      if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ; else if (compositionInChild && view.state.selection.from > off &&\n                 view.state.selection.to < off + child.nodeSize &&\n                 (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                 updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ; else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i)) ; else {\n        // Add it as a new view\n        updater.addNode(child, outerDeco, innerDeco, view, off);\n      }\n      off += child.nodeSize;\n    });\n    // Drop all remaining descs after the current position.\n    updater.syncToMarks(nothing, inline, view);\n    if (this.node.isTextblock) { updater.addTextblockHacks(); }\n    updater.destroyRest();\n\n    // Sync the DOM if anything changed\n    if (updater.changed || this.dirty == CONTENT_DIRTY) {\n      // May have to protect focused DOM from being changed if a composition is active\n      if (localComposition) { this.protectLocalComposition(view, localComposition); }\n      renderDescs(this.contentDOM, this.children, view);\n      if (result.ios) { iosHacks(this.dom); }\n    }\n  };\n\n  NodeViewDesc.prototype.localCompositionInfo = function localCompositionInfo (view, pos) {\n    // Only do something if both the selection and a focused text node\n    // are inside of this node\n    var ref = view.state.selection;\n    var from = ref.from;\n    var to = ref.to;\n    if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size) { return }\n    var sel = view.root.getSelection();\n    var textNode = nearbyTextNode(sel.focusNode, sel.focusOffset);\n    if (!textNode || !this.dom.contains(textNode.parentNode)) { return }\n\n    if (this.node.inlineContent) {\n      // Find the text in the focused node in the node, stop if it's not\n      // there (may have been modified through other means, in which\n      // case it should overwritten)\n      var text = textNode.nodeValue;\n      var textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n      return textPos < 0 ? null : {node: textNode, pos: textPos, text: text}\n    } else {\n      return {node: textNode, pos: -1}\n    }\n  };\n\n  NodeViewDesc.prototype.protectLocalComposition = function protectLocalComposition (view, ref) {\n    var node = ref.node;\n    var pos = ref.pos;\n    var text = ref.text;\n\n    // The node is already part of a local view desc, leave it there\n    if (this.getDesc(node)) { return }\n\n    // Create a composition view for the orphaned nodes\n    var topNode = node;\n    for (;; topNode = topNode.parentNode) {\n      if (topNode.parentNode == this.contentDOM) { break }\n      while (topNode.previousSibling) { topNode.parentNode.removeChild(topNode.previousSibling); }\n      while (topNode.nextSibling) { topNode.parentNode.removeChild(topNode.nextSibling); }\n      if (topNode.pmViewDesc) { topNode.pmViewDesc = null; }\n    }\n    var desc = new CompositionViewDesc(this, topNode, node, text);\n    view.compositionNodes.push(desc);\n\n    // Patch up this.children to contain the composition view\n    this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n  };\n\n  // : (Node, [Decoration], DecorationSource, EditorView) → bool\n  // If this desc be updated to match the given node decoration,\n  // do so and return true.\n  NodeViewDesc.prototype.update = function update (node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY ||\n        !node.sameMarkup(this.node)) { return false }\n    this.updateInner(node, outerDeco, innerDeco, view);\n    return true\n  };\n\n  NodeViewDesc.prototype.updateInner = function updateInner (node, outerDeco, innerDeco, view) {\n    this.updateOuterDeco(outerDeco);\n    this.node = node;\n    this.innerDeco = innerDeco;\n    if (this.contentDOM) { this.updateChildren(view, this.posAtStart); }\n    this.dirty = NOT_DIRTY;\n  };\n\n  NodeViewDesc.prototype.updateOuterDeco = function updateOuterDeco (outerDeco) {\n    if (sameOuterDeco(outerDeco, this.outerDeco)) { return }\n    var needsWrap = this.nodeDOM.nodeType != 1;\n    var oldDOM = this.dom;\n    this.dom = patchOuterDeco(this.dom, this.nodeDOM,\n                              computeOuterDeco(this.outerDeco, this.node, needsWrap),\n                              computeOuterDeco(outerDeco, this.node, needsWrap));\n    if (this.dom != oldDOM) {\n      oldDOM.pmViewDesc = null;\n      this.dom.pmViewDesc = this;\n    }\n    this.outerDeco = outerDeco;\n  };\n\n  // Mark this node as being the selected node.\n  NodeViewDesc.prototype.selectNode = function selectNode () {\n    this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n    if (this.contentDOM || !this.node.type.spec.draggable) { this.dom.draggable = true; }\n  };\n\n  // Remove selected node marking from this node.\n  NodeViewDesc.prototype.deselectNode = function deselectNode () {\n    this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n    if (this.contentDOM || !this.node.type.spec.draggable) { this.dom.removeAttribute(\"draggable\"); }\n  };\n\n  prototypeAccessors$3.domAtom.get = function () { return this.node.isAtom };\n\n  Object.defineProperties( NodeViewDesc.prototype, prototypeAccessors$3 );\n\n  return NodeViewDesc;\n}(ViewDesc));\n\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n  applyOuterDeco(dom, outerDeco, doc);\n  return new NodeViewDesc(null, doc, outerDeco, innerDeco, dom, dom, dom, view, 0)\n}\n\nvar TextViewDesc = /*@__PURE__*/(function (NodeViewDesc) {\n  function TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n    NodeViewDesc.call(this, parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view);\n  }\n\n  if ( NodeViewDesc ) TextViewDesc.__proto__ = NodeViewDesc;\n  TextViewDesc.prototype = Object.create( NodeViewDesc && NodeViewDesc.prototype );\n  TextViewDesc.prototype.constructor = TextViewDesc;\n\n  var prototypeAccessors$4 = { domAtom: { configurable: true } };\n\n  TextViewDesc.prototype.parseRule = function parseRule () {\n    var skip = this.nodeDOM.parentNode;\n    while (skip && skip != this.dom && !skip.pmIsDeco) { skip = skip.parentNode; }\n    return {skip: skip || true}\n  };\n\n  TextViewDesc.prototype.update = function update (node, outerDeco, _, view) {\n    if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n        !node.sameMarkup(this.node)) { return false }\n    this.updateOuterDeco(outerDeco);\n    if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n      this.nodeDOM.nodeValue = node.text;\n      if (view.trackWrites == this.nodeDOM) { view.trackWrites = null; }\n    }\n    this.node = node;\n    this.dirty = NOT_DIRTY;\n    return true\n  };\n\n  TextViewDesc.prototype.inParent = function inParent () {\n    var parentDOM = this.parent.contentDOM;\n    for (var n = this.nodeDOM; n; n = n.parentNode) { if (n == parentDOM) { return true } }\n    return false\n  };\n\n  TextViewDesc.prototype.domFromPos = function domFromPos (pos) {\n    return {node: this.nodeDOM, offset: pos}\n  };\n\n  TextViewDesc.prototype.localPosFromDOM = function localPosFromDOM (dom, offset, bias) {\n    if (dom == this.nodeDOM) { return this.posAtStart + Math.min(offset, this.node.text.length) }\n    return NodeViewDesc.prototype.localPosFromDOM.call(this, dom, offset, bias)\n  };\n\n  TextViewDesc.prototype.ignoreMutation = function ignoreMutation (mutation) {\n    return mutation.type != \"characterData\" && mutation.type != \"selection\"\n  };\n\n  TextViewDesc.prototype.slice = function slice (from, to, view) {\n    var node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n    return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view)\n  };\n\n  TextViewDesc.prototype.markDirty = function markDirty (from, to) {\n    NodeViewDesc.prototype.markDirty.call(this, from, to);\n    if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n      { this.dirty = NODE_DIRTY; }\n  };\n\n  prototypeAccessors$4.domAtom.get = function () { return false };\n\n  Object.defineProperties( TextViewDesc.prototype, prototypeAccessors$4 );\n\n  return TextViewDesc;\n}(NodeViewDesc));\n\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nvar TrailingHackViewDesc = /*@__PURE__*/(function (ViewDesc) {\n  function TrailingHackViewDesc () {\n    ViewDesc.apply(this, arguments);\n  }\n\n  if ( ViewDesc ) TrailingHackViewDesc.__proto__ = ViewDesc;\n  TrailingHackViewDesc.prototype = Object.create( ViewDesc && ViewDesc.prototype );\n  TrailingHackViewDesc.prototype.constructor = TrailingHackViewDesc;\n\n  var prototypeAccessors$5 = { domAtom: { configurable: true },ignoreForCoords: { configurable: true } };\n\n  TrailingHackViewDesc.prototype.parseRule = function parseRule () { return {ignore: true} };\n  TrailingHackViewDesc.prototype.matchesHack = function matchesHack (nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName };\n  prototypeAccessors$5.domAtom.get = function () { return true };\n  prototypeAccessors$5.ignoreForCoords.get = function () { return this.dom.nodeName == \"IMG\" };\n\n  Object.defineProperties( TrailingHackViewDesc.prototype, prototypeAccessors$5 );\n\n  return TrailingHackViewDesc;\n}(ViewDesc));\n\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nvar CustomNodeViewDesc = /*@__PURE__*/(function (NodeViewDesc) {\n  function CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n    NodeViewDesc.call(this, parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n    this.spec = spec;\n  }\n\n  if ( NodeViewDesc ) CustomNodeViewDesc.__proto__ = NodeViewDesc;\n  CustomNodeViewDesc.prototype = Object.create( NodeViewDesc && NodeViewDesc.prototype );\n  CustomNodeViewDesc.prototype.constructor = CustomNodeViewDesc;\n\n  // A custom `update` method gets to decide whether the update goes\n  // through. If it does, and there's a `contentDOM` node, our logic\n  // updates the children.\n  CustomNodeViewDesc.prototype.update = function update (node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY) { return false }\n    if (this.spec.update) {\n      var result = this.spec.update(node, outerDeco, innerDeco);\n      if (result) { this.updateInner(node, outerDeco, innerDeco, view); }\n      return result\n    } else if (!this.contentDOM && !node.isLeaf) {\n      return false\n    } else {\n      return NodeViewDesc.prototype.update.call(this, node, outerDeco, innerDeco, view)\n    }\n  };\n\n  CustomNodeViewDesc.prototype.selectNode = function selectNode () {\n    this.spec.selectNode ? this.spec.selectNode() : NodeViewDesc.prototype.selectNode.call(this);\n  };\n\n  CustomNodeViewDesc.prototype.deselectNode = function deselectNode () {\n    this.spec.deselectNode ? this.spec.deselectNode() : NodeViewDesc.prototype.deselectNode.call(this);\n  };\n\n  CustomNodeViewDesc.prototype.setSelection = function setSelection (anchor, head, root, force) {\n    this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n      : NodeViewDesc.prototype.setSelection.call(this, anchor, head, root, force);\n  };\n\n  CustomNodeViewDesc.prototype.destroy = function destroy () {\n    if (this.spec.destroy) { this.spec.destroy(); }\n    NodeViewDesc.prototype.destroy.call(this);\n  };\n\n  CustomNodeViewDesc.prototype.stopEvent = function stopEvent (event) {\n    return this.spec.stopEvent ? this.spec.stopEvent(event) : false\n  };\n\n  CustomNodeViewDesc.prototype.ignoreMutation = function ignoreMutation (mutation) {\n    return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : NodeViewDesc.prototype.ignoreMutation.call(this, mutation)\n  };\n\n  return CustomNodeViewDesc;\n}(NodeViewDesc));\n\n// : (dom.Node, [ViewDesc])\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n  var dom = parentDOM.firstChild, written = false;\n  for (var i = 0; i < descs.length; i++) {\n    var desc = descs[i], childDOM = desc.dom;\n    if (childDOM.parentNode == parentDOM) {\n      while (childDOM != dom) { dom = rm(dom); written = true; }\n      dom = dom.nextSibling;\n    } else {\n      written = true;\n      parentDOM.insertBefore(childDOM, dom);\n    }\n    if (desc instanceof MarkViewDesc) {\n      var pos = dom ? dom.previousSibling : parentDOM.lastChild;\n      renderDescs(desc.contentDOM, desc.children, view);\n      dom = pos ? pos.nextSibling : parentDOM.firstChild;\n    }\n  }\n  while (dom) { dom = rm(dom); written = true; }\n  if (written && view.trackWrites == parentDOM) { view.trackWrites = null; }\n}\n\nfunction OuterDecoLevel(nodeName) {\n  if (nodeName) { this.nodeName = nodeName; }\n}\nOuterDecoLevel.prototype = Object.create(null);\n\nvar noDeco = [new OuterDecoLevel];\n\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n  if (outerDeco.length == 0) { return noDeco }\n\n  var top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n\n  for (var i = 0; i < outerDeco.length; i++) {\n    var attrs = outerDeco[i].type.attrs;\n    if (!attrs) { continue }\n    if (attrs.nodeName)\n      { result.push(top = new OuterDecoLevel(attrs.nodeName)); }\n\n    for (var name in attrs) {\n      var val = attrs[name];\n      if (val == null) { continue }\n      if (needsWrap && result.length == 1)\n        { result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\")); }\n      if (name == \"class\") { top.class = (top.class ? top.class + \" \" : \"\") + val; }\n      else if (name == \"style\") { top.style = (top.style ? top.style + \";\" : \"\") + val; }\n      else if (name != \"nodeName\") { top[name] = val; }\n    }\n  }\n\n  return result\n}\n\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n  // Shortcut for trivial case\n  if (prevComputed == noDeco && curComputed == noDeco) { return nodeDOM }\n\n  var curDOM = nodeDOM;\n  for (var i = 0; i < curComputed.length; i++) {\n    var deco = curComputed[i], prev = prevComputed[i];\n    if (i) {\n      var parent = (void 0);\n      if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n          (parent = curDOM.parentNode) && parent.tagName.toLowerCase() == deco.nodeName) {\n        curDOM = parent;\n      } else {\n        parent = document.createElement(deco.nodeName);\n        parent.pmIsDeco = true;\n        parent.appendChild(curDOM);\n        prev = noDeco[0];\n        curDOM = parent;\n      }\n    }\n    patchAttributes(curDOM, prev || noDeco[0], deco);\n  }\n  return curDOM\n}\n\nfunction patchAttributes(dom, prev, cur) {\n  for (var name in prev)\n    { if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n      { dom.removeAttribute(name); } }\n  for (var name$1 in cur)\n    { if (name$1 != \"class\" && name$1 != \"style\" && name$1 != \"nodeName\" && cur[name$1] != prev[name$1])\n      { dom.setAttribute(name$1, cur[name$1]); } }\n  if (prev.class != cur.class) {\n    var prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : nothing;\n    var curList = cur.class ? cur.class.split(\" \").filter(Boolean) : nothing;\n    for (var i = 0; i < prevList.length; i++) { if (curList.indexOf(prevList[i]) == -1)\n      { dom.classList.remove(prevList[i]); } }\n    for (var i$1 = 0; i$1 < curList.length; i$1++) { if (prevList.indexOf(curList[i$1]) == -1)\n      { dom.classList.add(curList[i$1]); } }\n  }\n  if (prev.style != cur.style) {\n    if (prev.style) {\n      var prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n      while (m = prop.exec(prev.style))\n        { dom.style.removeProperty(m[1]); }\n    }\n    if (cur.style)\n      { dom.style.cssText += cur.style; }\n  }\n}\n\nfunction applyOuterDeco(dom, deco, node) {\n  return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1))\n}\n\n// : ([Decoration], [Decoration]) → bool\nfunction sameOuterDeco(a, b) {\n  if (a.length != b.length) { return false }\n  for (var i = 0; i < a.length; i++) { if (!a[i].type.eq(b[i].type)) { return false } }\n  return true\n}\n\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n  var next = dom.nextSibling;\n  dom.parentNode.removeChild(dom);\n  return next\n}\n\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nvar ViewTreeUpdater = function ViewTreeUpdater(top, lockedNode) {\n  this.top = top;\n  this.lock = lockedNode;\n  // Index into `this.top`'s child array, represents the current\n  // update position.\n  this.index = 0;\n  // When entering a mark, the current top and index are pushed\n  // onto this.\n  this.stack = [];\n  // Tracks whether anything was changed\n  this.changed = false;\n\n  this.preMatch = preMatch(top.node.content, top.children);\n};\n\n// Destroy and remove the children between the given indices in\n// `this.top`.\nViewTreeUpdater.prototype.destroyBetween = function destroyBetween (start, end) {\n  if (start == end) { return }\n  for (var i = start; i < end; i++) { this.top.children[i].destroy(); }\n  this.top.children.splice(start, end - start);\n  this.changed = true;\n};\n\n// Destroy all remaining children in `this.top`.\nViewTreeUpdater.prototype.destroyRest = function destroyRest () {\n  this.destroyBetween(this.index, this.top.children.length);\n};\n\n// : ([Mark], EditorView)\n// Sync the current stack of mark descs with the given array of\n// marks, reusing existing mark descs when possible.\nViewTreeUpdater.prototype.syncToMarks = function syncToMarks (marks, inline, view) {\n  var keep = 0, depth = this.stack.length >> 1;\n  var maxKeep = Math.min(depth, marks.length);\n  while (keep < maxKeep &&\n         (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1]).matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n    { keep++; }\n\n  while (keep < depth) {\n    this.destroyRest();\n    this.top.dirty = NOT_DIRTY;\n    this.index = this.stack.pop();\n    this.top = this.stack.pop();\n    depth--;\n  }\n  while (depth < marks.length) {\n    this.stack.push(this.top, this.index + 1);\n    var found = -1;\n    for (var i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n      if (this.top.children[i].matchesMark(marks[depth])) { found = i; break }\n    }\n    if (found > -1) {\n      if (found > this.index) {\n        this.changed = true;\n        this.destroyBetween(this.index, found);\n      }\n      this.top = this.top.children[this.index];\n    } else {\n      var markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n      this.top.children.splice(this.index, 0, markDesc);\n      this.top = markDesc;\n      this.changed = true;\n    }\n    this.index = 0;\n    depth++;\n  }\n};\n\n// : (Node, [Decoration], DecorationSource) → bool\n// Try to find a node desc matching the given data. Skip over it and\n// return true when successful.\nViewTreeUpdater.prototype.findNodeMatch = function findNodeMatch (node, outerDeco, innerDeco, index) {\n  var children = this.top.children, found = -1;\n  if (index >= this.preMatch.index) {\n    for (var i = this.index; i < children.length; i++) { if (children[i].matchesNode(node, outerDeco, innerDeco)) {\n      found = i;\n      break\n    } }\n  } else {\n    for (var i$1 = this.index, e = Math.min(children.length, i$1 + 1); i$1 < e; i$1++) {\n      var child = children[i$1];\n      if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n        found = i$1;\n        break\n      }\n    }\n  }\n  if (found < 0) { return false }\n  this.destroyBetween(this.index, found);\n  this.index++;\n  return true\n};\n\nViewTreeUpdater.prototype.updateNodeAt = function updateNodeAt (node, outerDeco, innerDeco, index, view) {\n  var child = this.top.children[index];\n  if (!child.update(node, outerDeco, innerDeco, view)) { return false }\n  this.destroyBetween(this.index, index);\n  this.index = index + 1;\n  return true\n};\n\nViewTreeUpdater.prototype.findIndexWithChild = function findIndexWithChild (domNode) {\n  for (;;) {\n    var parent = domNode.parentNode;\n    if (!parent) { return -1 }\n    if (parent == this.top.contentDOM) {\n      var desc = domNode.pmViewDesc;\n      if (desc) { for (var i = this.index; i < this.top.children.length; i++) {\n        if (this.top.children[i] == desc) { return i }\n      } }\n      return -1\n    }\n    domNode = parent;\n  }\n};\n\n// : (Node, [Decoration], DecorationSource, EditorView, Fragment, number) → bool\n// Try to update the next node, if any, to the given data. Checks\n// pre-matches to avoid overwriting nodes that could still be used.\nViewTreeUpdater.prototype.updateNextNode = function updateNextNode (node, outerDeco, innerDeco, view, index) {\n  for (var i = this.index; i < this.top.children.length; i++) {\n    var next = this.top.children[i];\n    if (next instanceof NodeViewDesc) {\n      var preMatch = this.preMatch.matched.get(next);\n      if (preMatch != null && preMatch != index) { return false }\n      var nextDOM = next.dom;\n\n      // Can't update if nextDOM is or contains this.lock, except if\n      // it's a text node whose content already matches the new text\n      // and whose decorations match the new ones.\n      var locked = this.lock && (nextDOM == this.lock || nextDOM.nodeType == 1 && nextDOM.contains(this.lock.parentNode)) &&\n          !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n            next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n      if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n        this.destroyBetween(this.index, i);\n        if (next.dom != nextDOM) { this.changed = true; }\n        this.index++;\n        return true\n      }\n      break\n    }\n  }\n  return false\n};\n\n// : (Node, [Decoration], DecorationSource, EditorView)\n// Insert the node as a newly created node desc.\nViewTreeUpdater.prototype.addNode = function addNode (node, outerDeco, innerDeco, view, pos) {\n  this.top.children.splice(this.index++, 0, NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos));\n  this.changed = true;\n};\n\nViewTreeUpdater.prototype.placeWidget = function placeWidget (widget, view, pos) {\n  var next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n  if (next && next.matchesWidget(widget) && (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n    this.index++;\n  } else {\n    var desc = new WidgetViewDesc(this.top, widget, view, pos);\n    this.top.children.splice(this.index++, 0, desc);\n    this.changed = true;\n  }\n};\n\n// Make sure a textblock looks and behaves correctly in\n// contentEditable.\nViewTreeUpdater.prototype.addTextblockHacks = function addTextblockHacks () {\n  var lastChild = this.top.children[this.index - 1];\n  while (lastChild instanceof MarkViewDesc) { lastChild = lastChild.children[lastChild.children.length - 1]; }\n\n  if (!lastChild || // Empty textblock\n      !(lastChild instanceof TextViewDesc) ||\n      /\\n$/.test(lastChild.node.text)) {\n    // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n    if ((result.safari || result.chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n      { this.addHackNode(\"IMG\"); }\n    this.addHackNode(\"BR\");\n  }\n};\n\nViewTreeUpdater.prototype.addHackNode = function addHackNode (nodeName) {\n  if (this.index < this.top.children.length && this.top.children[this.index].matchesHack(nodeName)) {\n    this.index++;\n  } else {\n    var dom = document.createElement(nodeName);\n    if (nodeName == \"IMG\") { dom.className = \"ProseMirror-separator\"; }\n    if (nodeName == \"BR\") { dom.className = \"ProseMirror-trailingBreak\"; }\n    this.top.children.splice(this.index++, 0, new TrailingHackViewDesc(this.top, nothing, dom, null));\n    this.changed = true;\n  }\n};\n\n// : (Fragment, [ViewDesc]) → {index: number, matched: Map<ViewDesc, number>}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, descs) {\n  var fI = frag.childCount, dI = descs.length, matched = new Map;\n  for (; fI > 0 && dI > 0; dI--) {\n    var desc = descs[dI - 1], node = desc.node;\n    if (!node) { continue }\n    if (node != frag.child(fI - 1)) { break }\n    --fI;\n    matched.set(desc, fI);\n  }\n  return {index: fI, matched: matched}\n}\n\nfunction compareSide(a, b) { return a.type.side - b.type.side }\n\n// : (ViewDesc, DecorationSource, (Decoration, number), (Node, [Decoration], DecorationSource, number))\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n  var locals = deco.locals(parent), offset = 0;\n  // Simple, cheap variant for when there are no local decorations\n  if (locals.length == 0) {\n    for (var i = 0; i < parent.childCount; i++) {\n      var child = parent.child(i);\n      onNode(child, locals, deco.forChild(offset, child), i);\n      offset += child.nodeSize;\n    }\n    return\n  }\n\n  var decoIndex = 0, active = [], restNode = null;\n  for (var parentIndex = 0;;) {\n    if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n      var widget = locals[decoIndex++], widgets = (void 0);\n      while (decoIndex < locals.length && locals[decoIndex].to == offset)\n        { (widgets || (widgets = [widget])).push(locals[decoIndex++]); }\n      if (widgets) {\n        widgets.sort(compareSide);\n        for (var i$1 = 0; i$1 < widgets.length; i$1++) { onWidget(widgets[i$1], parentIndex, !!restNode); }\n      } else {\n        onWidget(widget, parentIndex, !!restNode);\n      }\n    }\n\n    var child$1 = (void 0), index = (void 0);\n    if (restNode) {\n      index = -1;\n      child$1 = restNode;\n      restNode = null;\n    } else if (parentIndex < parent.childCount) {\n      index = parentIndex;\n      child$1 = parent.child(parentIndex++);\n    } else {\n      break\n    }\n\n    for (var i$2 = 0; i$2 < active.length; i$2++) { if (active[i$2].to <= offset) { active.splice(i$2--, 1); } }\n    while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n      { active.push(locals[decoIndex++]); }\n\n    var end = offset + child$1.nodeSize;\n    if (child$1.isText) {\n      var cutAt = end;\n      if (decoIndex < locals.length && locals[decoIndex].from < cutAt) { cutAt = locals[decoIndex].from; }\n      for (var i$3 = 0; i$3 < active.length; i$3++) { if (active[i$3].to < cutAt) { cutAt = active[i$3].to; } }\n      if (cutAt < end) {\n        restNode = child$1.cut(cutAt - offset);\n        child$1 = child$1.cut(0, cutAt - offset);\n        end = cutAt;\n        index = -1;\n      }\n    }\n\n    var outerDeco = !active.length ? nothing\n        : child$1.isInline && !child$1.isLeaf ? active.filter(function (d) { return !d.inline; })\n        : active.slice();\n    onNode(child$1, outerDeco, deco.forChild(offset, child$1), index);\n    offset = end;\n  }\n}\n\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n  if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n    var oldCSS = dom.style.cssText;\n    dom.style.cssText = oldCSS + \"; list-style: square !important\";\n    window.getComputedStyle(dom).listStyle;\n    dom.style.cssText = oldCSS;\n  }\n}\n\nfunction nearbyTextNode(node, offset) {\n  for (;;) {\n    if (node.nodeType == 3) { return node }\n    if (node.nodeType == 1 && offset > 0) {\n      if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n        { return node.childNodes[offset] }\n      node = node.childNodes[offset - 1];\n      offset = nodeSize(node);\n    } else if (node.nodeType == 1 && offset < node.childNodes.length) {\n      node = node.childNodes[offset];\n      offset = 0;\n    } else {\n      return null\n    }\n  }\n}\n\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n  for (var i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n    var child = frag.child(i++), childStart = pos;\n    pos += child.nodeSize;\n    if (!child.isText) { continue }\n    var str = child.text;\n    while (i < frag.childCount) {\n      var next = frag.child(i++);\n      pos += next.nodeSize;\n      if (!next.isText) { break }\n      str += next.text;\n    }\n    if (pos >= from) {\n      var found = str.lastIndexOf(text, to - childStart);\n      if (found >= 0 && found + text.length + childStart >= from)\n        { return childStart + found }\n    }\n  }\n  return -1\n}\n\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n  var result = [];\n  for (var i = 0, off = 0; i < nodes.length; i++) {\n    var child = nodes[i], start = off, end = off += child.size;\n    if (start >= to || end <= from) {\n      result.push(child);\n    } else {\n      if (start < from) { result.push(child.slice(0, from - start, view)); }\n      if (replacement) {\n        result.push(replacement);\n        replacement = null;\n      }\n      if (end > to) { result.push(child.slice(to - start, child.size, view)); }\n    }\n  }\n  return result\n}\n\nfunction selectionFromDOM(view, origin) {\n  var domSel = view.root.getSelection(), doc = view.state.doc;\n  if (!domSel.focusNode) { return null }\n  var nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n  var head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n  if (head < 0) { return null }\n  var $head = doc.resolve(head), $anchor, selection;\n  if (selectionCollapsed(domSel)) {\n    $anchor = $head;\n    while (nearestDesc && !nearestDesc.node) { nearestDesc = nearestDesc.parent; }\n    if (nearestDesc && nearestDesc.node.isAtom && NodeSelection.isSelectable(nearestDesc.node) && nearestDesc.parent\n        && !(nearestDesc.node.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n      var pos = nearestDesc.posBefore;\n      selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n    }\n  } else {\n    var anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n    if (anchor < 0) { return null }\n    $anchor = doc.resolve(anchor);\n  }\n\n  if (!selection) {\n    var bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n    selection = selectionBetween(view, $anchor, $head, bias);\n  }\n  return selection\n}\n\nfunction editorOwnsSelection(view) {\n  return view.editable ? view.hasFocus() :\n    hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom)\n}\n\nfunction selectionToDOM(view, force) {\n  var sel = view.state.selection;\n  syncNodeSelection(view, sel);\n\n  if (!editorOwnsSelection(view)) { return }\n\n  if (!force && view.mouseDown && view.mouseDown.allowDefault) {\n    view.mouseDown.delayedSelectionSync = true;\n    view.domObserver.setCurSelection();\n    return\n  }\n\n  view.domObserver.disconnectSelection();\n\n  if (view.cursorWrapper) {\n    selectCursorWrapper(view);\n  } else {\n    var anchor = sel.anchor;\n    var head = sel.head;\n    var resetEditableFrom, resetEditableTo;\n    if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n      if (!sel.$from.parent.inlineContent)\n        { resetEditableFrom = temporarilyEditableNear(view, sel.from); }\n      if (!sel.empty && !sel.$from.parent.inlineContent)\n        { resetEditableTo = temporarilyEditableNear(view, sel.to); }\n    }\n    view.docView.setSelection(anchor, head, view.root, force);\n    if (brokenSelectBetweenUneditable) {\n      if (resetEditableFrom) { resetEditable(resetEditableFrom); }\n      if (resetEditableTo) { resetEditable(resetEditableTo); }\n    }\n    if (sel.visible) {\n      view.dom.classList.remove(\"ProseMirror-hideselection\");\n    } else {\n      view.dom.classList.add(\"ProseMirror-hideselection\");\n      if (\"onselectionchange\" in document) { removeClassOnSelectionChange(view); }\n    }\n  }\n\n  view.domObserver.setCurSelection();\n  view.domObserver.connectSelection();\n}\n\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\n\nvar brokenSelectBetweenUneditable = result.safari || result.chrome && result.chrome_version < 63;\n\nfunction temporarilyEditableNear(view, pos) {\n  var ref = view.docView.domFromPos(pos, 0);\n  var node = ref.node;\n  var offset = ref.offset;\n  var after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n  var before = offset ? node.childNodes[offset - 1] : null;\n  if (result.safari && after && after.contentEditable == \"false\") { return setEditable(after) }\n  if ((!after || after.contentEditable == \"false\") && (!before || before.contentEditable == \"false\")) {\n    if (after) { return setEditable(after) }\n    else if (before) { return setEditable(before) }\n  }\n}\n\nfunction setEditable(element) {\n  element.contentEditable = \"true\";\n  if (result.safari && element.draggable) { element.draggable = false; element.wasDraggable = true; }\n  return element\n}\n\nfunction resetEditable(element) {\n  element.contentEditable = \"false\";\n  if (element.wasDraggable) { element.draggable = true; element.wasDraggable = null; }\n}\n\nfunction removeClassOnSelectionChange(view) {\n  var doc = view.dom.ownerDocument;\n  doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard);\n  var domSel = view.root.getSelection();\n  var node = domSel.anchorNode, offset = domSel.anchorOffset;\n  doc.addEventListener(\"selectionchange\", view.hideSelectionGuard = function () {\n    if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n      doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard);\n      setTimeout(function () {\n        if (!editorOwnsSelection(view) || view.state.selection.visible)\n          { view.dom.classList.remove(\"ProseMirror-hideselection\"); }\n      }, 20);\n    }\n  });\n}\n\nfunction selectCursorWrapper(view) {\n  var domSel = view.root.getSelection(), range = document.createRange();\n  var node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n  if (img) { range.setEnd(node.parentNode, domIndex(node) + 1); }\n  else { range.setEnd(node, 0); }\n  range.collapse(false);\n  domSel.removeAllRanges();\n  domSel.addRange(range);\n  // Kludge to kill 'control selection' in IE11 when selecting an\n  // invisible cursor wrapper, since that would result in those weird\n  // resize handles and a selection that considers the absolutely\n  // positioned wrapper, rather than the root editable node, the\n  // focused element.\n  if (!img && !view.state.selection.visible && result.ie && result.ie_version <= 11) {\n    node.disabled = true;\n    node.disabled = false;\n  }\n}\n\nfunction syncNodeSelection(view, sel) {\n  if (sel instanceof NodeSelection) {\n    var desc = view.docView.descAt(sel.from);\n    if (desc != view.lastSelectedViewDesc) {\n      clearNodeSelection(view);\n      if (desc) { desc.selectNode(); }\n      view.lastSelectedViewDesc = desc;\n    }\n  } else {\n    clearNodeSelection(view);\n  }\n}\n\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n  if (view.lastSelectedViewDesc) {\n    if (view.lastSelectedViewDesc.parent)\n      { view.lastSelectedViewDesc.deselectNode(); }\n    view.lastSelectedViewDesc = null;\n  }\n}\n\nfunction selectionBetween(view, $anchor, $head, bias) {\n  return view.someProp(\"createSelectionBetween\", function (f) { return f(view, $anchor, $head); })\n    || TextSelection.between($anchor, $head, bias)\n}\n\nfunction hasFocusAndSelection(view) {\n  if (view.editable && view.root.activeElement != view.dom) { return false }\n  return hasSelection(view)\n}\n\nfunction hasSelection(view) {\n  var sel = view.root.getSelection();\n  if (!sel.anchorNode) { return false }\n  try {\n    // Firefox will raise 'permission denied' errors when accessing\n    // properties of `sel.anchorNode` when it's in a generated CSS\n    // element.\n    return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n      (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode))\n  } catch(_) {\n    return false\n  }\n}\n\nfunction anchorInRightPlace(view) {\n  var anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n  var domSel = view.root.getSelection();\n  return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset)\n}\n\nfunction moveSelectionBlock(state, dir) {\n  var ref = state.selection;\n  var $anchor = ref.$anchor;\n  var $head = ref.$head;\n  var $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n  var $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n  return $start && Selection.findFrom($start, dir)\n}\n\nfunction apply(view, sel) {\n  view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n  return true\n}\n\nfunction selectHorizontally(view, dir, mods) {\n  var sel = view.state.selection;\n  if (sel instanceof TextSelection) {\n    if (!sel.empty || mods.indexOf(\"s\") > -1) {\n      return false\n    } else if (view.endOfTextblock(dir > 0 ? \"right\" : \"left\")) {\n      var next = moveSelectionBlock(view.state, dir);\n      if (next && (next instanceof NodeSelection)) { return apply(view, next) }\n      return false\n    } else if (!(result.mac && mods.indexOf(\"m\") > -1)) {\n      var $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n      if (!node || node.isText) { return false }\n      var nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n      if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM)) { return false }\n      if (NodeSelection.isSelectable(node)) {\n        return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head))\n      } else if (result.webkit) {\n        // Chrome and Safari will introduce extra pointless cursor\n        // positions around inline uneditable nodes, so we have to\n        // take over and move the cursor past them (#937)\n        return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)))\n      } else {\n        return false\n      }\n    }\n  } else if (sel instanceof NodeSelection && sel.node.isInline) {\n    return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from))\n  } else {\n    var next$1 = moveSelectionBlock(view.state, dir);\n    if (next$1) { return apply(view, next$1) }\n    return false\n  }\n}\n\nfunction nodeLen(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nfunction isIgnorable(dom) {\n  var desc = dom.pmViewDesc;\n  return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\")\n}\n\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesLeft(view) {\n  var sel = view.root.getSelection();\n  var node = sel.focusNode, offset = sel.focusOffset;\n  if (!node) { return }\n  var moveNode, moveOffset, force = false;\n  // Gecko will do odd things when the selection is directly in front\n  // of a non-editable node, so in that case, move it into the next\n  // node if possible. Issue prosemirror/prosemirror#832.\n  if (result.gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset])) { force = true; }\n  for (;;) {\n    if (offset > 0) {\n      if (node.nodeType != 1) {\n        break\n      } else {\n        var before = node.childNodes[offset - 1];\n        if (isIgnorable(before)) {\n          moveNode = node;\n          moveOffset = --offset;\n        } else if (before.nodeType == 3) {\n          node = before;\n          offset = node.nodeValue.length;\n        } else { break }\n      }\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      var prev = node.previousSibling;\n      while (prev && isIgnorable(prev)) {\n        moveNode = node.parentNode;\n        moveOffset = domIndex(prev);\n        prev = prev.previousSibling;\n      }\n      if (!prev) {\n        node = node.parentNode;\n        if (node == view.dom) { break }\n        offset = 0;\n      } else {\n        node = prev;\n        offset = nodeLen(node);\n      }\n    }\n  }\n  if (force) { setSelFocus(view, sel, node, offset); }\n  else if (moveNode) { setSelFocus(view, sel, moveNode, moveOffset); }\n}\n\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesRight(view) {\n  var sel = view.root.getSelection();\n  var node = sel.focusNode, offset = sel.focusOffset;\n  if (!node) { return }\n  var len = nodeLen(node);\n  var moveNode, moveOffset;\n  for (;;) {\n    if (offset < len) {\n      if (node.nodeType != 1) { break }\n      var after = node.childNodes[offset];\n      if (isIgnorable(after)) {\n        moveNode = node;\n        moveOffset = ++offset;\n      }\n      else { break }\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      var next = node.nextSibling;\n      while (next && isIgnorable(next)) {\n        moveNode = next.parentNode;\n        moveOffset = domIndex(next) + 1;\n        next = next.nextSibling;\n      }\n      if (!next) {\n        node = node.parentNode;\n        if (node == view.dom) { break }\n        offset = len = 0;\n      } else {\n        node = next;\n        offset = 0;\n        len = nodeLen(node);\n      }\n    }\n  }\n  if (moveNode) { setSelFocus(view, sel, moveNode, moveOffset); }\n}\n\nfunction isBlockNode(dom) {\n  var desc = dom.pmViewDesc;\n  return desc && desc.node && desc.node.isBlock\n}\n\nfunction setSelFocus(view, sel, node, offset) {\n  if (selectionCollapsed(sel)) {\n    var range = document.createRange();\n    range.setEnd(node, offset);\n    range.setStart(node, offset);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  } else if (sel.extend) {\n    sel.extend(node, offset);\n  }\n  view.domObserver.setCurSelection();\n  var state = view.state;\n  // If no state update ends up happening, reset the selection.\n  setTimeout(function () {\n    if (view.state == state) { selectionToDOM(view); }\n  }, 50);\n}\n\n// : (EditorState, number)\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n  var sel = view.state.selection;\n  if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1) { return false }\n  if (result.mac && mods.indexOf(\"m\") > -1) { return false }\n  var $from = sel.$from;\n  var $to = sel.$to;\n\n  if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n    var next = moveSelectionBlock(view.state, dir);\n    if (next && (next instanceof NodeSelection))\n      { return apply(view, next) }\n  }\n  if (!$from.parent.inlineContent) {\n    var side = dir < 0 ? $from : $to;\n    var beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n    return beyond ? apply(view, beyond) : false\n  }\n  return false\n}\n\nfunction stopNativeHorizontalDelete(view, dir) {\n  if (!(view.state.selection instanceof TextSelection)) { return true }\n  var ref = view.state.selection;\n  var $head = ref.$head;\n  var $anchor = ref.$anchor;\n  var empty = ref.empty;\n  if (!$head.sameParent($anchor)) { return true }\n  if (!empty) { return false }\n  if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) { return true }\n  var nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n  if (nextNode && !nextNode.isText) {\n    var tr = view.state.tr;\n    if (dir < 0) { tr.delete($head.pos - nextNode.nodeSize, $head.pos); }\n    else { tr.delete($head.pos, $head.pos + nextNode.nodeSize); }\n    view.dispatch(tr);\n    return true\n  }\n  return false\n}\n\nfunction switchEditable(view, node, state) {\n  view.domObserver.stop();\n  node.contentEditable = state;\n  view.domObserver.start();\n}\n\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n  if (!result.safari || view.state.selection.$head.parentOffset > 0) { return }\n  var ref = view.root.getSelection();\n  var focusNode = ref.focusNode;\n  var focusOffset = ref.focusOffset;\n  if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n      focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n    var child = focusNode.firstChild;\n    switchEditable(view, child, true);\n    setTimeout(function () { return switchEditable(view, child, false); }, 20);\n  }\n}\n\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\n\nfunction getMods(event) {\n  var result = \"\";\n  if (event.ctrlKey) { result += \"c\"; }\n  if (event.metaKey) { result += \"m\"; }\n  if (event.altKey) { result += \"a\"; }\n  if (event.shiftKey) { result += \"s\"; }\n  return result\n}\n\nfunction captureKeyDown(view, event) {\n  var code = event.keyCode, mods = getMods(event);\n  if (code == 8 || (result.mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n    return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodesLeft(view)\n  } else if (code == 46 || (result.mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n    return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodesRight(view)\n  } else if (code == 13 || code == 27) { // Enter, Esc\n    return true\n  } else if (code == 37) { // Left arrow\n    return selectHorizontally(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 39) { // Right arrow\n    return selectHorizontally(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (code == 38) { // Up arrow\n    return selectVertically(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 40) { // Down arrow\n    return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (mods == (result.mac ? \"m\" : \"c\") &&\n             (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n    return true\n  }\n  return false\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\n\nfunction parseBetween(view, from_, to_) {\n  var ref = view.docView.parseRange(from_, to_);\n  var parent = ref.node;\n  var fromOffset = ref.fromOffset;\n  var toOffset = ref.toOffset;\n  var from = ref.from;\n  var to = ref.to;\n\n  var domSel = view.root.getSelection(), find = null, anchor = domSel.anchorNode;\n  if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n    find = [{node: anchor, offset: domSel.anchorOffset}];\n    if (!selectionCollapsed(domSel))\n      { find.push({node: domSel.focusNode, offset: domSel.focusOffset}); }\n  }\n  // Work around issue in Chrome where backspacing sometimes replaces\n  // the deleted content with a random BR node (issues #799, #831)\n  if (result.chrome && view.lastKeyCode === 8) {\n    for (var off = toOffset; off > fromOffset; off--) {\n      var node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n      if (node.nodeName == \"BR\" && !desc) { toOffset = off; break }\n      if (!desc || desc.size) { break }\n    }\n  }\n  var startDoc = view.state.doc;\n  var parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n  var $from = startDoc.resolve(from);\n\n  var sel = null, doc = parser.parse(parent, {\n    topNode: $from.parent,\n    topMatch: $from.parent.contentMatchAt($from.index()),\n    topOpen: true,\n    from: fromOffset,\n    to: toOffset,\n    preserveWhitespace: $from.parent.type.spec.code ? \"full\" : true,\n    editableContent: true,\n    findPositions: find,\n    ruleFromNode: ruleFromNode,\n    context: $from\n  });\n  if (find && find[0].pos != null) {\n    var anchor$1 = find[0].pos, head = find[1] && find[1].pos;\n    if (head == null) { head = anchor$1; }\n    sel = {anchor: anchor$1 + from, head: head + from};\n  }\n  return {doc: doc, sel: sel, from: from, to: to}\n}\n\nfunction ruleFromNode(dom) {\n  var desc = dom.pmViewDesc;\n  if (desc) {\n    return desc.parseRule()\n  } else if (dom.nodeName == \"BR\" && dom.parentNode) {\n    // Safari replaces the list item or table cell with a BR\n    // directly in the list node (?!) if you delete the last\n    // character in a list item or table cell (#708, #862)\n    if (result.safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n      var skip = document.createElement(\"div\");\n      skip.appendChild(document.createElement(\"li\"));\n      return {skip: skip}\n    } else if (dom.parentNode.lastChild == dom || result.safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n      return {ignore: true}\n    }\n  } else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n    return {ignore: true}\n  }\n}\n\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n  if (from < 0) {\n    var origin = view.lastSelectionTime > Date.now() - 50 ? view.lastSelectionOrigin : null;\n    var newSel = selectionFromDOM(view, origin);\n    if (newSel && !view.state.selection.eq(newSel)) {\n      var tr$1 = view.state.tr.setSelection(newSel);\n      if (origin == \"pointer\") { tr$1.setMeta(\"pointer\", true); }\n      else if (origin == \"key\") { tr$1.scrollIntoView(); }\n      view.dispatch(tr$1);\n    }\n    return\n  }\n\n  var $before = view.state.doc.resolve(from);\n  var shared = $before.sharedDepth(to);\n  from = $before.before(shared + 1);\n  to = view.state.doc.resolve(to).after(shared + 1);\n\n  var sel = view.state.selection;\n  var parse = parseBetween(view, from, to);\n  // Chrome sometimes leaves the cursor before the inserted text when\n  // composing after a cursor wrapper. This moves it forward.\n  if (result.chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from) {\n    var text = view.cursorWrapper.deco.type.toDOM.nextSibling;\n    var size = text && text.nodeValue ? text.nodeValue.length : 1;\n    parse.sel = {anchor: parse.sel.anchor + size, head: parse.sel.anchor + size};\n  }\n\n  var doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n  var preferredPos, preferredSide;\n  // Prefer anchoring to end when Backspace is pressed\n  if (view.lastKeyCode === 8 && Date.now() - 100 < view.lastKeyCodeTime) {\n    preferredPos = view.state.selection.to;\n    preferredSide = \"end\";\n  } else {\n    preferredPos = view.state.selection.from;\n    preferredSide = \"start\";\n  }\n  view.lastKeyCode = null;\n\n  var change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n  if (!change) {\n    if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n        !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n      change = {start: sel.from, endA: sel.to, endB: sel.to};\n    } else if ((result.ios && view.lastIOSEnter > Date.now() - 225 || result.android) &&\n               addedNodes.some(function (n) { return n.nodeName == \"DIV\" || n.nodeName == \"P\"; }) &&\n               view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); })) {\n      view.lastIOSEnter = 0;\n      return\n    } else {\n      if (parse.sel) {\n        var sel$1 = resolveSelection(view, view.state.doc, parse.sel);\n        if (sel$1 && !sel$1.eq(view.state.selection)) { view.dispatch(view.state.tr.setSelection(sel$1)); }\n      }\n      return\n    }\n  }\n  view.domChangeCount++;\n  // Handle the case where overwriting a selection by typing matches\n  // the start or end of the selected content, creating a change\n  // that's smaller than what was actually overwritten.\n  if (view.state.selection.from < view.state.selection.to &&\n      change.start == change.endB &&\n      view.state.selection instanceof TextSelection) {\n    if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2) {\n      change.start = view.state.selection.from;\n    } else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2) {\n      change.endB += (view.state.selection.to - change.endA);\n      change.endA = view.state.selection.to;\n    }\n  }\n\n  // IE11 will insert a non-breaking space _ahead_ of the space after\n  // the cursor space when adding a space before another space. When\n  // that happened, adjust the change to cover the space instead.\n  if (result.ie && result.ie_version <= 11 && change.endB == change.start + 1 &&\n      change.endA == change.start && change.start > parse.from &&\n      parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n    change.start--;\n    change.endA--;\n    change.endB--;\n  }\n\n  var $from = parse.doc.resolveNoCache(change.start - parse.from);\n  var $to = parse.doc.resolveNoCache(change.endB - parse.from);\n  var inlineChange = $from.sameParent($to) && $from.parent.inlineContent;\n  var nextSel;\n  // If this looks like the effect of pressing Enter (or was recorded\n  // as being an iOS enter press), just dispatch an Enter key instead.\n  if (((result.ios && view.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(function (n) { return n.nodeName == \"DIV\" || n.nodeName == \"P\"; }))) ||\n       (!inlineChange && $from.pos < parse.doc.content.size &&\n        (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n        nextSel.head == $to.pos)) &&\n      view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); })) {\n    view.lastIOSEnter = 0;\n    return\n  }\n  // Same for backspace\n  if (view.state.selection.anchor > change.start &&\n      looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n      view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(8, \"Backspace\")); })) {\n    if (result.android && result.chrome) { view.domObserver.suppressSelectionUpdates(); } // #820\n    return\n  }\n\n  // Chrome Android will occasionally, during composition, delete the\n  // entire composition and then immediately insert it again. This is\n  // used to detect that situation.\n  if (result.chrome && result.android && change.toB == change.from)\n    { view.lastAndroidDelete = Date.now(); }\n\n  // This tries to detect Android virtual keyboard\n  // enter-and-pick-suggestion action. That sometimes (see issue\n  // #1059) first fires a DOM mutation, before moving the selection to\n  // the newly created block. And then, because ProseMirror cleans up\n  // the DOM selection, it gives up moving the selection entirely,\n  // leaving the cursor in the wrong place. When that happens, we drop\n  // the new paragraph from the initial change, and fire a simulated\n  // enter key afterwards.\n  if (result.android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n      parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n    change.endB -= 2;\n    $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    setTimeout(function () {\n      view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n    }, 20);\n  }\n\n  var chFrom = change.start, chTo = change.endA;\n\n  var tr, storedMarks, markChange, $from1;\n  if (inlineChange) {\n    if ($from.pos == $to.pos) { // Deletion\n      // IE11 sometimes weirdly moves the DOM selection around after\n      // backspacing out the first element in a textblock\n      if (result.ie && result.ie_version <= 11 && $from.parentOffset == 0) {\n        view.domObserver.suppressSelectionUpdates();\n        setTimeout(function () { return selectionToDOM(view); }, 20);\n      }\n      tr = view.state.tr.delete(chFrom, chTo);\n      storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n    } else if ( // Adding or removing a mark\n      change.endA == change.endB && ($from1 = doc.resolve(change.start)) &&\n      (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset),\n                                 $from1.parent.content.cut($from1.parentOffset, change.endA - $from1.start())))\n    ) {\n      tr = view.state.tr;\n      if (markChange.type == \"add\") { tr.addMark(chFrom, chTo, markChange.mark); }\n      else { tr.removeMark(chFrom, chTo, markChange.mark); }\n    } else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n      // Both positions in the same text node -- simply insert text\n      var text$1 = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n      if (view.someProp(\"handleTextInput\", function (f) { return f(view, chFrom, chTo, text$1); })) { return }\n      tr = view.state.tr.insertText(text$1, chFrom, chTo);\n    }\n  }\n\n  if (!tr)\n    { tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from)); }\n  if (parse.sel) {\n    var sel$2 = resolveSelection(view, tr.doc, parse.sel);\n    // Chrome Android will sometimes, during composition, report the\n    // selection in the wrong place. If it looks like that is\n    // happening, don't update the selection.\n    // Edge just doesn't move the cursor forward when you start typing\n    // in an empty block or between br nodes.\n    if (sel$2 && !(result.chrome && result.android && view.composing && sel$2.empty &&\n                 (change.start != change.endB || view.lastAndroidDelete < Date.now() - 100) &&\n                 (sel$2.head == chFrom || sel$2.head == tr.mapping.map(chTo) - 1) ||\n                 result.ie && sel$2.empty && sel$2.head == chFrom))\n      { tr.setSelection(sel$2); }\n  }\n  if (storedMarks) { tr.ensureMarks(storedMarks); }\n  view.dispatch(tr.scrollIntoView());\n}\n\nfunction resolveSelection(view, doc, parsedSel) {\n  if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size) { return null }\n  return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head))\n}\n\n// : (Fragment, Fragment) → ?{mark: Mark, type: string}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n  var curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n  var added = curMarks, removed = prevMarks, type, mark, update;\n  for (var i = 0; i < prevMarks.length; i++) { added = prevMarks[i].removeFromSet(added); }\n  for (var i$1 = 0; i$1 < curMarks.length; i$1++) { removed = curMarks[i$1].removeFromSet(removed); }\n  if (added.length == 1 && removed.length == 0) {\n    mark = added[0];\n    type = \"add\";\n    update = function (node) { return node.mark(mark.addToSet(node.marks)); };\n  } else if (added.length == 0 && removed.length == 1) {\n    mark = removed[0];\n    type = \"remove\";\n    update = function (node) { return node.mark(mark.removeFromSet(node.marks)); };\n  } else {\n    return null\n  }\n  var updated = [];\n  for (var i$2 = 0; i$2 < prev.childCount; i$2++) { updated.push(update(prev.child(i$2))); }\n  if (Fragment.from(updated).eq(cur)) { return {mark: mark, type: type} }\n}\n\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n  if (!$newStart.parent.isTextblock ||\n      // The content must have shrunk\n      end - start <= $newEnd.pos - $newStart.pos ||\n      // newEnd must point directly at or after the end of the block that newStart points into\n      skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n    { return false }\n\n  var $start = old.resolve(start);\n  // Start must be at the end of a block\n  if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n    { return false }\n  var $next = old.resolve(skipClosingAndOpening($start, true, true));\n  // The next textblock must start before end and end near it\n  if (!$next.parent.isTextblock || $next.pos > end ||\n      skipClosingAndOpening($next, true, false) < end)\n    { return false }\n\n  // The fragments after the join point must match\n  return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content)\n}\n\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n  var depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n  while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n    depth--;\n    end++;\n    fromEnd = false;\n  }\n  if (mayOpen) {\n    var next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n    while (next && !next.isLeaf) {\n      next = next.firstChild;\n      end++;\n    }\n  }\n  return end\n}\n\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n  var start = a.findDiffStart(b, pos);\n  if (start == null) { return null }\n  var ref = a.findDiffEnd(b, pos + a.size, pos + b.size);\n  var endA = ref.a;\n  var endB = ref.b;\n  if (preferredSide == \"end\") {\n    var adjust = Math.max(0, start - Math.min(endA, endB));\n    preferredPos -= endA + adjust - start;\n  }\n  if (endA < start && a.size < b.size) {\n    var move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n    start -= move;\n    endB = start + (endB - endA);\n    endA = start;\n  } else if (endB < start) {\n    var move$1 = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n    start -= move$1;\n    endA = start + (endA - endB);\n    endB = start;\n  }\n  return {start: start, endA: endA, endB: endB}\n}\n\nfunction serializeForClipboard(view, slice) {\n  var context = [];\n  var content = slice.content;\n  var openStart = slice.openStart;\n  var openEnd = slice.openEnd;\n  while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n    openStart--;\n    openEnd--;\n    var node = content.firstChild;\n    context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n    content = node.content;\n  }\n\n  var serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n  var doc = detachedDoc(), wrap = doc.createElement(\"div\");\n  wrap.appendChild(serializer.serializeFragment(content, {document: doc}));\n\n  var firstChild = wrap.firstChild, needsWrap;\n  while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n    for (var i = needsWrap.length - 1; i >= 0; i--) {\n      var wrapper = doc.createElement(needsWrap[i]);\n      while (wrap.firstChild) { wrapper.appendChild(wrap.firstChild); }\n      wrap.appendChild(wrapper);\n      if (needsWrap[i] != \"tbody\") {\n        openStart++;\n        openEnd++;\n      }\n    }\n    firstChild = wrap.firstChild;\n  }\n\n  if (firstChild && firstChild.nodeType == 1)\n    { firstChild.setAttribute(\"data-pm-slice\", (openStart + \" \" + openEnd + \" \" + (JSON.stringify(context)))); }\n\n  var text = view.someProp(\"clipboardTextSerializer\", function (f) { return f(slice); }) ||\n      slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n\n  return {dom: wrap, text: text}\n}\n\n// : (EditorView, string, string, ?bool, ResolvedPos) → ?Slice\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n  var dom, inCode = $context.parent.type.spec.code, slice;\n  if (!html && !text) { return null }\n  var asText = text && (plainText || inCode || !html);\n  if (asText) {\n    view.someProp(\"transformPastedText\", function (f) { text = f(text, inCode || plainText); });\n    if (inCode) { return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty }\n    var parsed = view.someProp(\"clipboardTextParser\", function (f) { return f(text, $context, plainText); });\n    if (parsed) {\n      slice = parsed;\n    } else {\n      var marks = $context.marks();\n      var ref = view.state;\n      var schema = ref.schema;\n      var serializer = DOMSerializer.fromSchema(schema);\n      dom = document.createElement(\"div\");\n      text.split(/(?:\\r\\n?|\\n)+/).forEach(function (block) {\n        var p = dom.appendChild(document.createElement(\"p\"));\n        if (block) { p.appendChild(serializer.serializeNode(schema.text(block, marks))); }\n      });\n    }\n  } else {\n    view.someProp(\"transformPastedHTML\", function (f) { html = f(html); });\n    dom = readHTML(html);\n    if (result.webkit) { restoreReplacedSpaces(dom); }\n  }\n\n  var contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n  var sliceData = contextNode && /^(\\d+) (\\d+) (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\"));\n  if (!slice) {\n    var parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    slice = parser.parseSlice(dom, {preserveWhitespace: !!(asText || sliceData), context: $context});\n  }\n  if (sliceData) {\n    slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[3]);\n  } else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n    slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n    if (slice.openStart || slice.openEnd) {\n      var openStart = 0, openEnd = 0;\n      for (var node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating;\n           openStart++, node = node.firstChild) {}\n      for (var node$1 = slice.content.lastChild; openEnd < slice.openEnd && !node$1.type.spec.isolating;\n           openEnd++, node$1 = node$1.lastChild) {}\n      slice = closeSlice(slice, openStart, openEnd);\n    }\n  }\n\n  view.someProp(\"transformPasted\", function (f) { slice = f(slice); });\n  return slice\n}\n\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n  if (fragment.childCount < 2) { return fragment }\n  var loop = function ( d ) {\n    var parent = $context.node(d);\n    var match = parent.contentMatchAt($context.index(d));\n    var lastWrap = (void 0), result = [];\n    fragment.forEach(function (node) {\n      if (!result) { return }\n      var wrap = match.findWrapping(node.type), inLast;\n      if (!wrap) { return result = null }\n      if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n        result[result.length - 1] = inLast;\n      } else {\n        if (result.length) { result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length); }\n        var wrapped = withWrappers(node, wrap);\n        result.push(wrapped);\n        match = match.matchType(wrapped.type, wrapped.attrs);\n        lastWrap = wrap;\n      }\n    });\n    if (result) { return { v: Fragment.from(result) } }\n  };\n\n  for (var d = $context.depth; d >= 0; d--) {\n    var returned = loop( d );\n\n    if ( returned ) return returned.v;\n  }\n  return fragment\n}\n\nfunction withWrappers(node, wrap, from) {\n  if ( from === void 0 ) from = 0;\n\n  for (var i = wrap.length - 1; i >= from; i--)\n    { node = wrap[i].create(null, Fragment.from(node)); }\n  return node\n}\n\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n  if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n    var inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n    if (inner) { return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner)) }\n    var match = sibling.contentMatchAt(sibling.childCount);\n    if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n      { return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1)))) }\n  }\n}\n\nfunction closeRight(node, depth) {\n  if (depth == 0) { return node }\n  var fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n  var fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n  return node.copy(fragment.append(fill))\n}\n\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n  var node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n  if (depth < to - 1) { inner = closeRange(inner, side, from, to, depth + 1, openEnd); }\n  if (depth >= from)\n    { inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, fragment.childCount > 1 || openEnd <= depth).append(inner)\n      : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true)); }\n  return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner))\n}\n\nfunction closeSlice(slice, openStart, openEnd) {\n  if (openStart < slice.openStart)\n    { slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd); }\n  if (openEnd < slice.openEnd)\n    { slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd); }\n  return slice\n}\n\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nvar wrapMap = {\n  thead: [\"table\"],\n  tbody: [\"table\"],\n  tfoot: [\"table\"],\n  caption: [\"table\"],\n  colgroup: [\"table\"],\n  col: [\"table\", \"colgroup\"],\n  tr: [\"table\", \"tbody\"],\n  td: [\"table\", \"tbody\", \"tr\"],\n  th: [\"table\", \"tbody\", \"tr\"]\n};\n\nvar _detachedDoc = null;\nfunction detachedDoc() {\n  return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"))\n}\n\nfunction readHTML(html) {\n  var metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n  if (metas) { html = html.slice(metas[0].length); }\n  var elt = detachedDoc().createElement(\"div\");\n  var firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n  if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n    { html = wrap.map(function (n) { return \"<\" + n + \">\"; }).join(\"\") + html + wrap.map(function (n) { return \"</\" + n + \">\"; }).reverse().join(\"\"); }\n  elt.innerHTML = html;\n  if (wrap) { for (var i = 0; i < wrap.length; i++) { elt = elt.querySelector(wrap[i]) || elt; } }\n  return elt\n}\n\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n  var nodes = dom.querySelectorAll(result.chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n      { node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node); }\n  }\n}\n\nfunction addContext(slice, context) {\n  if (!slice.size) { return slice }\n  var schema = slice.content.firstChild.type.schema, array;\n  try { array = JSON.parse(context); }\n  catch(e) { return slice }\n  var content = slice.content;\n  var openStart = slice.openStart;\n  var openEnd = slice.openEnd;\n  for (var i = array.length - 2; i >= 0; i -= 2) {\n    var type = schema.nodes[array[i]];\n    if (!type || type.hasRequiredAttrs()) { break }\n    content = Fragment.from(type.create(array[i + 1], content));\n    openStart++; openEnd++;\n  }\n  return new Slice(content, openStart, openEnd)\n}\n\nvar observeOptions = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  attributes: true,\n  attributeOldValue: true,\n  subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nvar useCharData = result.ie && result.ie_version <= 11;\n\nvar SelectionState = function SelectionState() {\n  this.anchorNode = this.anchorOffset = this.focusNode = this.focusOffset = null;\n};\n\nSelectionState.prototype.set = function set (sel) {\n  this.anchorNode = sel.anchorNode; this.anchorOffset = sel.anchorOffset;\n  this.focusNode = sel.focusNode; this.focusOffset = sel.focusOffset;\n};\n\nSelectionState.prototype.eq = function eq (sel) {\n  return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n    sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset\n};\n\nvar DOMObserver = function DOMObserver(view, handleDOMChange) {\n  var this$1 = this;\n\n  this.view = view;\n  this.handleDOMChange = handleDOMChange;\n  this.queue = [];\n  this.flushingSoon = -1;\n  this.observer = window.MutationObserver &&\n    new window.MutationObserver(function (mutations) {\n      for (var i = 0; i < mutations.length; i++) { this$1.queue.push(mutations[i]); }\n      // IE11 will sometimes (on backspacing out a single character\n      // text node after a BR node) call the observer callback\n      // before actually updating the DOM, which will cause\n      // ProseMirror to miss the change (see #930)\n      if (result.ie && result.ie_version <= 11 && mutations.some(\n        function (m) { return m.type == \"childList\" && m.removedNodes.length ||\n             m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length; }))\n        { this$1.flushSoon(); }\n      else\n        { this$1.flush(); }\n    });\n  this.currentSelection = new SelectionState;\n  if (useCharData) {\n    this.onCharData = function (e) {\n      this$1.queue.push({target: e.target, type: \"characterData\", oldValue: e.prevValue});\n      this$1.flushSoon();\n    };\n  }\n  this.onSelectionChange = this.onSelectionChange.bind(this);\n  this.suppressingSelectionUpdates = false;\n};\n\nDOMObserver.prototype.flushSoon = function flushSoon () {\n    var this$1 = this;\n\n  if (this.flushingSoon < 0)\n    { this.flushingSoon = window.setTimeout(function () { this$1.flushingSoon = -1; this$1.flush(); }, 20); }\n};\n\nDOMObserver.prototype.forceFlush = function forceFlush () {\n  if (this.flushingSoon > -1) {\n    window.clearTimeout(this.flushingSoon);\n    this.flushingSoon = -1;\n    this.flush();\n  }\n};\n\nDOMObserver.prototype.start = function start () {\n  if (this.observer)\n    { this.observer.observe(this.view.dom, observeOptions); }\n  if (useCharData)\n    { this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData); }\n  this.connectSelection();\n};\n\nDOMObserver.prototype.stop = function stop () {\n    var this$1 = this;\n\n  if (this.observer) {\n    var take = this.observer.takeRecords();\n    if (take.length) {\n      for (var i = 0; i < take.length; i++) { this.queue.push(take[i]); }\n      window.setTimeout(function () { return this$1.flush(); }, 20);\n    }\n    this.observer.disconnect();\n  }\n  if (useCharData) { this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData); }\n  this.disconnectSelection();\n};\n\nDOMObserver.prototype.connectSelection = function connectSelection () {\n  this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n};\n\nDOMObserver.prototype.disconnectSelection = function disconnectSelection () {\n  this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n};\n\nDOMObserver.prototype.suppressSelectionUpdates = function suppressSelectionUpdates () {\n    var this$1 = this;\n\n  this.suppressingSelectionUpdates = true;\n  setTimeout(function () { return this$1.suppressingSelectionUpdates = false; }, 50);\n};\n\nDOMObserver.prototype.onSelectionChange = function onSelectionChange () {\n  if (!hasFocusAndSelection(this.view)) { return }\n  if (this.suppressingSelectionUpdates) { return selectionToDOM(this.view) }\n  // Deletions on IE11 fire their events in the wrong order, giving\n  // us a selection change event before the DOM changes are\n  // reported.\n  if (result.ie && result.ie_version <= 11 && !this.view.state.selection.empty) {\n    var sel = this.view.root.getSelection();\n    // Selection.isCollapsed isn't reliable on IE\n    if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n      { return this.flushSoon() }\n  }\n  this.flush();\n};\n\nDOMObserver.prototype.setCurSelection = function setCurSelection () {\n  this.currentSelection.set(this.view.root.getSelection());\n};\n\nDOMObserver.prototype.ignoreSelectionChange = function ignoreSelectionChange (sel) {\n  if (sel.rangeCount == 0) { return true }\n  var container = sel.getRangeAt(0).commonAncestorContainer;\n  var desc = this.view.docView.nearestDesc(container);\n  if (desc && desc.ignoreMutation({type: \"selection\", target: container.nodeType == 3 ? container.parentNode : container})) {\n    this.setCurSelection();\n    return true\n  }\n};\n\nDOMObserver.prototype.flush = function flush () {\n  if (!this.view.docView || this.flushingSoon > -1) { return }\n  var mutations = this.observer ? this.observer.takeRecords() : [];\n  if (this.queue.length) {\n    mutations = this.queue.concat(mutations);\n    this.queue.length = 0;\n  }\n\n  var sel = this.view.root.getSelection();\n  var newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasSelection(this.view) && !this.ignoreSelectionChange(sel);\n\n  var from = -1, to = -1, typeOver = false, added = [];\n  if (this.view.editable) {\n    for (var i = 0; i < mutations.length; i++) {\n      var result$1 = this.registerMutation(mutations[i], added);\n      if (result$1) {\n        from = from < 0 ? result$1.from : Math.min(result$1.from, from);\n        to = to < 0 ? result$1.to : Math.max(result$1.to, to);\n        if (result$1.typeOver) { typeOver = true; }\n      }\n    }\n  }\n\n  if (result.gecko && added.length > 1) {\n    var brs = added.filter(function (n) { return n.nodeName == \"BR\"; });\n    if (brs.length == 2) {\n      var a = brs[0];\n        var b = brs[1];\n      if (a.parentNode && a.parentNode.parentNode == b.parentNode) { b.remove(); }\n      else { a.remove(); }\n    }\n  }\n\n  if (from > -1 || newSel) {\n    if (from > -1) {\n      this.view.docView.markDirty(from, to);\n      checkCSS(this.view);\n    }\n    this.handleDOMChange(from, to, typeOver, added);\n    if (this.view.docView.dirty) { this.view.updateState(this.view.state); }\n    else if (!this.currentSelection.eq(sel)) { selectionToDOM(this.view); }\n    this.currentSelection.set(sel);\n  }\n};\n\nDOMObserver.prototype.registerMutation = function registerMutation (mut, added) {\n  // Ignore mutations inside nodes that were already noted as inserted\n  if (added.indexOf(mut.target) > -1) { return null }\n  var desc = this.view.docView.nearestDesc(mut.target);\n  if (mut.type == \"attributes\" &&\n      (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n       // Firefox sometimes fires spurious events for null/empty styles\n       (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n    { return null }\n  if (!desc || desc.ignoreMutation(mut)) { return null }\n\n  if (mut.type == \"childList\") {\n    for (var i = 0; i < mut.addedNodes.length; i++) { added.push(mut.addedNodes[i]); }\n    if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n      { return {from: desc.posBefore, to: desc.posAfter} }\n    var prev = mut.previousSibling, next = mut.nextSibling;\n    if (result.ie && result.ie_version <= 11 && mut.addedNodes.length) {\n      // IE11 gives us incorrect next/prev siblings for some\n      // insertions, so if there are added nodes, recompute those\n      for (var i$1 = 0; i$1 < mut.addedNodes.length; i$1++) {\n        var ref = mut.addedNodes[i$1];\n          var previousSibling = ref.previousSibling;\n          var nextSibling = ref.nextSibling;\n        if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0) { prev = previousSibling; }\n        if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0) { next = nextSibling; }\n      }\n    }\n    var fromOffset = prev && prev.parentNode == mut.target\n        ? domIndex(prev) + 1 : 0;\n    var from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n    var toOffset = next && next.parentNode == mut.target\n        ? domIndex(next) : mut.target.childNodes.length;\n    var to = desc.localPosFromDOM(mut.target, toOffset, 1);\n    return {from: from, to: to}\n  } else if (mut.type == \"attributes\") {\n    return {from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border}\n  } else { // \"characterData\"\n    return {\n      from: desc.posAtStart,\n      to: desc.posAtEnd,\n      // An event was generated for a text change that didn't change\n      // any text. Mark the dom change to fall back to assuming the\n      // selection was typed over with an identical value if it can't\n      // find another change.\n      typeOver: mut.target.nodeValue == mut.oldValue\n    }\n  }\n};\n\nvar cssChecked = false;\n\nfunction checkCSS(view) {\n  if (cssChecked) { return }\n  cssChecked = true;\n  if (getComputedStyle(view.dom).whiteSpace == \"normal\")\n    { console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\"); }\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nvar handlers = {}, editHandlers = {};\n\nfunction initInput(view) {\n  view.shiftKey = false;\n  view.mouseDown = null;\n  view.lastKeyCode = null;\n  view.lastKeyCodeTime = 0;\n  view.lastClick = {time: 0, x: 0, y: 0, type: \"\"};\n  view.lastSelectionOrigin = null;\n  view.lastSelectionTime = 0;\n\n  view.lastIOSEnter = 0;\n  view.lastIOSEnterFallbackTimeout = null;\n  view.lastAndroidDelete = 0;\n\n  view.composing = false;\n  view.composingTimeout = null;\n  view.compositionNodes = [];\n  view.compositionEndedAt = -2e8;\n\n  view.domObserver = new DOMObserver(view, function (from, to, typeOver, added) { return readDOMChange(view, from, to, typeOver, added); });\n  view.domObserver.start();\n  // Used by hacks like the beforeinput handler to check whether anything happened in the DOM\n  view.domChangeCount = 0;\n\n  view.eventHandlers = Object.create(null);\n  var loop = function ( event ) {\n    var handler = handlers[event];\n    view.dom.addEventListener(event, view.eventHandlers[event] = function (event) {\n      if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n          (view.editable || !(event.type in editHandlers)))\n        { handler(view, event); }\n    });\n  };\n\n  for (var event in handlers) loop( event );\n  // On Safari, for reasons beyond my understanding, adding an input\n  // event handler makes an issue where the composition vanishes when\n  // you press enter go away.\n  if (result.safari) { view.dom.addEventListener(\"input\", function () { return null; }); }\n\n  ensureListeners(view);\n}\n\nfunction setSelectionOrigin(view, origin) {\n  view.lastSelectionOrigin = origin;\n  view.lastSelectionTime = Date.now();\n}\n\nfunction destroyInput(view) {\n  view.domObserver.stop();\n  for (var type in view.eventHandlers)\n    { view.dom.removeEventListener(type, view.eventHandlers[type]); }\n  clearTimeout(view.composingTimeout);\n  clearTimeout(view.lastIOSEnterFallbackTimeout);\n}\n\nfunction ensureListeners(view) {\n  view.someProp(\"handleDOMEvents\", function (currentHandlers) {\n    for (var type in currentHandlers) { if (!view.eventHandlers[type])\n      { view.dom.addEventListener(type, view.eventHandlers[type] = function (event) { return runCustomHandler(view, event); }); } }\n  });\n}\n\nfunction runCustomHandler(view, event) {\n  return view.someProp(\"handleDOMEvents\", function (handlers) {\n    var handler = handlers[event.type];\n    return handler ? handler(view, event) || event.defaultPrevented : false\n  })\n}\n\nfunction eventBelongsToView(view, event) {\n  if (!event.bubbles) { return true }\n  if (event.defaultPrevented) { return false }\n  for (var node = event.target; node != view.dom; node = node.parentNode)\n    { if (!node || node.nodeType == 11 ||\n        (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n      { return false } }\n  return true\n}\n\nfunction dispatchEvent(view, event) {\n  if (!runCustomHandler(view, event) && handlers[event.type] &&\n      (view.editable || !(event.type in editHandlers)))\n    { handlers[event.type](view, event); }\n}\n\neditHandlers.keydown = function (view, event) {\n  view.shiftKey = event.keyCode == 16 || event.shiftKey;\n  if (inOrNearComposition(view, event)) { return }\n  if (event.keyCode != 229) { view.domObserver.forceFlush(); }\n  view.lastKeyCode = event.keyCode;\n  view.lastKeyCodeTime = Date.now();\n  // On iOS, if we preventDefault enter key presses, the virtual\n  // keyboard gets confused. So the hack here is to set a flag that\n  // makes the DOM change code recognize that what just happens should\n  // be replaced by whatever the Enter key handlers do.\n  if (result.ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n    var now = Date.now();\n    view.lastIOSEnter = now;\n    view.lastIOSEnterFallbackTimeout = setTimeout(function () {\n      if (view.lastIOSEnter == now) {\n        view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        view.lastIOSEnter = 0;\n      }\n    }, 200);\n  } else if (view.someProp(\"handleKeyDown\", function (f) { return f(view, event); }) || captureKeyDown(view, event)) {\n    event.preventDefault();\n  } else {\n    setSelectionOrigin(view, \"key\");\n  }\n};\n\neditHandlers.keyup = function (view, e) {\n  if (e.keyCode == 16) { view.shiftKey = false; }\n};\n\neditHandlers.keypress = function (view, event) {\n  if (inOrNearComposition(view, event) || !event.charCode ||\n      event.ctrlKey && !event.altKey || result.mac && event.metaKey) { return }\n\n  if (view.someProp(\"handleKeyPress\", function (f) { return f(view, event); })) {\n    event.preventDefault();\n    return\n  }\n\n  var sel = view.state.selection;\n  if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n    var text = String.fromCharCode(event.charCode);\n    if (!view.someProp(\"handleTextInput\", function (f) { return f(view, sel.$from.pos, sel.$to.pos, text); }))\n      { view.dispatch(view.state.tr.insertText(text).scrollIntoView()); }\n    event.preventDefault();\n  }\n};\n\nfunction eventCoords(event) { return {left: event.clientX, top: event.clientY} }\n\nfunction isNear(event, click) {\n  var dx = click.x - event.clientX, dy = click.y - event.clientY;\n  return dx * dx + dy * dy < 100\n}\n\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n  if (inside == -1) { return false }\n  var $pos = view.state.doc.resolve(inside);\n  var loop = function ( i ) {\n    if (view.someProp(propName, function (f) { return i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n                                                    : f(view, pos, $pos.node(i), $pos.before(i), event, false); }))\n      { return { v: true } }\n  };\n\n  for (var i = $pos.depth + 1; i > 0; i--) {\n    var returned = loop( i );\n\n    if ( returned ) return returned.v;\n  }\n  return false\n}\n\nfunction updateSelection(view, selection, origin) {\n  if (!view.focused) { view.focus(); }\n  var tr = view.state.tr.setSelection(selection);\n  if (origin == \"pointer\") { tr.setMeta(\"pointer\", true); }\n  view.dispatch(tr);\n}\n\nfunction selectClickedLeaf(view, inside) {\n  if (inside == -1) { return false }\n  var $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n  if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n    updateSelection(view, new NodeSelection($pos), \"pointer\");\n    return true\n  }\n  return false\n}\n\nfunction selectClickedNode(view, inside) {\n  if (inside == -1) { return false }\n  var sel = view.state.selection, selectedNode, selectAt;\n  if (sel instanceof NodeSelection) { selectedNode = sel.node; }\n\n  var $pos = view.state.doc.resolve(inside);\n  for (var i = $pos.depth + 1; i > 0; i--) {\n    var node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n    if (NodeSelection.isSelectable(node)) {\n      if (selectedNode && sel.$from.depth > 0 &&\n          i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n        { selectAt = $pos.before(sel.$from.depth); }\n      else\n        { selectAt = $pos.before(i); }\n      break\n    }\n  }\n\n  if (selectAt != null) {\n    updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n  return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleClick\", function (f) { return f(view, pos, event); }) ||\n    (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside))\n}\n\nfunction handleDoubleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleDoubleClick\", function (f) { return f(view, pos, event); })\n}\n\nfunction handleTripleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleTripleClick\", function (f) { return f(view, pos, event); }) ||\n    defaultTripleClick(view, inside, event)\n}\n\nfunction defaultTripleClick(view, inside, event) {\n  if (event.button != 0) { return false }\n  var doc = view.state.doc;\n  if (inside == -1) {\n    if (doc.inlineContent) {\n      updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n      return true\n    }\n    return false\n  }\n\n  var $pos = doc.resolve(inside);\n  for (var i = $pos.depth + 1; i > 0; i--) {\n    var node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n    var nodePos = $pos.before(i);\n    if (node.inlineContent)\n      { updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\"); }\n    else if (NodeSelection.isSelectable(node))\n      { updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\"); }\n    else\n      { continue }\n    return true\n  }\n}\n\nfunction forceDOMFlush(view) {\n  return endComposition(view)\n}\n\nvar selectNodeModifier = result.mac ? \"metaKey\" : \"ctrlKey\";\n\nhandlers.mousedown = function (view, event) {\n  view.shiftKey = event.shiftKey;\n  var flushed = forceDOMFlush(view);\n  var now = Date.now(), type = \"singleClick\";\n  if (now - view.lastClick.time < 500 && isNear(event, view.lastClick) && !event[selectNodeModifier]) {\n    if (view.lastClick.type == \"singleClick\") { type = \"doubleClick\"; }\n    else if (view.lastClick.type == \"doubleClick\") { type = \"tripleClick\"; }\n  }\n  view.lastClick = {time: now, x: event.clientX, y: event.clientY, type: type};\n\n  var pos = view.posAtCoords(eventCoords(event));\n  if (!pos) { return }\n\n  if (type == \"singleClick\") {\n    if (view.mouseDown) { view.mouseDown.done(); }\n    view.mouseDown = new MouseDown(view, pos, event, flushed);\n  } else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n    event.preventDefault();\n  } else {\n    setSelectionOrigin(view, \"pointer\");\n  }\n};\n\nvar MouseDown = function MouseDown(view, pos, event, flushed) {\n  var this$1 = this;\n\n  this.view = view;\n  this.startDoc = view.state.doc;\n  this.pos = pos;\n  this.event = event;\n  this.flushed = flushed;\n  this.selectNode = event[selectNodeModifier];\n  this.allowDefault = event.shiftKey;\n  this.delayedSelectionSync = false;\n\n  var targetNode, targetPos;\n  if (pos.inside > -1) {\n    targetNode = view.state.doc.nodeAt(pos.inside);\n    targetPos = pos.inside;\n  } else {\n    var $pos = view.state.doc.resolve(pos.pos);\n    targetNode = $pos.parent;\n    targetPos = $pos.depth ? $pos.before() : 0;\n  }\n\n  this.mightDrag = null;\n\n  var target = flushed ? null : event.target;\n  var targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n  this.target = targetDesc ? targetDesc.dom : null;\n\n  var ref = view.state;\n  var selection = ref.selection;\n  if (event.button == 0 &&\n      targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n      selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n    { this.mightDrag = {node: targetNode,\n                      pos: targetPos,\n                      addAttr: this.target && !this.target.draggable,\n                      setUneditable: this.target && result.gecko && !this.target.hasAttribute(\"contentEditable\")}; }\n\n  if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n    this.view.domObserver.stop();\n    if (this.mightDrag.addAttr) { this.target.draggable = true; }\n    if (this.mightDrag.setUneditable)\n      { setTimeout(function () {\n        if (this$1.view.mouseDown == this$1) { this$1.target.setAttribute(\"contentEditable\", \"false\"); }\n      }, 20); }\n    this.view.domObserver.start();\n  }\n\n  view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n  view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n  setSelectionOrigin(view, \"pointer\");\n};\n\nMouseDown.prototype.done = function done () {\n    var this$1 = this;\n\n  this.view.root.removeEventListener(\"mouseup\", this.up);\n  this.view.root.removeEventListener(\"mousemove\", this.move);\n  if (this.mightDrag && this.target) {\n    this.view.domObserver.stop();\n    if (this.mightDrag.addAttr) { this.target.removeAttribute(\"draggable\"); }\n    if (this.mightDrag.setUneditable) { this.target.removeAttribute(\"contentEditable\"); }\n    this.view.domObserver.start();\n  }\n  if (this.delayedSelectionSync) { setTimeout(function () { return selectionToDOM(this$1.view); }); }\n  this.view.mouseDown = null;\n};\n\nMouseDown.prototype.up = function up (event) {\n  this.done();\n\n  if (!this.view.dom.contains(event.target.nodeType == 3 ? event.target.parentNode : event.target))\n    { return }\n\n  var pos = this.pos;\n  if (this.view.state.doc != this.startDoc) { pos = this.view.posAtCoords(eventCoords(event)); }\n\n  if (this.allowDefault || !pos) {\n    setSelectionOrigin(this.view, \"pointer\");\n  } else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n    event.preventDefault();\n  } else if (event.button == 0 &&\n             (this.flushed ||\n              // Safari ignores clicks on draggable elements\n              (result.safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n              // Chrome will sometimes treat a node selection as a\n              // cursor, but still report that the node is selected\n              // when asked through getSelection. You'll then get a\n              // situation where clicking at the point where that\n              // (hidden) cursor is doesn't change the selection, and\n              // thus doesn't get a reaction from ProseMirror. This\n              // works around that.\n              (result.chrome && !(this.view.state.selection instanceof TextSelection) &&\n               Math.min(Math.abs(pos.pos - this.view.state.selection.from),\n                        Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n    updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n    event.preventDefault();\n  } else {\n    setSelectionOrigin(this.view, \"pointer\");\n  }\n};\n\nMouseDown.prototype.move = function move (event) {\n  if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n                             Math.abs(this.event.y - event.clientY) > 4))\n    { this.allowDefault = true; }\n  setSelectionOrigin(this.view, \"pointer\");\n  if (event.buttons == 0) { this.done(); }\n};\n\nhandlers.touchdown = function (view) {\n  forceDOMFlush(view);\n  setSelectionOrigin(view, \"pointer\");\n};\n\nhandlers.contextmenu = function (view) { return forceDOMFlush(view); };\n\nfunction inOrNearComposition(view, event) {\n  if (view.composing) { return true }\n  // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n  // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n  // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n  // emitted. The keydown event triggers newline insertion, which we don't want.\n  // This method returns true if the keydown event should be ignored.\n  // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n  // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n  // This guards against the case where compositionend is triggered without the keyboard\n  // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n  // afterwards- we wouldn't want to ignore the keydown event in this case.\n  if (result.safari && Math.abs(event.timeStamp - view.compositionEndedAt) < 500) {\n    view.compositionEndedAt = -2e8;\n    return true\n  }\n  return false\n}\n\n// Drop active composition after 5 seconds of inactivity on Android\nvar timeoutComposition = result.android ? 5000 : -1;\n\neditHandlers.compositionstart = editHandlers.compositionupdate = function (view) {\n  if (!view.composing) {\n    view.domObserver.flush();\n    var state = view.state;\n    var $pos = state.selection.$from;\n    if (state.selection.empty &&\n        (state.storedMarks ||\n         (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(function (m) { return m.type.spec.inclusive === false; })))) {\n      // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n      view.markCursor = view.state.storedMarks || $pos.marks();\n      endComposition(view, true);\n      view.markCursor = null;\n    } else {\n      endComposition(view);\n      // In firefox, if the cursor is after but outside a marked node,\n      // the inserted text won't inherit the marks. So this moves it\n      // inside if necessary.\n      if (result.gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n        var sel = view.root.getSelection();\n        for (var node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n          var before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n          if (!before) { break }\n          if (before.nodeType == 3) {\n            sel.collapse(before, before.nodeValue.length);\n            break\n          } else {\n            node = before;\n            offset = -1;\n          }\n        }\n      }\n    }\n    view.composing = true;\n  }\n  scheduleComposeEnd(view, timeoutComposition);\n};\n\neditHandlers.compositionend = function (view, event) {\n  if (view.composing) {\n    view.composing = false;\n    view.compositionEndedAt = event.timeStamp;\n    scheduleComposeEnd(view, 20);\n  }\n};\n\nfunction scheduleComposeEnd(view, delay) {\n  clearTimeout(view.composingTimeout);\n  if (delay > -1) { view.composingTimeout = setTimeout(function () { return endComposition(view); }, delay); }\n}\n\nfunction clearComposition(view) {\n  if (view.composing) {\n    view.composing = false;\n    view.compositionEndedAt = timestampFromCustomEvent();\n  }\n  while (view.compositionNodes.length > 0) { view.compositionNodes.pop().markParentsDirty(); }\n}\n\nfunction timestampFromCustomEvent() {\n  var event = document.createEvent(\"Event\");\n  event.initEvent(\"event\", true, true);\n  return event.timeStamp\n}\n\nfunction endComposition(view, forceUpdate) {\n  view.domObserver.forceFlush();\n  clearComposition(view);\n  if (forceUpdate || view.docView.dirty) {\n    var sel = selectionFromDOM(view);\n    if (sel && !sel.eq(view.state.selection)) { view.dispatch(view.state.tr.setSelection(sel)); }\n    else { view.updateState(view.state); }\n    return true\n  }\n  return false\n}\n\nfunction captureCopy(view, dom) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  if (!view.dom.parentNode) { return }\n  var wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n  wrap.appendChild(dom);\n  wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n  var sel = getSelection(), range = document.createRange();\n  range.selectNodeContents(dom);\n  // Done because IE will fire a selectionchange moving the selection\n  // to its start when removeAllRanges is called and the editor still\n  // has focus (which will mess up the editor's selection state).\n  view.dom.blur();\n  sel.removeAllRanges();\n  sel.addRange(range);\n  setTimeout(function () {\n    if (wrap.parentNode) { wrap.parentNode.removeChild(wrap); }\n    view.focus();\n  }, 50);\n}\n\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nvar brokenClipboardAPI = (result.ie && result.ie_version < 15) ||\n      (result.ios && result.webkit_version < 604);\n\nhandlers.copy = editHandlers.cut = function (view, e) {\n  var sel = view.state.selection, cut = e.type == \"cut\";\n  if (sel.empty) { return }\n\n  // IE and Edge's clipboard interface is completely broken\n  var data = brokenClipboardAPI ? null : e.clipboardData;\n  var slice = sel.content();\n  var ref = serializeForClipboard(view, slice);\n  var dom = ref.dom;\n  var text = ref.text;\n  if (data) {\n    e.preventDefault();\n    data.clearData();\n    data.setData(\"text/html\", dom.innerHTML);\n    data.setData(\"text/plain\", text);\n  } else {\n    captureCopy(view, dom);\n  }\n  if (cut) { view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\")); }\n};\n\nfunction sliceSingleNode(slice) {\n  return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null\n}\n\nfunction capturePaste(view, e) {\n  if (!view.dom.parentNode) { return }\n  var plainText = view.shiftKey || view.state.selection.$from.parent.type.spec.code;\n  var target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n  if (!plainText) { target.contentEditable = \"true\"; }\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n  target.focus();\n  setTimeout(function () {\n    view.focus();\n    if (target.parentNode) { target.parentNode.removeChild(target); }\n    if (plainText) { doPaste(view, target.value, null, e); }\n    else { doPaste(view, target.textContent, target.innerHTML, e); }\n  }, 50);\n}\n\nfunction doPaste(view, text, html, e) {\n  var slice = parseFromClipboard(view, text, html, view.shiftKey, view.state.selection.$from);\n  if (view.someProp(\"handlePaste\", function (f) { return f(view, e, slice || Slice.empty); })) { return true }\n  if (!slice) { return false }\n\n  var singleNode = sliceSingleNode(slice);\n  var tr = singleNode ? view.state.tr.replaceSelectionWith(singleNode, view.shiftKey) : view.state.tr.replaceSelection(slice);\n  view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n  return true\n}\n\neditHandlers.paste = function (view, e) {\n  var data = brokenClipboardAPI ? null : e.clipboardData;\n  if (data && doPaste(view, data.getData(\"text/plain\"), data.getData(\"text/html\"), e)) { e.preventDefault(); }\n  else { capturePaste(view, e); }\n};\n\nvar Dragging = function Dragging(slice, move) {\n  this.slice = slice;\n  this.move = move;\n};\n\nvar dragCopyModifier = result.mac ? \"altKey\" : \"ctrlKey\";\n\nhandlers.dragstart = function (view, e) {\n  var mouseDown = view.mouseDown;\n  if (mouseDown) { mouseDown.done(); }\n  if (!e.dataTransfer) { return }\n\n  var sel = view.state.selection;\n  var pos = sel.empty ? null : view.posAtCoords(eventCoords(e));\n  if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1: sel.to)) ; else if (mouseDown && mouseDown.mightDrag) {\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)));\n  } else if (e.target && e.target.nodeType == 1) {\n    var desc = view.docView.nearestDesc(e.target, true);\n    if (desc && desc.node.type.spec.draggable && desc != view.docView)\n      { view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore))); }\n  }\n  var slice = view.state.selection.content();\n  var ref = serializeForClipboard(view, slice);\n  var dom = ref.dom;\n  var text = ref.text;\n  e.dataTransfer.clearData();\n  e.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n  // See https://github.com/ProseMirror/prosemirror/issues/1156\n  e.dataTransfer.effectAllowed = \"copyMove\";\n  if (!brokenClipboardAPI) { e.dataTransfer.setData(\"text/plain\", text); }\n  view.dragging = new Dragging(slice, !e[dragCopyModifier]);\n};\n\nhandlers.dragend = function (view) {\n  var dragging = view.dragging;\n  window.setTimeout(function () {\n    if (view.dragging == dragging)  { view.dragging = null; }\n  }, 50);\n};\n\neditHandlers.dragover = editHandlers.dragenter = function (_, e) { return e.preventDefault(); };\n\neditHandlers.drop = function (view, e) {\n  var dragging = view.dragging;\n  view.dragging = null;\n\n  if (!e.dataTransfer) { return }\n\n  var eventPos = view.posAtCoords(eventCoords(e));\n  if (!eventPos) { return }\n  var $mouse = view.state.doc.resolve(eventPos.pos);\n  if (!$mouse) { return }\n  var slice = dragging && dragging.slice;\n  if (slice) {\n    view.someProp(\"transformPasted\", function (f) { slice = f(slice); });\n  } else {\n    slice = parseFromClipboard(view, e.dataTransfer.getData(brokenClipboardAPI ? \"Text\" : \"text/plain\"),\n                               brokenClipboardAPI ? null : e.dataTransfer.getData(\"text/html\"), false, $mouse);\n  }\n  var move = dragging && !e[dragCopyModifier];\n  if (view.someProp(\"handleDrop\", function (f) { return f(view, e, slice || Slice.empty, move); })) {\n    e.preventDefault();\n    return\n  }\n  if (!slice) { return }\n\n  e.preventDefault();\n  var insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n  if (insertPos == null) { insertPos = $mouse.pos; }\n\n  var tr = view.state.tr;\n  if (move) { tr.deleteSelection(); }\n\n  var pos = tr.mapping.map(insertPos);\n  var isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n  var beforeInsert = tr.doc;\n  if (isNode)\n    { tr.replaceRangeWith(pos, pos, slice.content.firstChild); }\n  else\n    { tr.replaceRange(pos, pos, slice); }\n  if (tr.doc.eq(beforeInsert)) { return }\n\n  var $pos = tr.doc.resolve(pos);\n  if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n      $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n    tr.setSelection(new NodeSelection($pos));\n  } else {\n    var end = tr.mapping.map(insertPos);\n    tr.mapping.maps[tr.mapping.maps.length - 1].forEach(function (_from, _to, _newFrom, newTo) { return end = newTo; });\n    tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n  }\n  view.focus();\n  view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\n\nhandlers.focus = function (view) {\n  if (!view.focused) {\n    view.domObserver.stop();\n    view.dom.classList.add(\"ProseMirror-focused\");\n    view.domObserver.start();\n    view.focused = true;\n    setTimeout(function () {\n      if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.root.getSelection()))\n        { selectionToDOM(view); }\n    }, 20);\n  }\n};\n\nhandlers.blur = function (view, e) {\n  if (view.focused) {\n    view.domObserver.stop();\n    view.dom.classList.remove(\"ProseMirror-focused\");\n    view.domObserver.start();\n    if (e.relatedTarget && view.dom.contains(e.relatedTarget))\n      { view.domObserver.currentSelection.set({}); }\n    view.focused = false;\n  }\n};\n\nhandlers.beforeinput = function (view, event) {\n  // We should probably do more with beforeinput events, but support\n  // is so spotty that I'm still waiting to see where they are going.\n\n  // Very specific hack to deal with backspace sometimes failing on\n  // Chrome Android when after an uneditable node.\n  if (result.chrome && result.android && event.inputType == \"deleteContentBackward\") {\n    var domChangeCount = view.domChangeCount;\n    setTimeout(function () {\n      if (view.domChangeCount != domChangeCount) { return } // Event already had some effect\n      // This bug tends to close the virtual keyboard, so we refocus\n      view.dom.blur();\n      view.focus();\n      if (view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(8, \"Backspace\")); })) { return }\n      var ref = view.state.selection;\n      var $cursor = ref.$cursor;\n      // Crude approximation of backspace behavior when no command handled it\n      if ($cursor && $cursor.pos > 0) { view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView()); }\n    }, 50);\n  }\n};\n\n// Make sure all handlers get registered\nfor (var prop in editHandlers) { handlers[prop] = editHandlers[prop]; }\n\nfunction compareObjs(a, b) {\n  if (a == b) { return true }\n  for (var p in a) { if (a[p] !== b[p]) { return false } }\n  for (var p$1 in b) { if (!(p$1 in a)) { return false } }\n  return true\n}\n\nvar WidgetType = function WidgetType(toDOM, spec) {\n  this.spec = spec || noSpec;\n  this.side = this.spec.side || 0;\n  this.toDOM = toDOM;\n};\n\nWidgetType.prototype.map = function map (mapping, span, offset, oldOffset) {\n  var ref = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n    var pos = ref.pos;\n    var deleted = ref.deleted;\n  return deleted ? null : new Decoration(pos - offset, pos - offset, this)\n};\n\nWidgetType.prototype.valid = function valid () { return true };\n\nWidgetType.prototype.eq = function eq (other) {\n  return this == other ||\n    (other instanceof WidgetType &&\n     (this.spec.key && this.spec.key == other.spec.key ||\n      this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)))\n};\n\nvar InlineType = function InlineType(attrs, spec) {\n  this.spec = spec || noSpec;\n  this.attrs = attrs;\n};\n\nInlineType.prototype.map = function map (mapping, span, offset, oldOffset) {\n  var from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n  var to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n  return from >= to ? null : new Decoration(from, to, this)\n};\n\nInlineType.prototype.valid = function valid (_, span) { return span.from < span.to };\n\nInlineType.prototype.eq = function eq (other) {\n  return this == other ||\n    (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n     compareObjs(this.spec, other.spec))\n};\n\nInlineType.is = function is (span) { return span.type instanceof InlineType };\n\nvar NodeType = function NodeType(attrs, spec) {\n  this.spec = spec || noSpec;\n  this.attrs = attrs;\n};\n\nNodeType.prototype.map = function map (mapping, span, offset, oldOffset) {\n  var from = mapping.mapResult(span.from + oldOffset, 1);\n  if (from.deleted) { return null }\n  var to = mapping.mapResult(span.to + oldOffset, -1);\n  if (to.deleted || to.pos <= from.pos) { return null }\n  return new Decoration(from.pos - offset, to.pos - offset, this)\n};\n\nNodeType.prototype.valid = function valid (node, span) {\n  var ref = node.content.findIndex(span.from);\n    var index = ref.index;\n    var offset = ref.offset;\n    var child;\n  return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to\n};\n\nNodeType.prototype.eq = function eq (other) {\n  return this == other ||\n    (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n     compareObjs(this.spec, other.spec))\n};\n\n// ::- Decoration objects can be provided to the view through the\n// [`decorations` prop](#view.EditorProps.decorations). They come in\n// several variants—see the static members of this class for details.\nvar Decoration = function Decoration(from, to, type) {\n  // :: number\n  // The start position of the decoration.\n  this.from = from;\n  // :: number\n  // The end position. Will be the same as `from` for [widget\n  // decorations](#view.Decoration^widget).\n  this.to = to;\n  this.type = type;\n};\n\nvar prototypeAccessors$1 = { spec: { configurable: true },inline: { configurable: true } };\n\nDecoration.prototype.copy = function copy (from, to) {\n  return new Decoration(from, to, this.type)\n};\n\nDecoration.prototype.eq = function eq (other, offset) {\n    if ( offset === void 0 ) offset = 0;\n\n  return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to\n};\n\nDecoration.prototype.map = function map (mapping, offset, oldOffset) {\n  return this.type.map(mapping, this, offset, oldOffset)\n};\n\n// :: (number, union<(view: EditorView, getPos: () → number) → dom.Node, dom.Node>, ?Object) → Decoration\n// Creates a widget decoration, which is a DOM node that's shown in\n// the document at the given position. It is recommended that you\n// delay rendering the widget by passing a function that will be\n// called when the widget is actually drawn in a view, but you can\n// also directly pass a DOM node. `getPos` can be used to find the\n// widget's current document position.\n//\n// spec::- These options are supported:\n//\n//   side:: ?number\n//   Controls which side of the document position this widget is\n//   associated with. When negative, it is drawn before a cursor\n//   at its position, and content inserted at that position ends\n//   up after the widget. When zero (the default) or positive, the\n//   widget is drawn after the cursor and content inserted there\n//   ends up before the widget.\n//\n//   When there are multiple widgets at a given position, their\n//   `side` values determine the order in which they appear. Those\n//   with lower values appear first. The ordering of widgets with\n//   the same `side` value is unspecified.\n//\n//   When `marks` is null, `side` also determines the marks that\n//   the widget is wrapped in—those of the node before when\n//   negative, those of the node after when positive.\n//\n//   marks:: ?[Mark]\n//   The precise set of marks to draw around the widget.\n//\n//   stopEvent:: ?(event: dom.Event) → bool\n//   Can be used to control which DOM events, when they bubble out\n//   of this widget, the editor view should ignore.\n//\n//   ignoreSelection:: ?bool\n//   When set (defaults to false), selection changes inside the\n//   widget are ignored, and don't cause ProseMirror to try and\n//   re-sync the selection with its selection state.\n//\n//   key:: ?string\n//   When comparing decorations of this type (in order to decide\n//   whether it needs to be redrawn), ProseMirror will by default\n//   compare the widget DOM node by identity. If you pass a key,\n//   that key will be compared instead, which can be useful when\n//   you generate decorations on the fly and don't want to store\n//   and reuse DOM nodes. Make sure that any widgets with the same\n//   key are interchangeable—if widgets differ in, for example,\n//   the behavior of some event handler, they should get\n//   different keys.\nDecoration.widget = function widget (pos, toDOM, spec) {\n  return new Decoration(pos, pos, new WidgetType(toDOM, spec))\n};\n\n// :: (number, number, DecorationAttrs, ?Object) → Decoration\n// Creates an inline decoration, which adds the given attributes to\n// each inline node between `from` and `to`.\n//\n// spec::- These options are recognized:\n//\n//   inclusiveStart:: ?bool\n//   Determines how the left side of the decoration is\n//   [mapped](#transform.Position_Mapping) when content is\n//   inserted directly at that position. By default, the decoration\n//   won't include the new content, but you can set this to `true`\n//   to make it inclusive.\n//\n//   inclusiveEnd:: ?bool\n//   Determines how the right side of the decoration is mapped.\n//   See\n//   [`inclusiveStart`](#view.Decoration^inline^spec.inclusiveStart).\nDecoration.inline = function inline (from, to, attrs, spec) {\n  return new Decoration(from, to, new InlineType(attrs, spec))\n};\n\n// :: (number, number, DecorationAttrs, ?Object) → Decoration\n// Creates a node decoration. `from` and `to` should point precisely\n// before and after a node in the document. That node, and only that\n// node, will receive the given attributes.\n//\n// spec::-\n//\n// Optional information to store with the decoration. It\n// is also used when comparing decorators for equality.\nDecoration.node = function node (from, to, attrs, spec) {\n  return new Decoration(from, to, new NodeType(attrs, spec))\n};\n\n// :: Object\n// The spec provided when creating this decoration. Can be useful\n// if you've stored extra information in that object.\nprototypeAccessors$1.spec.get = function () { return this.type.spec };\n\nprototypeAccessors$1.inline.get = function () { return this.type instanceof InlineType };\n\nObject.defineProperties( Decoration.prototype, prototypeAccessors$1 );\n\n// DecorationAttrs:: interface\n// A set of attributes to add to a decorated node. Most properties\n// simply directly correspond to DOM attributes of the same name,\n// which will be set to the property's value. These are exceptions:\n//\n//   class:: ?string\n//   A CSS class name or a space-separated set of class names to be\n//   _added_ to the classes that the node already had.\n//\n//   style:: ?string\n//   A string of CSS to be _added_ to the node's existing `style` property.\n//\n//   nodeName:: ?string\n//   When non-null, the target node is wrapped in a DOM element of\n//   this type (and the other attributes are applied to this element).\n\nvar none = [], noSpec = {};\n\n// :: class extends DecorationSource\n// A collection of [decorations](#view.Decoration), organized in\n// such a way that the drawing algorithm can efficiently use and\n// compare them. This is a persistent data structure—it is not\n// modified, updates create a new value.\nvar DecorationSet = function DecorationSet(local, children) {\n  this.local = local && local.length ? local : none;\n  this.children = children && children.length ? children : none;\n};\n\n// :: (Node, [Decoration]) → DecorationSet\n// Create a set of decorations, using the structure of the given\n// document.\nDecorationSet.create = function create (doc, decorations) {\n  return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty\n};\n\n// :: (?number, ?number, ?(spec: Object) → bool) → [Decoration]\n// Find all decorations in this set which touch the given range\n// (including decorations that start or end directly at the\n// boundaries) and match the given predicate on their spec. When\n// `start` and `end` are omitted, all decorations in the set are\n// considered. When `predicate` isn't given, all decorations are\n// assumed to match.\nDecorationSet.prototype.find = function find (start, end, predicate) {\n  var result = [];\n  this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n  return result\n};\n\nDecorationSet.prototype.findInner = function findInner (start, end, result, offset, predicate) {\n  for (var i = 0; i < this.local.length; i++) {\n    var span = this.local[i];\n    if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n      { result.push(span.copy(span.from + offset, span.to + offset)); }\n  }\n  for (var i$1 = 0; i$1 < this.children.length; i$1 += 3) {\n    if (this.children[i$1] < end && this.children[i$1 + 1] > start) {\n      var childOff = this.children[i$1] + 1;\n      this.children[i$1 + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n    }\n  }\n};\n\n// :: (Mapping, Node, ?Object) → DecorationSet\n// Map the set of decorations in response to a change in the\n// document.\n//\n// options::- An optional set of options.\n//\n//   onRemove:: ?(decorationSpec: Object)\n//   When given, this function will be called for each decoration\n//   that gets dropped as a result of the mapping, passing the\n//   spec of that decoration.\nDecorationSet.prototype.map = function map (mapping, doc, options) {\n  if (this == empty || mapping.maps.length == 0) { return this }\n  return this.mapInner(mapping, doc, 0, 0, options || noSpec)\n};\n\nDecorationSet.prototype.mapInner = function mapInner (mapping, node, offset, oldOffset, options) {\n  var newLocal;\n  for (var i = 0; i < this.local.length; i++) {\n    var mapped = this.local[i].map(mapping, offset, oldOffset);\n    if (mapped && mapped.type.valid(node, mapped)) { (newLocal || (newLocal = [])).push(mapped); }\n    else if (options.onRemove) { options.onRemove(this.local[i].spec); }\n  }\n\n  if (this.children.length)\n    { return mapChildren(this.children, newLocal, mapping, node, offset, oldOffset, options) }\n  else\n    { return newLocal ? new DecorationSet(newLocal.sort(byPos)) : empty }\n};\n\n// :: (Node, [Decoration]) → DecorationSet\n// Add the given array of decorations to the ones in the set,\n// producing a new set. Needs access to the current document to\n// create the appropriate tree structure.\nDecorationSet.prototype.add = function add (doc, decorations) {\n  if (!decorations.length) { return this }\n  if (this == empty) { return DecorationSet.create(doc, decorations) }\n  return this.addInner(doc, decorations, 0)\n};\n\nDecorationSet.prototype.addInner = function addInner (doc, decorations, offset) {\n    var this$1 = this;\n\n  var children, childIndex = 0;\n  doc.forEach(function (childNode, childOffset) {\n    var baseOffset = childOffset + offset, found;\n    if (!(found = takeSpansForNode(decorations, childNode, baseOffset))) { return }\n\n    if (!children) { children = this$1.children.slice(); }\n    while (childIndex < children.length && children[childIndex] < childOffset) { childIndex += 3; }\n    if (children[childIndex] == childOffset)\n      { children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1); }\n    else\n      { children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec)); }\n    childIndex += 3;\n  });\n\n  var local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n  for (var i = 0; i < local.length; i++) { if (!local[i].type.valid(doc, local[i])) { local.splice(i--, 1); } }\n\n  return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local,\n                           children || this.children)\n};\n\n// :: ([Decoration]) → DecorationSet\n// Create a new set that contains the decorations in this set, minus\n// the ones in the given array.\nDecorationSet.prototype.remove = function remove (decorations) {\n  if (decorations.length == 0 || this == empty) { return this }\n  return this.removeInner(decorations, 0)\n};\n\nDecorationSet.prototype.removeInner = function removeInner (decorations, offset) {\n  var children = this.children, local = this.local;\n  for (var i = 0; i < children.length; i += 3) {\n    var found = (void 0), from = children[i] + offset, to = children[i + 1] + offset;\n    for (var j = 0, span = (void 0); j < decorations.length; j++) { if (span = decorations[j]) {\n      if (span.from > from && span.to < to) {\n        decorations[j] = null\n        ;(found || (found = [])).push(span);\n      }\n    } }\n    if (!found) { continue }\n    if (children == this.children) { children = this.children.slice(); }\n    var removed = children[i + 2].removeInner(found, from + 1);\n    if (removed != empty) {\n      children[i + 2] = removed;\n    } else {\n      children.splice(i, 3);\n      i -= 3;\n    }\n  }\n  if (local.length) { for (var i$1 = 0, span$1 = (void 0); i$1 < decorations.length; i$1++) { if (span$1 = decorations[i$1]) {\n    for (var j$1 = 0; j$1 < local.length; j$1++) { if (local[j$1].eq(span$1, offset)) {\n      if (local == this.local) { local = this.local.slice(); }\n      local.splice(j$1--, 1);\n    } }\n  } } }\n  if (children == this.children && local == this.local) { return this }\n  return local.length || children.length ? new DecorationSet(local, children) : empty\n};\n\nDecorationSet.prototype.forChild = function forChild (offset, node) {\n  if (this == empty) { return this }\n  if (node.isLeaf) { return DecorationSet.empty }\n\n  var child, local;\n  for (var i = 0; i < this.children.length; i += 3) { if (this.children[i] >= offset) {\n    if (this.children[i] == offset) { child = this.children[i + 2]; }\n    break\n  } }\n  var start = offset + 1, end = start + node.content.size;\n  for (var i$1 = 0; i$1 < this.local.length; i$1++) {\n    var dec = this.local[i$1];\n    if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n      var from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n      if (from < to) { (local || (local = [])).push(dec.copy(from, to)); }\n    }\n  }\n  if (local) {\n    var localSet = new DecorationSet(local.sort(byPos));\n    return child ? new DecorationGroup([localSet, child]) : localSet\n  }\n  return child || empty\n};\n\nDecorationSet.prototype.eq = function eq (other) {\n  if (this == other) { return true }\n  if (!(other instanceof DecorationSet) ||\n      this.local.length != other.local.length ||\n      this.children.length != other.children.length) { return false }\n  for (var i = 0; i < this.local.length; i++)\n    { if (!this.local[i].eq(other.local[i])) { return false } }\n  for (var i$1 = 0; i$1 < this.children.length; i$1 += 3)\n    { if (this.children[i$1] != other.children[i$1] ||\n        this.children[i$1 + 1] != other.children[i$1 + 1] ||\n        !this.children[i$1 + 2].eq(other.children[i$1 + 2])) { return false } }\n  return true\n};\n\nDecorationSet.prototype.locals = function locals (node) {\n  return removeOverlap(this.localsInner(node))\n};\n\nDecorationSet.prototype.localsInner = function localsInner (node) {\n  if (this == empty) { return none }\n  if (node.inlineContent || !this.local.some(InlineType.is)) { return this.local }\n  var result = [];\n  for (var i = 0; i < this.local.length; i++) {\n    if (!(this.local[i].type instanceof InlineType))\n      { result.push(this.local[i]); }\n  }\n  return result\n};\n\n// DecorationSource:: interface\n// An object that can [provide](#view.EditorProps.decorations)\n// decorations. Implemented by [`DecorationSet`](#view.DecorationSet),\n// and passed to [node views](#view.EditorProps.nodeViews).\n//\n//   map:: (Mapping, Node) → DecorationSource\n//   Map the set of decorations in response to a change in the\n//   document.\n\nvar empty = new DecorationSet();\n\n// :: DecorationSet\n// The empty set of decorations.\nDecorationSet.empty = empty;\n\nDecorationSet.removeOverlap = removeOverlap;\n\n// :- An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nvar DecorationGroup = function DecorationGroup(members) {\n  this.members = members;\n};\n\nDecorationGroup.prototype.map = function map (mapping, doc) {\n  var mappedDecos = this.members.map(\n    function (member) { return member.map(mapping, doc, noSpec); }\n  );\n  return DecorationGroup.from(mappedDecos)\n};\n\nDecorationGroup.prototype.forChild = function forChild (offset, child) {\n  if (child.isLeaf) { return DecorationSet.empty }\n  var found = [];\n  for (var i = 0; i < this.members.length; i++) {\n    var result = this.members[i].forChild(offset, child);\n    if (result == empty) { continue }\n    if (result instanceof DecorationGroup) { found = found.concat(result.members); }\n    else { found.push(result); }\n  }\n  return DecorationGroup.from(found)\n};\n\nDecorationGroup.prototype.eq = function eq (other) {\n  if (!(other instanceof DecorationGroup) ||\n      other.members.length != this.members.length) { return false }\n  for (var i = 0; i < this.members.length; i++)\n    { if (!this.members[i].eq(other.members[i])) { return false } }\n  return true\n};\n\nDecorationGroup.prototype.locals = function locals (node) {\n  var result, sorted = true;\n  for (var i = 0; i < this.members.length; i++) {\n    var locals = this.members[i].localsInner(node);\n    if (!locals.length) { continue }\n    if (!result) {\n      result = locals;\n    } else {\n      if (sorted) {\n        result = result.slice();\n        sorted = false;\n      }\n      for (var j = 0; j < locals.length; j++) { result.push(locals[j]); }\n    }\n  }\n  return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none\n};\n\n// : ([DecorationSet]) → union<DecorationSet, DecorationGroup>\n// Create a group for the given array of decoration sets, or return\n// a single set when possible.\nDecorationGroup.from = function from (members) {\n  switch (members.length) {\n    case 0: return empty\n    case 1: return members[0]\n    default: return new DecorationGroup(members)\n  }\n};\n\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n  var children = oldChildren.slice();\n\n  // Mark the children that are directly touched by changes, and\n  // move those that are after the changes.\n  var shift = function (oldStart, oldEnd, newStart, newEnd) {\n    for (var i = 0; i < children.length; i += 3) {\n      var end = children[i + 1], dSize = (void 0);\n      if (end == -1 || oldStart > end + oldOffset) { continue }\n      if (oldEnd >= children[i] + oldOffset) {\n        children[i + 1] = -1;\n      } else if (newStart >= offset && (dSize = (newEnd - newStart) - (oldEnd - oldStart))) {\n        children[i] += dSize;\n        children[i + 1] += dSize;\n      }\n    }\n  };\n  for (var i = 0; i < mapping.maps.length; i++) { mapping.maps[i].forEach(shift); }\n\n  // Find the child nodes that still correspond to a single node,\n  // recursively call mapInner on them and update their positions.\n  var mustRebuild = false;\n  for (var i$1 = 0; i$1 < children.length; i$1 += 3) { if (children[i$1 + 1] == -1) { // Touched nodes\n    var from = mapping.map(oldChildren[i$1] + oldOffset), fromLocal = from - offset;\n    if (fromLocal < 0 || fromLocal >= node.content.size) {\n      mustRebuild = true;\n      continue\n    }\n    // Must read oldChildren because children was tagged with -1\n    var to = mapping.map(oldChildren[i$1 + 1] + oldOffset, -1), toLocal = to - offset;\n    var ref = node.content.findIndex(fromLocal);\n    var index = ref.index;\n    var childOffset = ref.offset;\n    var childNode = node.maybeChild(index);\n    if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n      var mapped = children[i$1 + 2].mapInner(mapping, childNode, from + 1, oldChildren[i$1] + oldOffset + 1, options);\n      if (mapped != empty) {\n        children[i$1] = fromLocal;\n        children[i$1 + 1] = toLocal;\n        children[i$1 + 2] = mapped;\n      } else {\n        children[i$1 + 1] = -2;\n        mustRebuild = true;\n      }\n    } else {\n      mustRebuild = true;\n    }\n  } }\n\n  // Remaining children must be collected and rebuilt into the appropriate structure\n  if (mustRebuild) {\n    var decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal || [], mapping,\n                                                       offset, oldOffset, options);\n    var built = buildTree(decorations, node, 0, options);\n    newLocal = built.local;\n    for (var i$2 = 0; i$2 < children.length; i$2 += 3) { if (children[i$2 + 1] < 0) {\n      children.splice(i$2, 3);\n      i$2 -= 3;\n    } }\n    for (var i$3 = 0, j = 0; i$3 < built.children.length; i$3 += 3) {\n      var from$1 = built.children[i$3];\n      while (j < children.length && children[j] < from$1) { j += 3; }\n      children.splice(j, 0, built.children[i$3], built.children[i$3 + 1], built.children[i$3 + 2]);\n    }\n  }\n\n  return new DecorationSet(newLocal && newLocal.sort(byPos), children)\n}\n\nfunction moveSpans(spans, offset) {\n  if (!offset || !spans.length) { return spans }\n  var result = [];\n  for (var i = 0; i < spans.length; i++) {\n    var span = spans[i];\n    result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n  }\n  return result\n}\n\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n  // Gather all decorations from the remaining marked children\n  function gather(set, oldOffset) {\n    for (var i = 0; i < set.local.length; i++) {\n      var mapped = set.local[i].map(mapping, offset, oldOffset);\n      if (mapped) { decorations.push(mapped); }\n      else if (options.onRemove) { options.onRemove(set.local[i].spec); }\n    }\n    for (var i$1 = 0; i$1 < set.children.length; i$1 += 3)\n      { gather(set.children[i$1 + 2], set.children[i$1] + oldOffset + 1); }\n  }\n  for (var i = 0; i < children.length; i += 3) { if (children[i + 1] == -1)\n    { gather(children[i + 2], oldChildren[i] + oldOffset + 1); } }\n\n  return decorations\n}\n\nfunction takeSpansForNode(spans, node, offset) {\n  if (node.isLeaf) { return null }\n  var end = offset + node.nodeSize, found = null;\n  for (var i = 0, span = (void 0); i < spans.length; i++) {\n    if ((span = spans[i]) && span.from > offset && span.to < end) {\n(found || (found = [])).push(span);\n      spans[i] = null;\n    }\n  }\n  return found\n}\n\nfunction withoutNulls(array) {\n  var result = [];\n  for (var i = 0; i < array.length; i++)\n    { if (array[i] != null) { result.push(array[i]); } }\n  return result\n}\n\n// : ([Decoration], Node, number) → DecorationSet\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n  var children = [], hasNulls = false;\n  node.forEach(function (childNode, localStart) {\n    var found = takeSpansForNode(spans, childNode, localStart + offset);\n    if (found) {\n      hasNulls = true;\n      var subtree = buildTree(found, childNode, offset + localStart + 1, options);\n      if (subtree != empty)\n        { children.push(localStart, localStart + childNode.nodeSize, subtree); }\n    }\n  });\n  var locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n  for (var i = 0; i < locals.length; i++) { if (!locals[i].type.valid(node, locals[i])) {\n    if (options.onRemove) { options.onRemove(locals[i].spec); }\n    locals.splice(i--, 1);\n  } }\n  return locals.length || children.length ? new DecorationSet(locals, children) : empty\n}\n\n// : (Decoration, Decoration) → number\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n  return a.from - b.from || a.to - b.to\n}\n\n// : ([Decoration]) → [Decoration]\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n  var working = spans;\n  for (var i = 0; i < working.length - 1; i++) {\n    var span = working[i];\n    if (span.from != span.to) { for (var j = i + 1; j < working.length; j++) {\n      var next = working[j];\n      if (next.from == span.from) {\n        if (next.to != span.to) {\n          if (working == spans) { working = spans.slice(); }\n          // Followed by a partially overlapping larger span. Split that\n          // span.\n          working[j] = next.copy(next.from, span.to);\n          insertAhead(working, j + 1, next.copy(span.to, next.to));\n        }\n        continue\n      } else {\n        if (next.from < span.to) {\n          if (working == spans) { working = spans.slice(); }\n          // The end of this one overlaps with a subsequent span. Split\n          // this one.\n          working[i] = span.copy(span.from, next.from);\n          insertAhead(working, j, span.copy(next.from, span.to));\n        }\n        break\n      }\n    } }\n  }\n  return working\n}\n\nfunction insertAhead(array, i, deco) {\n  while (i < array.length && byPos(deco, array[i]) > 0) { i++; }\n  array.splice(i, 0, deco);\n}\n\n// : (EditorView) → union<DecorationSet, DecorationGroup>\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n  var found = [];\n  view.someProp(\"decorations\", function (f) {\n    var result = f(view.state);\n    if (result && result != empty) { found.push(result); }\n  });\n  if (view.cursorWrapper)\n    { found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco])); }\n  return DecorationGroup.from(found)\n}\n\n// ::- An editor view manages the DOM structure that represents an\n// editable document. Its state and behavior are determined by its\n// [props](#view.DirectEditorProps).\nvar EditorView = function EditorView(place, props) {\n  this._props = props;\n  // :: EditorState\n  // The view's current [state](#state.EditorState).\n  this.state = props.state;\n\n  this.directPlugins = props.plugins || [];\n  this.directPlugins.forEach(checkStateComponent);\n\n  this.dispatch = this.dispatch.bind(this);\n\n  this._root = null;\n  this.focused = false;\n  // Kludge used to work around a Chrome bug\n  this.trackWrites = null;\n\n  // :: dom.Element\n  // An editable DOM node containing the document. (You probably\n  // should not directly interfere with its content.)\n  this.dom = (place && place.mount) || document.createElement(\"div\");\n  if (place) {\n    if (place.appendChild) { place.appendChild(this.dom); }\n    else if (place.apply) { place(this.dom); }\n    else if (place.mount) { this.mounted = true; }\n  }\n\n  // :: bool\n  // Indicates whether the editor is currently [editable](#view.EditorProps.editable).\n  this.editable = getEditable(this);\n  this.markCursor = null;\n  this.cursorWrapper = null;\n  updateCursorWrapper(this);\n  this.nodeViews = buildNodeViews(this);\n  this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n\n  this.lastSelectedViewDesc = null;\n  // :: ?{slice: Slice, move: bool}\n  // When editor content is being dragged, this object contains\n  // information about the dragged slice and whether it is being\n  // copied or moved. At any other time, it is null.\n  this.dragging = null;\n\n  initInput(this);\n\n  this.prevDirectPlugins = [];\n  this.pluginViews = [];\n  this.updatePluginViews();\n};\n\nvar prototypeAccessors$2 = { props: { configurable: true },root: { configurable: true } };\n\n// composing:: boolean\n// Holds `true` when a\n// [composition](https://developer.mozilla.org/en-US/docs/Mozilla/IME_handling_guide)\n// is active.\n\n// :: DirectEditorProps\n// The view's current [props](#view.EditorProps).\nprototypeAccessors$2.props.get = function () {\n  if (this._props.state != this.state) {\n    var prev = this._props;\n    this._props = {};\n    for (var name in prev) { this._props[name] = prev[name]; }\n    this._props.state = this.state;\n  }\n  return this._props\n};\n\n// :: (DirectEditorProps)\n// Update the view's props. Will immediately cause an update to\n// the DOM.\nEditorView.prototype.update = function update (props) {\n  if (props.handleDOMEvents != this._props.handleDOMEvents) { ensureListeners(this); }\n  this._props = props;\n  if (props.plugins) {\n    props.plugins.forEach(checkStateComponent);\n    this.directPlugins = props.plugins;\n  }\n  this.updateStateInner(props.state, true);\n};\n\n// :: (DirectEditorProps)\n// Update the view by updating existing props object with the object\n// given as argument. Equivalent to `view.update(Object.assign({},\n// view.props, props))`.\nEditorView.prototype.setProps = function setProps (props) {\n  var updated = {};\n  for (var name in this._props) { updated[name] = this._props[name]; }\n  updated.state = this.state;\n  for (var name$1 in props) { updated[name$1] = props[name$1]; }\n  this.update(updated);\n};\n\n// :: (EditorState)\n// Update the editor's `state` prop, without touching any of the\n// other props.\nEditorView.prototype.updateState = function updateState (state) {\n  this.updateStateInner(state, this.state.plugins != state.plugins);\n};\n\nEditorView.prototype.updateStateInner = function updateStateInner (state, reconfigured) {\n    var this$1 = this;\n\n  var prev = this.state, redraw = false, updateSel = false;\n  // When stored marks are added, stop composition, so that they can\n  // be displayed.\n  if (state.storedMarks && this.composing) {\n    clearComposition(this);\n    updateSel = true;\n  }\n  this.state = state;\n  if (reconfigured) {\n    var nodeViews = buildNodeViews(this);\n    if (changedNodeViews(nodeViews, this.nodeViews)) {\n      this.nodeViews = nodeViews;\n      redraw = true;\n    }\n    ensureListeners(this);\n  }\n\n  this.editable = getEditable(this);\n  updateCursorWrapper(this);\n  var innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n\n  var scroll = reconfigured ? \"reset\"\n      : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n  var updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n  if (updateDoc || !state.selection.eq(prev.selection)) { updateSel = true; }\n  var oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n\n  if (updateSel) {\n    this.domObserver.stop();\n    // Work around an issue in Chrome, IE, and Edge where changing\n    // the DOM around an active selection puts it into a broken\n    // state where the thing the user sees differs from the\n    // selection reported by the Selection object (#710, #973,\n    // #1011, #1013, #1035).\n    var forceSelUpdate = updateDoc && (result.ie || result.chrome) && !this.composing &&\n        !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n    if (updateDoc) {\n      // If the node that the selection points into is written to,\n      // Chrome sometimes starts misreporting the selection, so this\n      // tracks that and forces a selection reset when our update\n      // did write to the node.\n      var chromeKludge = result.chrome ? (this.trackWrites = this.root.getSelection().focusNode) : null;\n      if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n        this.docView.updateOuterDeco([]);\n        this.docView.destroy();\n        this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n      }\n      if (chromeKludge && !this.trackWrites) { forceSelUpdate = true; }\n    }\n    // Work around for an issue where an update arriving right between\n    // a DOM selection change and the \"selectionchange\" event for it\n    // can cause a spurious DOM selection update, disrupting mouse\n    // drag selection.\n    if (forceSelUpdate ||\n        !(this.mouseDown && this.domObserver.currentSelection.eq(this.root.getSelection()) && anchorInRightPlace(this))) {\n      selectionToDOM(this, forceSelUpdate);\n    } else {\n      syncNodeSelection(this, state.selection);\n      this.domObserver.setCurSelection();\n    }\n    this.domObserver.start();\n  }\n\n  this.updatePluginViews(prev);\n\n  if (scroll == \"reset\") {\n    this.dom.scrollTop = 0;\n  } else if (scroll == \"to selection\") {\n    var startDOM = this.root.getSelection().focusNode;\n    if (this.someProp(\"handleScrollToSelection\", function (f) { return f(this$1); }))\n      ; // Handled\n    else if (state.selection instanceof NodeSelection)\n      { scrollRectIntoView(this, this.docView.domAfterPos(state.selection.from).getBoundingClientRect(), startDOM); }\n    else\n      { scrollRectIntoView(this, this.coordsAtPos(state.selection.head, 1), startDOM); }\n  } else if (oldScrollPos) {\n    resetScrollPos(oldScrollPos);\n  }\n};\n\nEditorView.prototype.destroyPluginViews = function destroyPluginViews () {\n  var view;\n  while (view = this.pluginViews.pop()) { if (view.destroy) { view.destroy(); } }\n};\n\nEditorView.prototype.updatePluginViews = function updatePluginViews (prevState) {\n  if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n    this.prevDirectPlugins = this.directPlugins;\n    this.destroyPluginViews();\n    for (var i = 0; i < this.directPlugins.length; i++) {\n      var plugin = this.directPlugins[i];\n      if (plugin.spec.view) { this.pluginViews.push(plugin.spec.view(this)); }\n    }\n    for (var i$1 = 0; i$1 < this.state.plugins.length; i$1++) {\n      var plugin$1 = this.state.plugins[i$1];\n      if (plugin$1.spec.view) { this.pluginViews.push(plugin$1.spec.view(this)); }\n    }\n  } else {\n    for (var i$2 = 0; i$2 < this.pluginViews.length; i$2++) {\n      var pluginView = this.pluginViews[i$2];\n      if (pluginView.update) { pluginView.update(this, prevState); }\n    }\n  }\n};\n\n// :: (string, ?(prop: *) → *) → *\n// Goes over the values of a prop, first those provided directly,\n// then those from plugins given to the view, then from plugins in\n// the state (in order), and calls `f` every time a non-undefined\n// value is found. When `f` returns a truthy value, that is\n// immediately returned. When `f` isn't provided, it is treated as\n// the identity function (the prop value is returned directly).\nEditorView.prototype.someProp = function someProp (propName, f) {\n  var prop = this._props && this._props[propName], value;\n  if (prop != null && (value = f ? f(prop) : prop)) { return value }\n  for (var i = 0; i < this.directPlugins.length; i++) {\n    var prop$1 = this.directPlugins[i].props[propName];\n    if (prop$1 != null && (value = f ? f(prop$1) : prop$1)) { return value }\n  }\n  var plugins = this.state.plugins;\n  if (plugins) { for (var i$1 = 0; i$1 < plugins.length; i$1++) {\n    var prop$2 = plugins[i$1].props[propName];\n    if (prop$2 != null && (value = f ? f(prop$2) : prop$2)) { return value }\n  } }\n};\n\n// :: () → bool\n// Query whether the view has focus.\nEditorView.prototype.hasFocus = function hasFocus () {\n  return this.root.activeElement == this.dom\n};\n\n// :: ()\n// Focus the editor.\nEditorView.prototype.focus = function focus () {\n  this.domObserver.stop();\n  if (this.editable) { focusPreventScroll(this.dom); }\n  selectionToDOM(this);\n  this.domObserver.start();\n};\n\n// :: union<dom.Document, dom.DocumentFragment>\n// Get the document root in which the editor exists. This will\n// usually be the top-level `document`, but might be a [shadow\n// DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n// root if the editor is inside one.\nprototypeAccessors$2.root.get = function () {\n  var cached = this._root;\n  if (cached == null) { for (var search = this.dom.parentNode; search; search = search.parentNode) {\n    if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n      if (!search.getSelection) { Object.getPrototypeOf(search).getSelection = function () { return document.getSelection(); }; }\n      return this._root = search\n    }\n  } }\n  return cached || document\n};\n\n// :: ({left: number, top: number}) → ?{pos: number, inside: number}\n// Given a pair of viewport coordinates, return the document\n// position that corresponds to them. May return null if the given\n// coordinates aren't inside of the editor. When an object is\n// returned, its `pos` property is the position nearest to the\n// coordinates, and its `inside` property holds the position of the\n// inner node that the position falls inside of, or -1 if it is at\n// the top level, not in any node.\nEditorView.prototype.posAtCoords = function posAtCoords$1 (coords) {\n  return posAtCoords(this, coords)\n};\n\n// :: (number, number) → {left: number, right: number, top: number, bottom: number}\n// Returns the viewport rectangle at a given document position.\n// `left` and `right` will be the same number, as this returns a\n// flat cursor-ish rectangle. If the position is between two things\n// that aren't directly adjacent, `side` determines which element is\n// used. When < 0, the element before the position is used,\n// otherwise the element after.\nEditorView.prototype.coordsAtPos = function coordsAtPos$1 (pos, side) {\n    if ( side === void 0 ) side = 1;\n\n  return coordsAtPos(this, pos, side)\n};\n\n// :: (number, number) → {node: dom.Node, offset: number}\n// Find the DOM position that corresponds to the given document\n// position. When `side` is negative, find the position as close as\n// possible to the content before the position. When positive,\n// prefer positions close to the content after the position. When\n// zero, prefer as shallow a position as possible.\n//\n// Note that you should **not** mutate the editor's internal DOM,\n// only inspect it (and even that is usually not necessary).\nEditorView.prototype.domAtPos = function domAtPos (pos, side) {\n    if ( side === void 0 ) side = 0;\n\n  return this.docView.domFromPos(pos, side)\n};\n\n// :: (number) → ?dom.Node\n// Find the DOM node that represents the document node after the\n// given position. May return `null` when the position doesn't point\n// in front of a node or if the node is inside an opaque node view.\n//\n// This is intended to be able to call things like\n// `getBoundingClientRect` on that DOM node. Do **not** mutate the\n// editor DOM directly, or add styling this way, since that will be\n// immediately overriden by the editor as it redraws the node.\nEditorView.prototype.nodeDOM = function nodeDOM (pos) {\n  var desc = this.docView.descAt(pos);\n  return desc ? desc.nodeDOM : null\n};\n\n// :: (dom.Node, number, ?number) → number\n// Find the document position that corresponds to a given DOM\n// position. (Whenever possible, it is preferable to inspect the\n// document structure directly, rather than poking around in the\n// DOM, but sometimes—for example when interpreting an event\n// target—you don't have a choice.)\n//\n// The `bias` parameter can be used to influence which side of a DOM\n// node to use when the position is inside a leaf node.\nEditorView.prototype.posAtDOM = function posAtDOM (node, offset, bias) {\n    if ( bias === void 0 ) bias = -1;\n\n  var pos = this.docView.posFromDOM(node, offset, bias);\n  if (pos == null) { throw new RangeError(\"DOM position not inside the editor\") }\n  return pos\n};\n\n// :: (union<\"up\", \"down\", \"left\", \"right\", \"forward\", \"backward\">, ?EditorState) → bool\n// Find out whether the selection is at the end of a textblock when\n// moving in a given direction. When, for example, given `\"left\"`,\n// it will return true if moving left from the current cursor\n// position would leave that position's parent textblock. Will apply\n// to the view's current state by default, but it is possible to\n// pass a different state.\nEditorView.prototype.endOfTextblock = function endOfTextblock$1 (dir, state) {\n  return endOfTextblock(this, state || this.state, dir)\n};\n\n// :: ()\n// Removes the editor from the DOM and destroys all [node\n// views](#view.NodeView).\nEditorView.prototype.destroy = function destroy () {\n  if (!this.docView) { return }\n  destroyInput(this);\n  this.destroyPluginViews();\n  if (this.mounted) {\n    this.docView.update(this.state.doc, [], viewDecorations(this), this);\n    this.dom.textContent = \"\";\n  } else if (this.dom.parentNode) {\n    this.dom.parentNode.removeChild(this.dom);\n  }\n  this.docView.destroy();\n  this.docView = null;\n};\n\n// Used for testing.\nEditorView.prototype.dispatchEvent = function dispatchEvent$1 (event) {\n  return dispatchEvent(this, event)\n};\n\n// :: (Transaction)\n// Dispatch a transaction. Will call\n// [`dispatchTransaction`](#view.DirectEditorProps.dispatchTransaction)\n// when given, and otherwise defaults to applying the transaction to\n// the current state and calling\n// [`updateState`](#view.EditorView.updateState) with the result.\n// This method is bound to the view instance, so that it can be\n// easily passed around.\nEditorView.prototype.dispatch = function dispatch (tr) {\n  var dispatchTransaction = this._props.dispatchTransaction;\n  if (dispatchTransaction) { dispatchTransaction.call(this, tr); }\n  else { this.updateState(this.state.apply(tr)); }\n};\n\nObject.defineProperties( EditorView.prototype, prototypeAccessors$2 );\n\nfunction computeDocDeco(view) {\n  var attrs = Object.create(null);\n  attrs.class = \"ProseMirror\";\n  attrs.contenteditable = String(view.editable);\n  attrs.translate = \"no\";\n\n  view.someProp(\"attributes\", function (value) {\n    if (typeof value == \"function\") { value = value(view.state); }\n    if (value) { for (var attr in value) {\n      if (attr == \"class\")\n        { attrs.class += \" \" + value[attr]; }\n      else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n        { attrs[attr] = String(value[attr]); }\n    } }\n  });\n\n  return [Decoration.node(0, view.state.doc.content.size, attrs)]\n}\n\nfunction updateCursorWrapper(view) {\n  if (view.markCursor) {\n    var dom = document.createElement(\"img\");\n    dom.className = \"ProseMirror-separator\";\n    dom.setAttribute(\"mark-placeholder\", \"true\");\n    view.cursorWrapper = {dom: dom, deco: Decoration.widget(view.state.selection.head, dom, {raw: true, marks: view.markCursor})};\n  } else {\n    view.cursorWrapper = null;\n  }\n}\n\nfunction getEditable(view) {\n  return !view.someProp(\"editable\", function (value) { return value(view.state) === false; })\n}\n\nfunction selectionContextChanged(sel1, sel2) {\n  var depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n  return sel1.$anchor.start(depth) != sel2.$anchor.start(depth)\n}\n\nfunction buildNodeViews(view) {\n  var result = {};\n  view.someProp(\"nodeViews\", function (obj) {\n    for (var prop in obj) { if (!Object.prototype.hasOwnProperty.call(result, prop))\n      { result[prop] = obj[prop]; } }\n  });\n  return result\n}\n\nfunction changedNodeViews(a, b) {\n  var nA = 0, nB = 0;\n  for (var prop in a) {\n    if (a[prop] != b[prop]) { return true }\n    nA++;\n  }\n  for (var _ in b) { nB++; }\n  return nA != nB\n}\n\nfunction checkStateComponent(plugin) {\n  if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n    { throw new RangeError(\"Plugins passed directly to the view must not have a state component\") }\n}\n\n// EditorProps:: interface\n//\n// Props are configuration values that can be passed to an editor view\n// or included in a plugin. This interface lists the supported props.\n//\n// The various event-handling functions may all return `true` to\n// indicate that they handled the given event. The view will then take\n// care to call `preventDefault` on the event, except with\n// `handleDOMEvents`, where the handler itself is responsible for that.\n//\n// How a prop is resolved depends on the prop. Handler functions are\n// called one at a time, starting with the base props and then\n// searching through the plugins (in order of appearance) until one of\n// them returns true. For some props, the first plugin that yields a\n// value gets precedence.\n//\n//   handleDOMEvents:: ?Object<(view: EditorView, event: dom.Event) → bool>\n//   Can be an object mapping DOM event type names to functions that\n//   handle them. Such functions will be called before any handling\n//   ProseMirror does of events fired on the editable DOM element.\n//   Contrary to the other event handling props, when returning true\n//   from such a function, you are responsible for calling\n//   `preventDefault` yourself (or not, if you want to allow the\n//   default behavior).\n//\n//   handleKeyDown:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Called when the editor receives a `keydown` event.\n//\n//   handleKeyPress:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Handler for `keypress` events.\n//\n//   handleTextInput:: ?(view: EditorView, from: number, to: number, text: string) → bool\n//   Whenever the user directly input text, this handler is called\n//   before the input is applied. If it returns `true`, the default\n//   behavior of actually inserting the text is suppressed.\n//\n//   handleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a click, from the inside out. The\n//   `direct` flag will be true for the inner node.\n//\n//   handleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is clicked, after `handleClickOn` handlers\n//   have been called.\n//\n//   handleDoubleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a double click.\n//\n//   handleDoubleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is double-clicked, after `handleDoubleClickOn`.\n//\n//   handleTripleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a triple click.\n//\n//   handleTripleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is triple-clicked, after `handleTripleClickOn`.\n//\n//   handlePaste:: ?(view: EditorView, event: dom.ClipboardEvent, slice: Slice) → bool\n//   Can be used to override the behavior of pasting. `slice` is the\n//   pasted content parsed by the editor, but you can directly access\n//   the event to get at the raw content.\n//\n//   handleDrop:: ?(view: EditorView, event: dom.Event, slice: Slice, moved: bool) → bool\n//   Called when something is dropped on the editor. `moved` will be\n//   true if this drop moves from the current selection (which should\n//   thus be deleted).\n//\n//   handleScrollToSelection:: ?(view: EditorView) → bool\n//   Called when the view, after updating its state, tries to scroll\n//   the selection into view. A handler function may return false to\n//   indicate that it did not handle the scrolling and further\n//   handlers or the default behavior should be tried.\n//\n//   createSelectionBetween:: ?(view: EditorView, anchor: ResolvedPos, head: ResolvedPos) → ?Selection\n//   Can be used to override the way a selection is created when\n//   reading a DOM selection between the given anchor and head.\n//\n//   domParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading editor changes\n//   from the DOM. Defaults to calling\n//   [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) on the\n//   editor's schema.\n//\n//   transformPastedHTML:: ?(html: string) → string\n//   Can be used to transform pasted HTML text, _before_ it is parsed,\n//   for example to clean it up.\n//\n//   clipboardParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading content from\n//   the clipboard. When not given, the value of the\n//   [`domParser`](#view.EditorProps.domParser) prop is used.\n//\n//   transformPastedText:: ?(text: string, plain: bool) → string\n//   Transform pasted plain text. The `plain` flag will be true when\n//   the text is pasted as plain text.\n//\n//   clipboardTextParser:: ?(text: string, $context: ResolvedPos, plain: bool) → Slice\n//   A function to parse text from the clipboard into a document\n//   slice. Called after\n//   [`transformPastedText`](#view.EditorProps.transformPastedText).\n//   The default behavior is to split the text into lines, wrap them\n//   in `<p>` tags, and call\n//   [`clipboardParser`](#view.EditorProps.clipboardParser) on it.\n//   The `plain` flag will be true when the text is pasted as plain text.\n//\n//   transformPasted:: ?(Slice) → Slice\n//   Can be used to transform pasted content before it is applied to\n//   the document.\n//\n//   nodeViews:: ?Object<(node: Node, view: EditorView, getPos: () → number, decorations: [Decoration], innerDecorations: DecorationSource) → NodeView>\n//   Allows you to pass custom rendering and behavior logic for nodes\n//   and marks. Should map node and mark names to constructor\n//   functions that produce a [`NodeView`](#view.NodeView) object\n//   implementing the node's display behavior. For nodes, the third\n//   argument `getPos` is a function that can be called to get the\n//   node's current position, which can be useful when creating\n//   transactions to update it. For marks, the third argument is a\n//   boolean that indicates whether the mark's content is inline.\n//\n//   `decorations` is an array of node or inline decorations that are\n//   active around the node. They are automatically drawn in the\n//   normal way, and you will usually just want to ignore this, but\n//   they can also be used as a way to provide context information to\n//   the node view without adding it to the document itself.\n//\n//   `innerDecorations` holds the decorations for the node's content.\n//   You can safely ignore this if your view has no content or a\n//   `contentDOM` property, since the editor will draw the decorations\n//   on the content. But if you, for example, want to create a nested\n//   editor with the content, it may make sense to provide it with the\n//   inner decorations.\n//\n//   clipboardSerializer:: ?DOMSerializer\n//   The DOM serializer to use when putting content onto the\n//   clipboard. If not given, the result of\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)\n//   will be used.\n//\n//   clipboardTextSerializer:: ?(Slice) → string\n//   A function that will be called to get the text for the current\n//   selection when copying text to the clipboard. By default, the\n//   editor will use [`textBetween`](#model.Node.textBetween) on the\n//   selected range.\n//\n//   decorations:: ?(state: EditorState) → ?DecorationSource\n//   A set of [document decorations](#view.Decoration) to show in the\n//   view.\n//\n//   editable:: ?(state: EditorState) → bool\n//   When this returns false, the content of the view is not directly\n//   editable.\n//\n//   attributes:: ?union<Object<string>, (EditorState) → ?Object<string>>\n//   Control the DOM attributes of the editable element. May be either\n//   an object or a function going from an editor state to an object.\n//   By default, the element will get a class `\"ProseMirror\"`, and\n//   will have its `contentEditable` attribute determined by the\n//   [`editable` prop](#view.EditorProps.editable). Additional classes\n//   provided here will be added to the class. For other attributes,\n//   the value provided first (as in\n//   [`someProp`](#view.EditorView.someProp)) will be used.\n//\n//   scrollThreshold:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the distance (in pixels) between the cursor and the\n//   end of the visible viewport at which point, when scrolling the\n//   cursor into view, scrolling takes place. Defaults to 0.\n//\n//   scrollMargin:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the extra space (in pixels) that is left above or\n//   below the cursor when it is scrolled into view. Defaults to 5.\n\n// DirectEditorProps:: interface extends EditorProps\n//\n// The props object given directly to the editor view supports two\n// fields that can't be used in plugins:\n//\n//   state:: EditorState\n//   The current state of the editor.\n//\n//   plugins:: [Plugin]\n//   A set of plugins to use in the view, applying their [plugin\n//   view](#state.PluginSpec.view) and\n//   [props](#state.PluginSpec.props). Passing plugins with a state\n//   component (a [state field](#state.PluginSpec.state) field or a\n//   [transaction)[#state.PluginSpec.filterTransaction] filter or\n//   appender) will result in an error, since such plugins must be\n//   present in the state to work.\n//\n//   dispatchTransaction:: ?(tr: Transaction)\n//   The callback over which to send transactions (state updates)\n//   produced by the view. If you specify this, you probably want to\n//   make sure this ends up calling the view's\n//   [`updateState`](#view.EditorView.updateState) method with a new\n//   state that has the transaction\n//   [applied](#state.EditorState.apply). The callback will be bound to have\n//   the view instance as its `this` binding.\n\nexport { Decoration, DecorationSet, EditorView, endComposition as __endComposition, parseFromClipboard as __parseFromClipboard, serializeForClipboard as __serializeForClipboard };\n//# sourceMappingURL=index.es.js.map\n","import { Schema } from 'prosemirror-model';\n\nvar pDOM = [\"p\", 0], blockquoteDOM = [\"blockquote\", 0], hrDOM = [\"hr\"],\n      preDOM = [\"pre\", [\"code\", 0]], brDOM = [\"br\"];\n\n// :: Object\n// [Specs](#model.NodeSpec) for the nodes defined in this schema.\nvar nodes = {\n  // :: NodeSpec The top level document node.\n  doc: {\n    content: \"block+\"\n  },\n\n  // :: NodeSpec A plain paragraph textblock. Represented in the DOM\n  // as a `<p>` element.\n  paragraph: {\n    content: \"inline*\",\n    group: \"block\",\n    parseDOM: [{tag: \"p\"}],\n    toDOM: function toDOM() { return pDOM }\n  },\n\n  // :: NodeSpec A blockquote (`<blockquote>`) wrapping one or more blocks.\n  blockquote: {\n    content: \"block+\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [{tag: \"blockquote\"}],\n    toDOM: function toDOM() { return blockquoteDOM }\n  },\n\n  // :: NodeSpec A horizontal rule (`<hr>`).\n  horizontal_rule: {\n    group: \"block\",\n    parseDOM: [{tag: \"hr\"}],\n    toDOM: function toDOM() { return hrDOM }\n  },\n\n  // :: NodeSpec A heading textblock, with a `level` attribute that\n  // should hold the number 1 to 6. Parsed and serialized as `<h1>` to\n  // `<h6>` elements.\n  heading: {\n    attrs: {level: {default: 1}},\n    content: \"inline*\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [{tag: \"h1\", attrs: {level: 1}},\n               {tag: \"h2\", attrs: {level: 2}},\n               {tag: \"h3\", attrs: {level: 3}},\n               {tag: \"h4\", attrs: {level: 4}},\n               {tag: \"h5\", attrs: {level: 5}},\n               {tag: \"h6\", attrs: {level: 6}}],\n    toDOM: function toDOM(node) { return [\"h\" + node.attrs.level, 0] }\n  },\n\n  // :: NodeSpec A code listing. Disallows marks or non-text inline\n  // nodes by default. Represented as a `<pre>` element with a\n  // `<code>` element inside of it.\n  code_block: {\n    content: \"text*\",\n    marks: \"\",\n    group: \"block\",\n    code: true,\n    defining: true,\n    parseDOM: [{tag: \"pre\", preserveWhitespace: \"full\"}],\n    toDOM: function toDOM() { return preDOM }\n  },\n\n  // :: NodeSpec The text node.\n  text: {\n    group: \"inline\"\n  },\n\n  // :: NodeSpec An inline image (`<img>`) node. Supports `src`,\n  // `alt`, and `href` attributes. The latter two default to the empty\n  // string.\n  image: {\n    inline: true,\n    attrs: {\n      src: {},\n      alt: {default: null},\n      title: {default: null}\n    },\n    group: \"inline\",\n    draggable: true,\n    parseDOM: [{tag: \"img[src]\", getAttrs: function getAttrs(dom) {\n      return {\n        src: dom.getAttribute(\"src\"),\n        title: dom.getAttribute(\"title\"),\n        alt: dom.getAttribute(\"alt\")\n      }\n    }}],\n    toDOM: function toDOM(node) { var ref = node.attrs;\n    var src = ref.src;\n    var alt = ref.alt;\n    var title = ref.title; return [\"img\", {src: src, alt: alt, title: title}] }\n  },\n\n  // :: NodeSpec A hard line break, represented in the DOM as `<br>`.\n  hard_break: {\n    inline: true,\n    group: \"inline\",\n    selectable: false,\n    parseDOM: [{tag: \"br\"}],\n    toDOM: function toDOM() { return brDOM }\n  }\n};\n\nvar emDOM = [\"em\", 0], strongDOM = [\"strong\", 0], codeDOM = [\"code\", 0];\n\n// :: Object [Specs](#model.MarkSpec) for the marks in the schema.\nvar marks = {\n  // :: MarkSpec A link. Has `href` and `title` attributes. `title`\n  // defaults to the empty string. Rendered and parsed as an `<a>`\n  // element.\n  link: {\n    attrs: {\n      href: {},\n      title: {default: null}\n    },\n    inclusive: false,\n    parseDOM: [{tag: \"a[href]\", getAttrs: function getAttrs(dom) {\n      return {href: dom.getAttribute(\"href\"), title: dom.getAttribute(\"title\")}\n    }}],\n    toDOM: function toDOM(node) { var ref = node.attrs;\n    var href = ref.href;\n    var title = ref.title; return [\"a\", {href: href, title: title}, 0] }\n  },\n\n  // :: MarkSpec An emphasis mark. Rendered as an `<em>` element.\n  // Has parse rules that also match `<i>` and `font-style: italic`.\n  em: {\n    parseDOM: [{tag: \"i\"}, {tag: \"em\"}, {style: \"font-style=italic\"}],\n    toDOM: function toDOM() { return emDOM }\n  },\n\n  // :: MarkSpec A strong mark. Rendered as `<strong>`, parse rules\n  // also match `<b>` and `font-weight: bold`.\n  strong: {\n    parseDOM: [{tag: \"strong\"},\n               // This works around a Google Docs misbehavior where\n               // pasted content will be inexplicably wrapped in `<b>`\n               // tags with a font-weight normal.\n               {tag: \"b\", getAttrs: function (node) { return node.style.fontWeight != \"normal\" && null; }},\n               {style: \"font-weight\", getAttrs: function (value) { return /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null; }}],\n    toDOM: function toDOM() { return strongDOM }\n  },\n\n  // :: MarkSpec Code font mark. Represented as a `<code>` element.\n  code: {\n    parseDOM: [{tag: \"code\"}],\n    toDOM: function toDOM() { return codeDOM }\n  }\n};\n\n// :: Schema\n// This schema roughly corresponds to the document schema used by\n// [CommonMark](http://commonmark.org/), minus the list elements,\n// which are defined in the [`prosemirror-schema-list`](#schema-list)\n// module.\n//\n// To reuse elements from this schema, extend or read from its\n// `spec.nodes` and `spec.marks` [properties](#model.Schema.spec).\nvar schema = new Schema({nodes: nodes, marks: marks});\n\nexport { marks, nodes, schema };\n//# sourceMappingURL=index.es.js.map\n","import { findWrapping, ReplaceAroundStep, canSplit, liftTarget } from 'prosemirror-transform';\nimport { NodeRange, Fragment, Slice } from 'prosemirror-model';\n\nvar olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0];\n\n// :: NodeSpec\n// An ordered list [node spec](#model.NodeSpec). Has a single\n// attribute, `order`, which determines the number at which the list\n// starts counting, and defaults to 1. Represented as an `<ol>`\n// element.\nvar orderedList = {\n  attrs: {order: {default: 1}},\n  parseDOM: [{tag: \"ol\", getAttrs: function getAttrs(dom) {\n    return {order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1}\n  }}],\n  toDOM: function toDOM(node) {\n    return node.attrs.order == 1 ? olDOM : [\"ol\", {start: node.attrs.order}, 0]\n  }\n};\n\n// :: NodeSpec\n// A bullet list node spec, represented in the DOM as `<ul>`.\nvar bulletList = {\n  parseDOM: [{tag: \"ul\"}],\n  toDOM: function toDOM() { return ulDOM }\n};\n\n// :: NodeSpec\n// A list item (`<li>`) spec.\nvar listItem = {\n  parseDOM: [{tag: \"li\"}],\n  toDOM: function toDOM() { return liDOM },\n  defining: true\n};\n\nfunction add(obj, props) {\n  var copy = {};\n  for (var prop in obj) { copy[prop] = obj[prop]; }\n  for (var prop$1 in props) { copy[prop$1] = props[prop$1]; }\n  return copy\n}\n\n// :: (OrderedMap<NodeSpec>, string, ?string) → OrderedMap<NodeSpec>\n// Convenience function for adding list-related node types to a map\n// specifying the nodes for a schema. Adds\n// [`orderedList`](#schema-list.orderedList) as `\"ordered_list\"`,\n// [`bulletList`](#schema-list.bulletList) as `\"bullet_list\"`, and\n// [`listItem`](#schema-list.listItem) as `\"list_item\"`.\n//\n// `itemContent` determines the content expression for the list items.\n// If you want the commands defined in this module to apply to your\n// list structure, it should have a shape like `\"paragraph block*\"` or\n// `\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\n// given to assign a group name to the list node types, for example\n// `\"block\"`.\nfunction addListNodes(nodes, itemContent, listGroup) {\n  return nodes.append({\n    ordered_list: add(orderedList, {content: \"list_item+\", group: listGroup}),\n    bullet_list: add(bulletList, {content: \"list_item+\", group: listGroup}),\n    list_item: add(listItem, {content: itemContent})\n  })\n}\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command function that wraps the selection in a list with\n// the given type an attributes. If `dispatch` is null, only return a\n// value to indicate whether this is possible, but don't actually\n// perform the change.\nfunction wrapInList(listType, attrs) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var $from = ref.$from;\n    var $to = ref.$to;\n    var range = $from.blockRange($to), doJoin = false, outerRange = range;\n    if (!range) { return false }\n    // This is at the top of an existing list item\n    if (range.depth >= 2 && $from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n      // Don't do anything if this is the top of the list\n      if ($from.index(range.depth - 1) == 0) { return false }\n      var $insert = state.doc.resolve(range.start - 2);\n      outerRange = new NodeRange($insert, $insert, range.depth);\n      if (range.endIndex < range.parent.childCount)\n        { range = new NodeRange($from, state.doc.resolve($to.end(range.depth)), range.depth); }\n      doJoin = true;\n    }\n    var wrap = findWrapping(outerRange, listType, attrs, range);\n    if (!wrap) { return false }\n    if (dispatch) { dispatch(doWrapInList(state.tr, range, wrap, doJoin, listType).scrollIntoView()); }\n    return true\n  }\n}\n\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n  var content = Fragment.empty;\n  for (var i = wrappers.length - 1; i >= 0; i--)\n    { content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content)); }\n\n  tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end,\n                                new Slice(content, 0, 0), wrappers.length, true));\n\n  var found = 0;\n  for (var i$1 = 0; i$1 < wrappers.length; i$1++) { if (wrappers[i$1].type == listType) { found = i$1 + 1; } }\n  var splitDepth = wrappers.length - found;\n\n  var splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent;\n  for (var i$2 = range.startIndex, e = range.endIndex, first = true; i$2 < e; i$2++, first = false) {\n    if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n      tr.split(splitPos, splitDepth);\n      splitPos += 2 * splitDepth;\n    }\n    splitPos += parent.child(i$2).nodeSize;\n  }\n  return tr\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Build a command that splits a non-empty textblock at the top level\n// of a list item by also splitting that list item.\nfunction splitListItem(itemType) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var $from = ref.$from;\n    var $to = ref.$to;\n    var node = ref.node;\n    if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) { return false }\n    var grandParent = $from.node(-1);\n    if (grandParent.type != itemType) { return false }\n    if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n      // In an empty block. If this is a nested list, the wrapping\n      // list item should be split. Otherwise, bail out and let next\n      // command handle lifting.\n      if ($from.depth == 2 || $from.node(-3).type != itemType ||\n          $from.index(-2) != $from.node(-2).childCount - 1) { return false }\n      if (dispatch) {\n        var wrap = Fragment.empty;\n        var depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n        // Build a fragment containing empty versions of the structure\n        // from the outer list item to the parent node of the cursor\n        for (var d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n          { wrap = Fragment.from($from.node(d).copy(wrap)); }\n        var depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n            : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n        // Add a second list item with an empty default start node\n        wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n        var start = $from.before($from.depth - (depthBefore - 1));\n        var tr$1 = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n        var sel = -1;\n        tr$1.doc.nodesBetween(start, tr$1.doc.content.size, function (node, pos) {\n          if (sel > -1) { return false }\n          if (node.isTextblock && node.content.size == 0) { sel = pos + 1; }\n        });\n        if (sel > -1) { tr$1.setSelection(state.selection.constructor.near(tr$1.doc.resolve(sel))); }\n        dispatch(tr$1.scrollIntoView());\n      }\n      return true\n    }\n    var nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n    var tr = state.tr.delete($from.pos, $to.pos);\n    var types = nextType && [null, {type: nextType}];\n    if (!canSplit(tr.doc, $from.pos, 2, types)) { return false }\n    if (dispatch) { dispatch(tr.split($from.pos, 2, types).scrollIntoView()); }\n    return true\n  }\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command to lift the list item around the selection up into\n// a wrapping list.\nfunction liftListItem(itemType) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var $from = ref.$from;\n    var $to = ref.$to;\n    var range = $from.blockRange($to, function (node) { return node.childCount && node.firstChild.type == itemType; });\n    if (!range) { return false }\n    if (!dispatch) { return true }\n    if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n      { return liftToOuterList(state, dispatch, itemType, range) }\n    else // Outer list node\n      { return liftOutOfList(state, dispatch, range) }\n  }\n}\n\nfunction liftToOuterList(state, dispatch, itemType, range) {\n  var tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth);\n  if (end < endOfList) {\n    // There are siblings after the lifted items, which must become\n    // children of the last item\n    tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList,\n                                  new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true));\n    range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth);\n  }\n  dispatch(tr.lift(range, liftTarget(range)).scrollIntoView());\n  return true\n}\n\nfunction liftOutOfList(state, dispatch, range) {\n  var tr = state.tr, list = range.parent;\n  // Merge the list items into a single big item\n  for (var pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n    pos -= list.child(i).nodeSize;\n    tr.delete(pos - 1, pos + 1);\n  }\n  var $start = tr.doc.resolve(range.start), item = $start.nodeAfter;\n  if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize) { return false }\n  var atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount;\n  var parent = $start.node(-1), indexBefore = $start.index(-1);\n  if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1,\n                         item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n    { return false }\n  var start = $start.pos, end = start + item.nodeSize;\n  // Strip off the surrounding list. At the sides where we're not at\n  // the end of the list, the existing list is closed. At sides where\n  // this is the end, it is overwritten to its end.\n  tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1,\n                                new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n                                          .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))),\n                                          atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1));\n  dispatch(tr.scrollIntoView());\n  return true\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command to sink the list item around the selection down\n// into an inner list.\nfunction sinkListItem(itemType) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var $from = ref.$from;\n    var $to = ref.$to;\n    var range = $from.blockRange($to, function (node) { return node.childCount && node.firstChild.type == itemType; });\n    if (!range) { return false }\n    var startIndex = range.startIndex;\n    if (startIndex == 0) { return false }\n    var parent = range.parent, nodeBefore = parent.child(startIndex - 1);\n    if (nodeBefore.type != itemType) { return false }\n\n    if (dispatch) {\n      var nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type;\n      var inner = Fragment.from(nestedBefore ? itemType.create() : null);\n      var slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))),\n                            nestedBefore ? 3 : 1, 0);\n      var before = range.start, after = range.end;\n      dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after,\n                                                   before, after, slice, 1, true))\n               .scrollIntoView());\n    }\n    return true\n  }\n}\n\nexport { addListNodes, bulletList, liftListItem, listItem, orderedList, sinkListItem, splitListItem, wrapInList };\n//# sourceMappingURL=index.es.js.map\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    (safari || ie) && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\n// declare global: navigator\n\nvar mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform) : false;\n\nfunction normalizeKeyName(name) {\n  var parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n  if (result == \"Space\") { result = \" \"; }\n  var alt, ctrl, shift, meta;\n  for (var i = 0; i < parts.length - 1; i++) {\n    var mod = parts[i];\n    if (/^(cmd|meta|m)$/i.test(mod)) { meta = true; }\n    else if (/^a(lt)?$/i.test(mod)) { alt = true; }\n    else if (/^(c|ctrl|control)$/i.test(mod)) { ctrl = true; }\n    else if (/^s(hift)?$/i.test(mod)) { shift = true; }\n    else if (/^mod$/i.test(mod)) { if (mac) { meta = true; } else { ctrl = true; } }\n    else { throw new Error(\"Unrecognized modifier name: \" + mod) }\n  }\n  if (alt) { result = \"Alt-\" + result; }\n  if (ctrl) { result = \"Ctrl-\" + result; }\n  if (meta) { result = \"Meta-\" + result; }\n  if (shift) { result = \"Shift-\" + result; }\n  return result\n}\n\nfunction normalize(map) {\n  var copy = Object.create(null);\n  for (var prop in map) { copy[normalizeKeyName(prop)] = map[prop]; }\n  return copy\n}\n\nfunction modifiers(name, event, shift) {\n  if (event.altKey) { name = \"Alt-\" + name; }\n  if (event.ctrlKey) { name = \"Ctrl-\" + name; }\n  if (event.metaKey) { name = \"Meta-\" + name; }\n  if (shift !== false && event.shiftKey) { name = \"Shift-\" + name; }\n  return name\n}\n\n// :: (Object) → Plugin\n// Create a keymap plugin for the given set of bindings.\n//\n// Bindings should map key names to [command](#commands)-style\n// functions, which will be called with `(EditorState, dispatch,\n// EditorView)` arguments, and should return true when they've handled\n// the key. Note that the view argument isn't part of the command\n// protocol, but can be used as an escape hatch if a binding needs to\n// directly interact with the UI.\n//\n// Key names may be strings like `\"Shift-Ctrl-Enter\"`—a key\n// identifier prefixed with zero or more modifiers. Key identifiers\n// are based on the strings that can appear in\n// [`KeyEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\n// Use lowercase letters to refer to letter keys (or uppercase letters\n// if you want shift to be held). You may use `\"Space\"` as an alias\n// for the `\" \"` name.\n//\n// Modifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n// `a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n// `Meta-`) are recognized. For characters that are created by holding\n// shift, the `Shift-` prefix is implied, and should not be added\n// explicitly.\n//\n// You can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\n// other platforms.\n//\n// You can add multiple keymap plugins to an editor. The order in\n// which they appear determines their precedence (the ones early in\n// the array get to dispatch first).\nfunction keymap(bindings) {\n  return new Plugin({props: {handleKeyDown: keydownHandler(bindings)}})\n}\n\n// :: (Object) → (view: EditorView, event: dom.Event) → bool\n// Given a set of bindings (using the same format as\n// [`keymap`](#keymap.keymap), return a [keydown\n// handler](#view.EditorProps.handleKeyDown) that handles them.\nfunction keydownHandler(bindings) {\n  var map = normalize(bindings);\n  return function(view, event) {\n    var name = keyName(event), isChar = name.length == 1 && name != \" \", baseName;\n    var direct = map[modifiers(name, event, !isChar)];\n    if (direct && direct(view.state, view.dispatch, view)) { return true }\n    if (isChar && (event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n        (baseName = base[event.keyCode]) && baseName != name) {\n      // Try falling back to the keyCode when there's a modifier\n      // active or the character produced isn't ASCII, and our table\n      // produces a different name from the the keyCode. See #668,\n      // #1060\n      var fromCode = map[modifiers(baseName, event, true)];\n      if (fromCode && fromCode(view.state, view.dispatch, view)) { return true }\n    } else if (isChar && event.shiftKey) {\n      // Otherwise, if shift is active, also try the binding with the\n      // Shift- prefix enabled. See #997\n      var withShift = map[modifiers(name, event, true)];\n      if (withShift && withShift(view.state, view.dispatch, view)) { return true }\n    }\n    return false\n  }\n}\n\nexport { keydownHandler, keymap };\n//# sourceMappingURL=index.es.js.map\n","var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nvar ropeSequence = RopeSequence;\n\nexport default ropeSequence;\n","import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n\n// Used to schedule history compression\nvar max_empty_items = 500;\n\nvar Branch = function Branch(items, eventCount) {\n  this.items = items;\n  this.eventCount = eventCount;\n};\n\n// : (EditorState, bool) → ?{transform: Transform, selection: ?SelectionBookmark, remaining: Branch}\n// Pop the latest event off the branch's history and apply it\n// to a document transform.\nBranch.prototype.popEvent = function popEvent (state, preserveItems) {\n    var this$1 = this;\n\n  if (this.eventCount == 0) { return null }\n\n  var end = this.items.length;\n  for (;; end--) {\n    var next = this.items.get(end - 1);\n    if (next.selection) { --end; break }\n  }\n\n  var remap, mapFrom;\n  if (preserveItems) {\n    remap = this.remapping(end, this.items.length);\n    mapFrom = remap.maps.length;\n  }\n  var transform = state.tr;\n  var selection, remaining;\n  var addAfter = [], addBefore = [];\n\n  this.items.forEach(function (item, i) {\n    if (!item.step) {\n      if (!remap) {\n        remap = this$1.remapping(end, i + 1);\n        mapFrom = remap.maps.length;\n      }\n      mapFrom--;\n      addBefore.push(item);\n      return\n    }\n\n    if (remap) {\n      addBefore.push(new Item(item.map));\n      var step = item.step.map(remap.slice(mapFrom)), map;\n\n      if (step && transform.maybeStep(step).doc) {\n        map = transform.mapping.maps[transform.mapping.maps.length - 1];\n        addAfter.push(new Item(map, null, null, addAfter.length + addBefore.length));\n      }\n      mapFrom--;\n      if (map) { remap.appendMap(map, mapFrom); }\n    } else {\n      transform.maybeStep(item.step);\n    }\n\n    if (item.selection) {\n      selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n      remaining = new Branch(this$1.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this$1.eventCount - 1);\n      return false\n    }\n  }, this.items.length, 0);\n\n  return {remaining: remaining, transform: transform, selection: selection}\n};\n\n// : (Transform, ?SelectionBookmark, Object) → Branch\n// Create a new branch with the given transform added.\nBranch.prototype.addTransform = function addTransform (transform, selection, histOptions, preserveItems) {\n  var newItems = [], eventCount = this.eventCount;\n  var oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n\n  for (var i = 0; i < transform.steps.length; i++) {\n    var step = transform.steps[i].invert(transform.docs[i]);\n    var item = new Item(transform.mapping.maps[i], step, selection), merged = (void 0);\n    if (merged = lastItem && lastItem.merge(item)) {\n      item = merged;\n      if (i) { newItems.pop(); }\n      else { oldItems = oldItems.slice(0, oldItems.length - 1); }\n    }\n    newItems.push(item);\n    if (selection) {\n      eventCount++;\n      selection = null;\n    }\n    if (!preserveItems) { lastItem = item; }\n  }\n  var overflow = eventCount - histOptions.depth;\n  if (overflow > DEPTH_OVERFLOW) {\n    oldItems = cutOffEvents(oldItems, overflow);\n    eventCount -= overflow;\n  }\n  return new Branch(oldItems.append(newItems), eventCount)\n};\n\nBranch.prototype.remapping = function remapping (from, to) {\n  var maps = new Mapping;\n  this.items.forEach(function (item, i) {\n    var mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n        ? maps.maps.length - item.mirrorOffset : null;\n    maps.appendMap(item.map, mirrorPos);\n  }, from, to);\n  return maps\n};\n\nBranch.prototype.addMaps = function addMaps (array) {\n  if (this.eventCount == 0) { return this }\n  return new Branch(this.items.append(array.map(function (map) { return new Item(map); })), this.eventCount)\n};\n\n// : (Transform, number)\n// When the collab module receives remote changes, the history has\n// to know about those, so that it can adjust the steps that were\n// rebased on top of the remote changes, and include the position\n// maps for the remote changes in its array of items.\nBranch.prototype.rebased = function rebased (rebasedTransform, rebasedCount) {\n  if (!this.eventCount) { return this }\n\n  var rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount);\n\n  var mapping = rebasedTransform.mapping;\n  var newUntil = rebasedTransform.steps.length;\n  var eventCount = this.eventCount;\n  this.items.forEach(function (item) { if (item.selection) { eventCount--; } }, start);\n\n  var iRebased = rebasedCount;\n  this.items.forEach(function (item) {\n    var pos = mapping.getMirror(--iRebased);\n    if (pos == null) { return }\n    newUntil = Math.min(newUntil, pos);\n    var map = mapping.maps[pos];\n    if (item.step) {\n      var step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n      var selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n      if (selection) { eventCount++; }\n      rebasedItems.push(new Item(map, step, selection));\n    } else {\n      rebasedItems.push(new Item(map));\n    }\n  }, start);\n\n  var newMaps = [];\n  for (var i = rebasedCount; i < newUntil; i++)\n    { newMaps.push(new Item(mapping.maps[i])); }\n  var items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n  var branch = new Branch(items, eventCount);\n\n  if (branch.emptyItemCount() > max_empty_items)\n    { branch = branch.compress(this.items.length - rebasedItems.length); }\n  return branch\n};\n\nBranch.prototype.emptyItemCount = function emptyItemCount () {\n  var count = 0;\n  this.items.forEach(function (item) { if (!item.step) { count++; } });\n  return count\n};\n\n// Compressing a branch means rewriting it to push the air (map-only\n// items) out. During collaboration, these naturally accumulate\n// because each remote change adds one. The `upto` argument is used\n// to ensure that only the items below a given level are compressed,\n// because `rebased` relies on a clean, untouched set of items in\n// order to associate old items with rebased steps.\nBranch.prototype.compress = function compress (upto) {\n    if ( upto === void 0 ) upto = this.items.length;\n\n  var remap = this.remapping(0, upto), mapFrom = remap.maps.length;\n  var items = [], events = 0;\n  this.items.forEach(function (item, i) {\n    if (i >= upto) {\n      items.push(item);\n      if (item.selection) { events++; }\n    } else if (item.step) {\n      var step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap();\n      mapFrom--;\n      if (map) { remap.appendMap(map, mapFrom); }\n      if (step) {\n        var selection = item.selection && item.selection.map(remap.slice(mapFrom));\n        if (selection) { events++; }\n        var newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1;\n        if (merged = items.length && items[last].merge(newItem))\n          { items[last] = merged; }\n        else\n          { items.push(newItem); }\n      }\n    } else if (item.map) {\n      mapFrom--;\n    }\n  }, this.items.length, 0);\n  return new Branch(RopeSequence.from(items.reverse()), events)\n};\n\nBranch.empty = new Branch(RopeSequence.empty, 0);\n\nfunction cutOffEvents(items, n) {\n  var cutPoint;\n  items.forEach(function (item, i) {\n    if (item.selection && (n-- == 0)) {\n      cutPoint = i;\n      return false\n    }\n  });\n  return items.slice(cutPoint)\n}\n\nvar Item = function Item(map, step, selection, mirrorOffset) {\n  // The (forward) step map for this item.\n  this.map = map;\n  // The inverted step\n  this.step = step;\n  // If this is non-null, this item is the start of a group, and\n  // this selection is the starting selection for the group (the one\n  // that was active before the first step was applied)\n  this.selection = selection;\n  // If this item is the inverse of a previous mapping on the stack,\n  // this points at the inverse's offset\n  this.mirrorOffset = mirrorOffset;\n};\n\nItem.prototype.merge = function merge (other) {\n  if (this.step && other.step && !other.selection) {\n    var step = other.step.merge(this.step);\n    if (step) { return new Item(step.getMap().invert(), step, this.selection) }\n  }\n};\n\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nvar HistoryState = function HistoryState(done, undone, prevRanges, prevTime) {\n  this.done = done;\n  this.undone = undone;\n  this.prevRanges = prevRanges;\n  this.prevTime = prevTime;\n};\n\nvar DEPTH_OVERFLOW = 20;\n\n// : (HistoryState, EditorState, Transaction, Object)\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n  var historyTr = tr.getMeta(historyKey), rebased;\n  if (historyTr) { return historyTr.historyState }\n\n  if (tr.getMeta(closeHistoryKey)) { history = new HistoryState(history.done, history.undone, null, 0); }\n\n  var appended = tr.getMeta(\"appendedTransaction\");\n\n  if (tr.steps.length == 0) {\n    return history\n  } else if (appended && appended.getMeta(historyKey)) {\n    if (appended.getMeta(historyKey).redo)\n      { return new HistoryState(history.done.addTransform(tr, null, options, mustPreserveItems(state)),\n                              history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime) }\n    else\n      { return new HistoryState(history.done, history.undone.addTransform(tr, null, options, mustPreserveItems(state)),\n                              null, history.prevTime) }\n  } else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n    // Group transforms that occur in quick succession into one event.\n    var newGroup = history.prevTime == 0 || !appended && (history.prevTime < (tr.time || 0) - options.newGroupDelay ||\n                                                          !isAdjacentTo(tr, history.prevRanges));\n    var prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1]);\n    return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : null,\n                                                      options, mustPreserveItems(state)),\n                            Branch.empty, prevRanges, tr.time)\n  } else if (rebased = tr.getMeta(\"rebased\")) {\n    // Used by the collab module to tell the history that some of its\n    // content has been rebased.\n    return new HistoryState(history.done.rebased(tr, rebased),\n                            history.undone.rebased(tr, rebased),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  } else {\n    return new HistoryState(history.done.addMaps(tr.mapping.maps),\n                            history.undone.addMaps(tr.mapping.maps),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  }\n}\n\nfunction isAdjacentTo(transform, prevRanges) {\n  if (!prevRanges) { return false }\n  if (!transform.docChanged) { return true }\n  var adjacent = false;\n  transform.mapping.maps[0].forEach(function (start, end) {\n    for (var i = 0; i < prevRanges.length; i += 2)\n      { if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n        { adjacent = true; } }\n  });\n  return adjacent\n}\n\nfunction rangesFor(map) {\n  var result = [];\n  map.forEach(function (_from, _to, from, to) { return result.push(from, to); });\n  return result\n}\n\nfunction mapRanges(ranges, mapping) {\n  if (!ranges) { return null }\n  var result = [];\n  for (var i = 0; i < ranges.length; i += 2) {\n    var from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1);\n    if (from <= to) { result.push(from, to); }\n  }\n  return result\n}\n\n// : (HistoryState, EditorState, (tr: Transaction), bool)\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n  var preserveItems = mustPreserveItems(state), histOptions = historyKey.get(state).spec.config;\n  var pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n  if (!pop) { return }\n\n  var selection = pop.selection.resolve(pop.transform.doc);\n  var added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(),\n                                                                  histOptions, preserveItems);\n\n  var newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0);\n  dispatch(pop.transform.setSelection(selection).setMeta(historyKey, {redo: redo, historyState: newHist}).scrollIntoView());\n}\n\nvar cachedPreserveItems = false, cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n  var plugins = state.plugins;\n  if (cachedPreserveItemsPlugins != plugins) {\n    cachedPreserveItems = false;\n    cachedPreserveItemsPlugins = plugins;\n    for (var i = 0; i < plugins.length; i++) { if (plugins[i].spec.historyPreserveItems) {\n      cachedPreserveItems = true;\n      break\n    } }\n  }\n  return cachedPreserveItems\n}\n\n// :: (Transaction) → Transaction\n// Set a flag on the given transaction that will prevent further steps\n// from being appended to an existing history event (so that they\n// require a separate undo command to undo).\nfunction closeHistory(tr) {\n  return tr.setMeta(closeHistoryKey, true)\n}\n\nvar historyKey = new PluginKey(\"history\");\nvar closeHistoryKey = new PluginKey(\"closeHistory\");\n\n// :: (?Object) → Plugin\n// Returns a plugin that enables the undo history for an editor. The\n// plugin will track undo and redo stacks, which can be used with the\n// [`undo`](#history.undo) and [`redo`](#history.redo) commands.\n//\n// You can set an `\"addToHistory\"` [metadata\n// property](#state.Transaction.setMeta) of `false` on a transaction\n// to prevent it from being rolled back by undo.\n//\n//   config::-\n//   Supports the following configuration options:\n//\n//     depth:: ?number\n//     The amount of history events that are collected before the\n//     oldest events are discarded. Defaults to 100.\n//\n//     newGroupDelay:: ?number\n//     The delay between changes after which a new group should be\n//     started. Defaults to 500 (milliseconds). Note that when changes\n//     aren't adjacent, a new group is always started.\nfunction history(config) {\n  config = {depth: config && config.depth || 100,\n            newGroupDelay: config && config.newGroupDelay || 500};\n  return new Plugin({\n    key: historyKey,\n\n    state: {\n      init: function init() {\n        return new HistoryState(Branch.empty, Branch.empty, null, 0)\n      },\n      apply: function apply(tr, hist, state) {\n        return applyTransaction(hist, state, tr, config)\n      }\n    },\n\n    config: config,\n\n    props: {\n      handleDOMEvents: {\n        beforeinput: function beforeinput(view, e) {\n          var handled = e.inputType == \"historyUndo\" ? undo(view.state, view.dispatch) :\n              e.inputType == \"historyRedo\" ? redo(view.state, view.dispatch) : false;\n          if (handled) { e.preventDefault(); }\n          return handled\n        }\n      }\n    }\n  })\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that undoes the last change, if any.\nfunction undo(state, dispatch) {\n  var hist = historyKey.getState(state);\n  if (!hist || hist.done.eventCount == 0) { return false }\n  if (dispatch) { histTransaction(hist, state, dispatch, false); }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that redoes the last undone change, if any.\nfunction redo(state, dispatch) {\n  var hist = historyKey.getState(state);\n  if (!hist || hist.undone.eventCount == 0) { return false }\n  if (dispatch) { histTransaction(hist, state, dispatch, true); }\n  return true\n}\n\n// :: (EditorState) → number\n// The amount of undoable events available in a given state.\nfunction undoDepth(state) {\n  var hist = historyKey.getState(state);\n  return hist ? hist.done.eventCount : 0\n}\n\n// :: (EditorState) → number\n// The amount of redoable events available in a given editor state.\nfunction redoDepth(state) {\n  var hist = historyKey.getState(state);\n  return hist ? hist.undone.eventCount : 0\n}\n\nexport { HistoryState, closeHistory, history, redo, redoDepth, undo, undoDepth };\n//# sourceMappingURL=index.es.js.map\n","import { liftTarget, canJoin, joinPoint, canSplit, ReplaceAroundStep, findWrapping } from 'prosemirror-transform';\nimport { Fragment, Slice } from 'prosemirror-model';\nimport { NodeSelection, Selection, AllSelection, TextSelection } from 'prosemirror-state';\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Delete the selection, if there is one.\nfunction deleteSelection(state, dispatch) {\n  if (state.selection.empty) { return false }\n  if (dispatch) { dispatch(state.tr.deleteSelection().scrollIntoView()); }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// If the selection is empty and at the start of a textblock, try to\n// reduce the distance between that block and the one before it—if\n// there's a block directly before it that can be joined, join them.\n// If not, try to move the selected block closer to the next one in\n// the document structure by lifting it out of its parent or moving it\n// into a parent of the previous block. Will use the view for accurate\n// (bidi-aware) start-of-textblock detection if given.\nfunction joinBackward(state, dispatch, view) {\n  var ref = state.selection;\n  var $cursor = ref.$cursor;\n  if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n                        : $cursor.parentOffset > 0))\n    { return false }\n\n  var $cut = findCutBefore($cursor);\n\n  // If there is no node before this, try to lift\n  if (!$cut) {\n    var range = $cursor.blockRange(), target = range && liftTarget(range);\n    if (target == null) { return false }\n    if (dispatch) { dispatch(state.tr.lift(range, target).scrollIntoView()); }\n    return true\n  }\n\n  var before = $cut.nodeBefore;\n  // Apply the joining algorithm\n  if (!before.type.spec.isolating && deleteBarrier(state, $cut, dispatch))\n    { return true }\n\n  // If the node below has no content and the node above is\n  // selectable, delete the node below and select the one above.\n  if ($cursor.parent.content.size == 0 &&\n      (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n    if (dispatch) {\n      var tr = state.tr.deleteRange($cursor.before(), $cursor.after());\n      tr.setSelection(textblockAt(before, \"end\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                      : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize));\n      dispatch(tr.scrollIntoView());\n    }\n    return true\n  }\n\n  // If the node before is an atom, delete it\n  if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n    if (dispatch) { dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView()); }\n    return true\n  }\n\n  return false\n}\n\nfunction textblockAt(node, side, only) {\n  for (; node; node = (side == \"start\" ? node.firstChild : node.lastChild)) {\n    if (node.isTextblock) { return true }\n    if (only && node.childCount != 1) { return false }\n  }\n  return false\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// When the selection is empty and at the start of a textblock, select\n// the node before that textblock, if possible. This is intended to be\n// bound to keys like backspace, after\n// [`joinBackward`](#commands.joinBackward) or other deleting\n// commands, as a fall-back behavior when the schema doesn't allow\n// deletion at the selected point.\nfunction selectNodeBackward(state, dispatch, view) {\n  var ref = state.selection;\n  var $head = ref.$head;\n  var empty = ref.empty;\n  var $cut = $head;\n  if (!empty) { return false }\n\n  if ($head.parent.isTextblock) {\n    if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0) { return false }\n    $cut = findCutBefore($head);\n  }\n  var node = $cut && $cut.nodeBefore;\n  if (!node || !NodeSelection.isSelectable(node)) { return false }\n  if (dispatch)\n    { dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView()); }\n  return true\n}\n\nfunction findCutBefore($pos) {\n  if (!$pos.parent.type.spec.isolating) { for (var i = $pos.depth - 1; i >= 0; i--) {\n    if ($pos.index(i) > 0) { return $pos.doc.resolve($pos.before(i + 1)) }\n    if ($pos.node(i).type.spec.isolating) { break }\n  } }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// If the selection is empty and the cursor is at the end of a\n// textblock, try to reduce or remove the boundary between that block\n// and the one after it, either by joining them or by moving the other\n// block closer to this one in the tree structure. Will use the view\n// for accurate start-of-textblock detection if given.\nfunction joinForward(state, dispatch, view) {\n  var ref = state.selection;\n  var $cursor = ref.$cursor;\n  if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n                        : $cursor.parentOffset < $cursor.parent.content.size))\n    { return false }\n\n  var $cut = findCutAfter($cursor);\n\n  // If there is no node after this, there's nothing to do\n  if (!$cut) { return false }\n\n  var after = $cut.nodeAfter;\n  // Try the joining algorithm\n  if (deleteBarrier(state, $cut, dispatch)) { return true }\n\n  // If the node above has no content and the node below is\n  // selectable, delete the node above and select the one below.\n  if ($cursor.parent.content.size == 0 &&\n      (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n    if (dispatch) {\n      var tr = state.tr.deleteRange($cursor.before(), $cursor.after());\n      tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                      : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)));\n      dispatch(tr.scrollIntoView());\n    }\n    return true\n  }\n\n  // If the next node is an atom, delete it\n  if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n    if (dispatch) { dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView()); }\n    return true\n  }\n\n  return false\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// When the selection is empty and at the end of a textblock, select\n// the node coming after that textblock, if possible. This is intended\n// to be bound to keys like delete, after\n// [`joinForward`](#commands.joinForward) and similar deleting\n// commands, to provide a fall-back behavior when the schema doesn't\n// allow deletion at the selected point.\nfunction selectNodeForward(state, dispatch, view) {\n  var ref = state.selection;\n  var $head = ref.$head;\n  var empty = ref.empty;\n  var $cut = $head;\n  if (!empty) { return false }\n  if ($head.parent.isTextblock) {\n    if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n      { return false }\n    $cut = findCutAfter($head);\n  }\n  var node = $cut && $cut.nodeAfter;\n  if (!node || !NodeSelection.isSelectable(node)) { return false }\n  if (dispatch)\n    { dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView()); }\n  return true\n}\n\nfunction findCutAfter($pos) {\n  if (!$pos.parent.type.spec.isolating) { for (var i = $pos.depth - 1; i >= 0; i--) {\n    var parent = $pos.node(i);\n    if ($pos.index(i) + 1 < parent.childCount) { return $pos.doc.resolve($pos.after(i + 1)) }\n    if (parent.type.spec.isolating) { break }\n  } }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Join the selected block or, if there is a text selection, the\n// closest ancestor block of the selection that can be joined, with\n// the sibling above it.\nfunction joinUp(state, dispatch) {\n  var sel = state.selection, nodeSel = sel instanceof NodeSelection, point;\n  if (nodeSel) {\n    if (sel.node.isTextblock || !canJoin(state.doc, sel.from)) { return false }\n    point = sel.from;\n  } else {\n    point = joinPoint(state.doc, sel.from, -1);\n    if (point == null) { return false }\n  }\n  if (dispatch) {\n    var tr = state.tr.join(point);\n    if (nodeSel) { tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize)); }\n    dispatch(tr.scrollIntoView());\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Join the selected block, or the closest ancestor of the selection\n// that can be joined, with the sibling after it.\nfunction joinDown(state, dispatch) {\n  var sel = state.selection, point;\n  if (sel instanceof NodeSelection) {\n    if (sel.node.isTextblock || !canJoin(state.doc, sel.to)) { return false }\n    point = sel.to;\n  } else {\n    point = joinPoint(state.doc, sel.to, 1);\n    if (point == null) { return false }\n  }\n  if (dispatch)\n    { dispatch(state.tr.join(point).scrollIntoView()); }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Lift the selected block, or the closest ancestor block of the\n// selection that can be lifted, out of its parent node.\nfunction lift(state, dispatch) {\n  var ref = state.selection;\n  var $from = ref.$from;\n  var $to = ref.$to;\n  var range = $from.blockRange($to), target = range && liftTarget(range);\n  if (target == null) { return false }\n  if (dispatch) { dispatch(state.tr.lift(range, target).scrollIntoView()); }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If the selection is in a node whose type has a truthy\n// [`code`](#model.NodeSpec.code) property in its spec, replace the\n// selection with a newline character.\nfunction newlineInCode(state, dispatch) {\n  var ref = state.selection;\n  var $head = ref.$head;\n  var $anchor = ref.$anchor;\n  if (!$head.parent.type.spec.code || !$head.sameParent($anchor)) { return false }\n  if (dispatch) { dispatch(state.tr.insertText(\"\\n\").scrollIntoView()); }\n  return true\n}\n\nfunction defaultBlockAt(match) {\n  for (var i = 0; i < match.edgeCount; i++) {\n    var ref = match.edge(i);\n    var type = ref.type;\n    if (type.isTextblock && !type.hasRequiredAttrs()) { return type }\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// When the selection is in a node with a truthy\n// [`code`](#model.NodeSpec.code) property in its spec, create a\n// default block after the code block, and move the cursor there.\nfunction exitCode(state, dispatch) {\n  var ref = state.selection;\n  var $head = ref.$head;\n  var $anchor = ref.$anchor;\n  if (!$head.parent.type.spec.code || !$head.sameParent($anchor)) { return false }\n  var above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after));\n  if (!above.canReplaceWith(after, after, type)) { return false }\n  if (dispatch) {\n    var pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill());\n    tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n    dispatch(tr.scrollIntoView());\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If a block node is selected, create an empty paragraph before (if\n// it is its parent's first child) or after it.\nfunction createParagraphNear(state, dispatch) {\n  var sel = state.selection;\n  var $from = sel.$from;\n  var $to = sel.$to;\n  if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent) { return false }\n  var type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()));\n  if (!type || !type.isTextblock) { return false }\n  if (dispatch) {\n    var side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos;\n    var tr = state.tr.insert(side, type.createAndFill());\n    tr.setSelection(TextSelection.create(tr.doc, side + 1));\n    dispatch(tr.scrollIntoView());\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If the cursor is in an empty textblock that can be lifted, lift the\n// block.\nfunction liftEmptyBlock(state, dispatch) {\n  var ref = state.selection;\n  var $cursor = ref.$cursor;\n  if (!$cursor || $cursor.parent.content.size) { return false }\n  if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n    var before = $cursor.before();\n    if (canSplit(state.doc, before)) {\n      if (dispatch) { dispatch(state.tr.split(before).scrollIntoView()); }\n      return true\n    }\n  }\n  var range = $cursor.blockRange(), target = range && liftTarget(range);\n  if (target == null) { return false }\n  if (dispatch) { dispatch(state.tr.lift(range, target).scrollIntoView()); }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Split the parent block of the selection. If the selection is a text\n// selection, also delete its content.\nfunction splitBlock(state, dispatch) {\n  var ref = state.selection;\n  var $from = ref.$from;\n  var $to = ref.$to;\n  if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n    if (!$from.parentOffset || !canSplit(state.doc, $from.pos)) { return false }\n    if (dispatch) { dispatch(state.tr.split($from.pos).scrollIntoView()); }\n    return true\n  }\n\n  if (!$from.parent.isBlock) { return false }\n\n  if (dispatch) {\n    var atEnd = $to.parentOffset == $to.parent.content.size;\n    var tr = state.tr;\n    if (state.selection instanceof TextSelection || state.selection instanceof AllSelection) { tr.deleteSelection(); }\n    var deflt = $from.depth == 0 ? null : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)));\n    var types = atEnd && deflt ? [{type: deflt}] : null;\n    var can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\n    if (!types && !can && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt && [{type: deflt}])) {\n      types = [{type: deflt}];\n      can = true;\n    }\n    if (can) {\n      tr.split(tr.mapping.map($from.pos), 1, types);\n      if (!atEnd && !$from.parentOffset && $from.parent.type != deflt) {\n        var first = tr.mapping.map($from.before()), $first = tr.doc.resolve(first);\n        if ($from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n          { tr.setNodeMarkup(tr.mapping.map($from.before()), deflt); }\n      }\n    }\n    dispatch(tr.scrollIntoView());\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Acts like [`splitBlock`](#commands.splitBlock), but without\n// resetting the set of active marks at the cursor.\nfunction splitBlockKeepMarks(state, dispatch) {\n  return splitBlock(state, dispatch && (function (tr) {\n    var marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n    if (marks) { tr.ensureMarks(marks); }\n    dispatch(tr);\n  }))\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Move the selection to the node wrapping the current selection, if\n// any. (Will not select the document node.)\nfunction selectParentNode(state, dispatch) {\n  var ref = state.selection;\n  var $from = ref.$from;\n  var to = ref.to;\n  var pos;\n  var same = $from.sharedDepth(to);\n  if (same == 0) { return false }\n  pos = $from.before(same);\n  if (dispatch) { dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos))); }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Select the whole document.\nfunction selectAll(state, dispatch) {\n  if (dispatch) { dispatch(state.tr.setSelection(new AllSelection(state.doc))); }\n  return true\n}\n\nfunction joinMaybeClear(state, $pos, dispatch) {\n  var before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index();\n  if (!before || !after || !before.type.compatibleContent(after.type)) { return false }\n  if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n    if (dispatch) { dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView()); }\n    return true\n  }\n  if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n    { return false }\n  if (dispatch)\n    { dispatch(state.tr\n             .clearIncompatible($pos.pos, before.type, before.contentMatchAt(before.childCount))\n             .join($pos.pos)\n             .scrollIntoView()); }\n  return true\n}\n\nfunction deleteBarrier(state, $cut, dispatch) {\n  var before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match;\n  if (before.type.spec.isolating || after.type.spec.isolating) { return false }\n  if (joinMaybeClear(state, $cut, dispatch)) { return true }\n\n  var canDelAfter = $cut.parent.canReplace($cut.index(), $cut.index() + 1);\n  if (canDelAfter &&\n      (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n      match.matchType(conn[0] || after.type).validEnd) {\n    if (dispatch) {\n      var end = $cut.pos + after.nodeSize, wrap = Fragment.empty;\n      for (var i = conn.length - 1; i >= 0; i--)\n        { wrap = Fragment.from(conn[i].create(null, wrap)); }\n      wrap = Fragment.from(before.copy(wrap));\n      var tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true));\n      var joinAt = end + 2 * conn.length;\n      if (canJoin(tr.doc, joinAt)) { tr.join(joinAt); }\n      dispatch(tr.scrollIntoView());\n    }\n    return true\n  }\n\n  var selAfter = Selection.findFrom($cut, 1);\n  var range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range);\n  if (target != null && target >= $cut.depth) {\n    if (dispatch) { dispatch(state.tr.lift(range, target).scrollIntoView()); }\n    return true\n  }\n\n  if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n    var at = before, wrap$1 = [];\n    for (;;) {\n      wrap$1.push(at);\n      if (at.isTextblock) { break }\n      at = at.lastChild;\n    }\n    var afterText = after, afterDepth = 1;\n    for (; !afterText.isTextblock; afterText = afterText.firstChild) { afterDepth++; }\n    if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n      if (dispatch) {\n        var end$1 = Fragment.empty;\n        for (var i$1 = wrap$1.length - 1; i$1 >= 0; i$1--) { end$1 = Fragment.from(wrap$1[i$1].copy(end$1)); }\n        var tr$1 = state.tr.step(new ReplaceAroundStep($cut.pos - wrap$1.length, $cut.pos + after.nodeSize,\n                                                     $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth,\n                                                     new Slice(end$1, wrap$1.length, 0), 0, true));\n        dispatch(tr$1.scrollIntoView());\n      }\n      return true\n    }\n  }\n\n  return false\n}\n\n// Parameterized commands\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Wrap the selection in a node of the given type with the given\n// attributes.\nfunction wrapIn(nodeType, attrs) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var $from = ref.$from;\n    var $to = ref.$to;\n    var range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs);\n    if (!wrapping) { return false }\n    if (dispatch) { dispatch(state.tr.wrap(range, wrapping).scrollIntoView()); }\n    return true\n  }\n}\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command that tries to set the selected textblocks to the\n// given node type with the given attributes.\nfunction setBlockType(nodeType, attrs) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var from = ref.from;\n    var to = ref.to;\n    var applicable = false;\n    state.doc.nodesBetween(from, to, function (node, pos) {\n      if (applicable) { return false }\n      if (!node.isTextblock || node.hasMarkup(nodeType, attrs)) { return }\n      if (node.type == nodeType) {\n        applicable = true;\n      } else {\n        var $pos = state.doc.resolve(pos), index = $pos.index();\n        applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n      }\n    });\n    if (!applicable) { return false }\n    if (dispatch) { dispatch(state.tr.setBlockType(from, to, nodeType, attrs).scrollIntoView()); }\n    return true\n  }\n}\n\nfunction markApplies(doc, ranges, type) {\n  var loop = function ( i ) {\n    var ref = ranges[i];\n    var $from = ref.$from;\n    var $to = ref.$to;\n    var can = $from.depth == 0 ? doc.type.allowsMarkType(type) : false;\n    doc.nodesBetween($from.pos, $to.pos, function (node) {\n      if (can) { return false }\n      can = node.inlineContent && node.type.allowsMarkType(type);\n    });\n    if (can) { return { v: true } }\n  };\n\n  for (var i = 0; i < ranges.length; i++) {\n    var returned = loop( i );\n\n    if ( returned ) return returned.v;\n  }\n  return false\n}\n\n// :: (MarkType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command function that toggles the given mark with the\n// given attributes. Will return `false` when the current selection\n// doesn't support that mark. This will remove the mark if any marks\n// of that type exist in the selection, or add it otherwise. If the\n// selection is empty, this applies to the [stored\n// marks](#state.EditorState.storedMarks) instead of a range of the\n// document.\nfunction toggleMark(markType, attrs) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var empty = ref.empty;\n    var $cursor = ref.$cursor;\n    var ranges = ref.ranges;\n    if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType)) { return false }\n    if (dispatch) {\n      if ($cursor) {\n        if (markType.isInSet(state.storedMarks || $cursor.marks()))\n          { dispatch(state.tr.removeStoredMark(markType)); }\n        else\n          { dispatch(state.tr.addStoredMark(markType.create(attrs))); }\n      } else {\n        var has = false, tr = state.tr;\n        for (var i = 0; !has && i < ranges.length; i++) {\n          var ref$1 = ranges[i];\n          var $from = ref$1.$from;\n          var $to = ref$1.$to;\n          has = state.doc.rangeHasMark($from.pos, $to.pos, markType);\n        }\n        for (var i$1 = 0; i$1 < ranges.length; i$1++) {\n          var ref$2 = ranges[i$1];\n          var $from$1 = ref$2.$from;\n          var $to$1 = ref$2.$to;\n          if (has) {\n            tr.removeMark($from$1.pos, $to$1.pos, markType);\n          } else {\n            var from = $from$1.pos, to = $to$1.pos, start = $from$1.nodeAfter, end = $to$1.nodeBefore;\n            var spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0;\n            var spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0;\n            if (from + spaceStart < to) { from += spaceStart; to -= spaceEnd; }\n            tr.addMark(from, to, markType.create(attrs));\n          }\n        }\n        dispatch(tr.scrollIntoView());\n      }\n    }\n    return true\n  }\n}\n\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n  return function (tr) {\n    if (!tr.isGeneric) { return dispatch(tr) }\n\n    var ranges = [];\n    for (var i = 0; i < tr.mapping.maps.length; i++) {\n      var map = tr.mapping.maps[i];\n      for (var j = 0; j < ranges.length; j++)\n        { ranges[j] = map.map(ranges[j]); }\n      map.forEach(function (_s, _e, from, to) { return ranges.push(from, to); });\n    }\n\n    // Figure out which joinable points exist inside those ranges,\n    // by checking all node boundaries in their parent nodes.\n    var joinable = [];\n    for (var i$1 = 0; i$1 < ranges.length; i$1 += 2) {\n      var from = ranges[i$1], to = ranges[i$1 + 1];\n      var $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth);\n      for (var index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n        var after = parent.maybeChild(index);\n        if (!after) { break }\n        if (index && joinable.indexOf(pos) == -1) {\n          var before = parent.child(index - 1);\n          if (before.type == after.type && isJoinable(before, after))\n            { joinable.push(pos); }\n        }\n        pos += after.nodeSize;\n      }\n    }\n    // Join the joinable points\n    joinable.sort(function (a, b) { return a - b; });\n    for (var i$2 = joinable.length - 1; i$2 >= 0; i$2--) {\n      if (canJoin(tr.doc, joinable[i$2])) { tr.join(joinable[i$2]); }\n    }\n    dispatch(tr);\n  }\n}\n\n// :: ((state: EditorState, ?(tr: Transaction)) → bool, union<(before: Node, after: Node) → bool, [string]>) → (state: EditorState, ?(tr: Transaction)) → bool\n// Wrap a command so that, when it produces a transform that causes\n// two joinable nodes to end up next to each other, those are joined.\n// Nodes are considered joinable when they are of the same type and\n// when the `isJoinable` predicate returns true for them or, if an\n// array of strings was passed, if their node type name is in that\n// array.\nfunction autoJoin(command, isJoinable) {\n  if (Array.isArray(isJoinable)) {\n    var types = isJoinable;\n    isJoinable = function (node) { return types.indexOf(node.type.name) > -1; };\n  }\n  return function (state, dispatch, view) { return command(state, dispatch && wrapDispatchForJoin(dispatch, isJoinable), view); }\n}\n\n// :: (...[(EditorState, ?(tr: Transaction), ?EditorView) → bool]) → (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// Combine a number of command functions into a single function (which\n// calls them one by one until one returns true).\nfunction chainCommands() {\n  var commands = [], len = arguments.length;\n  while ( len-- ) commands[ len ] = arguments[ len ];\n\n  return function(state, dispatch, view) {\n    for (var i = 0; i < commands.length; i++)\n      { if (commands[i](state, dispatch, view)) { return true } }\n    return false\n  }\n}\n\nvar backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward);\nvar del = chainCommands(deleteSelection, joinForward, selectNodeForward);\n\n// :: Object\n// A basic keymap containing bindings not specific to any schema.\n// Binds the following keys (when multiple commands are listed, they\n// are chained with [`chainCommands`](#commands.chainCommands)):\n//\n// * **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n// * **Mod-Enter** to `exitCode`\n// * **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n// * **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n// * **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n// * **Mod-a** to `selectAll`\nvar pcBaseKeymap = {\n  \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n  \"Mod-Enter\": exitCode,\n  \"Backspace\": backspace,\n  \"Mod-Backspace\": backspace,\n  \"Shift-Backspace\": backspace,\n  \"Delete\": del,\n  \"Mod-Delete\": del,\n  \"Mod-a\": selectAll\n};\n\n// :: Object\n// A copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n// **Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n// **Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\n// Ctrl-Delete.\nvar macBaseKeymap = {\n  \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n  \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n  \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n  \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"]\n};\nfor (var key in pcBaseKeymap) { macBaseKeymap[key] = pcBaseKeymap[key]; }\n\n// declare global: os, navigator\nvar mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform)\n          : typeof os != \"undefined\" ? os.platform() == \"darwin\" : false;\n\n// :: Object\n// Depending on the detected platform, this will hold\n// [`pcBasekeymap`](#commands.pcBaseKeymap) or\n// [`macBaseKeymap`](#commands.macBaseKeymap).\nvar baseKeymap = mac ? macBaseKeymap : pcBaseKeymap;\n\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, setBlockType, splitBlock, splitBlockKeepMarks, toggleMark, wrapIn };\n//# sourceMappingURL=index.es.js.map\n","import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n// :: (options: ?Object) → Plugin\n// Create a plugin that, when added to a ProseMirror instance,\n// causes a decoration to show up at the drop position when something\n// is dragged over the editor.\n//\n//   options::- These options are supported:\n//\n//     color:: ?string\n//     The color of the cursor. Defaults to `black`.\n//\n//     width:: ?number\n//     The precise width of the cursor in pixels. Defaults to 1.\n//\n//     class:: ?string\n//     A CSS class name to add to the cursor element.\nfunction dropCursor(options) {\n  if ( options === void 0 ) options = {};\n\n  return new Plugin({\n    view: function view(editorView) { return new DropCursorView(editorView, options) }\n  })\n}\n\nvar DropCursorView = function DropCursorView(editorView, options) {\n  var this$1 = this;\n\n  this.editorView = editorView;\n  this.width = options.width || 1;\n  this.color = options.color || \"black\";\n  this.class = options.class;\n  this.cursorPos = null;\n  this.element = null;\n  this.timeout = null;\n\n  this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(function (name) {\n    var handler = function (e) { return this$1[name](e); };\n    editorView.dom.addEventListener(name, handler);\n    return {name: name, handler: handler}\n  });\n};\n\nDropCursorView.prototype.destroy = function destroy () {\n    var this$1 = this;\n\n  this.handlers.forEach(function (ref) {\n      var name = ref.name;\n      var handler = ref.handler;\n\n      return this$1.editorView.dom.removeEventListener(name, handler);\n    });\n};\n\nDropCursorView.prototype.update = function update (editorView, prevState) {\n  if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n    if (this.cursorPos > editorView.state.doc.content.size) { this.setCursor(null); }\n    else { this.updateOverlay(); }\n  }\n};\n\nDropCursorView.prototype.setCursor = function setCursor (pos) {\n  if (pos == this.cursorPos) { return }\n  this.cursorPos = pos;\n  if (pos == null) {\n    this.element.parentNode.removeChild(this.element);\n    this.element = null;\n  } else {\n    this.updateOverlay();\n  }\n};\n\nDropCursorView.prototype.updateOverlay = function updateOverlay () {\n  var $pos = this.editorView.state.doc.resolve(this.cursorPos), rect;\n  if (!$pos.parent.inlineContent) {\n    var before = $pos.nodeBefore, after = $pos.nodeAfter;\n    if (before || after) {\n      var nodeRect = this.editorView.nodeDOM(this.cursorPos - (before ?before.nodeSize : 0)).getBoundingClientRect();\n      var top = before ? nodeRect.bottom : nodeRect.top;\n      if (before && after)\n        { top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2; }\n      rect = {left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2};\n    }\n  }\n  if (!rect) {\n    var coords = this.editorView.coordsAtPos(this.cursorPos);\n    rect = {left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom};\n  }\n\n  var parent = this.editorView.dom.offsetParent;\n  if (!this.element) {\n    this.element = parent.appendChild(document.createElement(\"div\"));\n    if (this.class) { this.element.className = this.class; }\n    this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none; background-color: \" + this.color;\n  }\n  var parentLeft, parentTop;\n  if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n    parentLeft = -pageXOffset;\n    parentTop = -pageYOffset;\n  } else {\n    var rect$1 = parent.getBoundingClientRect();\n    parentLeft = rect$1.left - parent.scrollLeft;\n    parentTop = rect$1.top - parent.scrollTop;\n  }\n  this.element.style.left = (rect.left - parentLeft) + \"px\";\n  this.element.style.top = (rect.top - parentTop) + \"px\";\n  this.element.style.width = (rect.right - rect.left) + \"px\";\n  this.element.style.height = (rect.bottom - rect.top) + \"px\";\n};\n\nDropCursorView.prototype.scheduleRemoval = function scheduleRemoval (timeout) {\n    var this$1 = this;\n\n  clearTimeout(this.timeout);\n  this.timeout = setTimeout(function () { return this$1.setCursor(null); }, timeout);\n};\n\nDropCursorView.prototype.dragover = function dragover (event) {\n  if (!this.editorView.editable) { return }\n  var pos = this.editorView.posAtCoords({left: event.clientX, top: event.clientY});\n  if (pos) {\n    var target = pos.pos;\n    if (this.editorView.dragging && this.editorView.dragging.slice) {\n      target = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n      if (target == null) { return this.setCursor(null) }\n    }\n    this.setCursor(target);\n    this.scheduleRemoval(5000);\n  }\n};\n\nDropCursorView.prototype.dragend = function dragend () {\n  this.scheduleRemoval(20);\n};\n\nDropCursorView.prototype.drop = function drop () {\n  this.scheduleRemoval(20);\n};\n\nDropCursorView.prototype.dragleave = function dragleave (event) {\n  if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n    { this.setCursor(null); }\n};\n\nexport { dropCursor };\n//# sourceMappingURL=index.es.js.map\n","import { keydownHandler } from 'prosemirror-keymap';\nimport { NodeSelection, Selection, Plugin, TextSelection } from 'prosemirror-state';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\nimport { Slice } from 'prosemirror-model';\n\n// ::- Gap cursor selections are represented using this class. Its\n// `$anchor` and `$head` properties both point at the cursor position.\nvar GapCursor = /*@__PURE__*/(function (Selection) {\n  function GapCursor($pos) {\n    Selection.call(this, $pos, $pos);\n  }\n\n  if ( Selection ) GapCursor.__proto__ = Selection;\n  GapCursor.prototype = Object.create( Selection && Selection.prototype );\n  GapCursor.prototype.constructor = GapCursor;\n\n  GapCursor.prototype.map = function map (doc, mapping) {\n    var $pos = doc.resolve(mapping.map(this.head));\n    return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos)\n  };\n\n  GapCursor.prototype.content = function content () { return Slice.empty };\n\n  GapCursor.prototype.eq = function eq (other) {\n    return other instanceof GapCursor && other.head == this.head\n  };\n\n  GapCursor.prototype.toJSON = function toJSON () {\n    return {type: \"gapcursor\", pos: this.head}\n  };\n\n  GapCursor.fromJSON = function fromJSON (doc, json) {\n    if (typeof json.pos != \"number\") { throw new RangeError(\"Invalid input for GapCursor.fromJSON\") }\n    return new GapCursor(doc.resolve(json.pos))\n  };\n\n  GapCursor.prototype.getBookmark = function getBookmark () { return new GapBookmark(this.anchor) };\n\n  GapCursor.valid = function valid ($pos) {\n    var parent = $pos.parent;\n    if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos)) { return false }\n    var override = parent.type.spec.allowGapCursor;\n    if (override != null) { return override }\n    var deflt = parent.contentMatchAt($pos.index()).defaultType;\n    return deflt && deflt.isTextblock\n  };\n\n  GapCursor.findFrom = function findFrom ($pos, dir, mustMove) {\n    search: for (;;) {\n      if (!mustMove && GapCursor.valid($pos)) { return $pos }\n      var pos = $pos.pos, next = null;\n      // Scan up from this position\n      for (var d = $pos.depth;; d--) {\n        var parent = $pos.node(d);\n        if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n          next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1);\n          break\n        } else if (d == 0) {\n          return null\n        }\n        pos += dir;\n        var $cur = $pos.doc.resolve(pos);\n        if (GapCursor.valid($cur)) { return $cur }\n      }\n\n      // And then down into the next node\n      for (;;) {\n        var inside = dir > 0 ? next.firstChild : next.lastChild;\n        if (!inside) {\n          if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n            $pos = $pos.doc.resolve(pos + next.nodeSize * dir);\n            mustMove = false;\n            continue search\n          }\n          break\n        }\n        next = inside;\n        pos += dir;\n        var $cur$1 = $pos.doc.resolve(pos);\n        if (GapCursor.valid($cur$1)) { return $cur$1 }\n      }\n\n      return null\n    }\n  };\n\n  return GapCursor;\n}(Selection));\n\nGapCursor.prototype.visible = false;\n\nSelection.jsonID(\"gapcursor\", GapCursor);\n\nvar GapBookmark = function GapBookmark(pos) {\n  this.pos = pos;\n};\nGapBookmark.prototype.map = function map (mapping) {\n  return new GapBookmark(mapping.map(this.pos))\n};\nGapBookmark.prototype.resolve = function resolve (doc) {\n  var $pos = doc.resolve(this.pos);\n  return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos)\n};\n\nfunction closedBefore($pos) {\n  for (var d = $pos.depth; d >= 0; d--) {\n    var index = $pos.index(d);\n    // At the start of this parent, look at next one\n    if (index == 0) { continue }\n    // See if the node before (or its first ancestor) is closed\n    for (var before = $pos.node(d).child(index - 1);; before = before.lastChild) {\n      if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating) { return true }\n      if (before.inlineContent) { return false }\n    }\n  }\n  // Hit start of document\n  return true\n}\n\nfunction closedAfter($pos) {\n  for (var d = $pos.depth; d >= 0; d--) {\n    var index = $pos.indexAfter(d), parent = $pos.node(d);\n    if (index == parent.childCount) { continue }\n    for (var after = parent.child(index);; after = after.firstChild) {\n      if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating) { return true }\n      if (after.inlineContent) { return false }\n    }\n  }\n  return true\n}\n\n// :: () → Plugin\n// Create a gap cursor plugin. When enabled, this will capture clicks\n// near and arrow-key-motion past places that don't have a normally\n// selectable position nearby, and create a gap cursor selection for\n// them. The cursor is drawn as an element with class\n// `ProseMirror-gapcursor`. You can either include\n// `style/gapcursor.css` from the package's directory or add your own\n// styles to make it visible.\nvar gapCursor = function() {\n  return new Plugin({\n    props: {\n      decorations: drawGapCursor,\n\n      createSelectionBetween: function createSelectionBetween(_view, $anchor, $head) {\n        if ($anchor.pos == $head.pos && GapCursor.valid($head)) { return new GapCursor($head) }\n      },\n\n      handleClick: handleClick,\n      handleKeyDown: handleKeyDown\n    }\n  })\n};\n\nvar handleKeyDown = keydownHandler({\n  \"ArrowLeft\": arrow(\"horiz\", -1),\n  \"ArrowRight\": arrow(\"horiz\", 1),\n  \"ArrowUp\": arrow(\"vert\", -1),\n  \"ArrowDown\": arrow(\"vert\", 1)\n});\n\nfunction arrow(axis, dir) {\n  var dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\");\n  return function(state, dispatch, view) {\n    var sel = state.selection;\n    var $start = dir > 0 ? sel.$to : sel.$from, mustMove = sel.empty;\n    if (sel instanceof TextSelection) {\n      if (!view.endOfTextblock(dirStr) || $start.depth == 0) { return false }\n      mustMove = false;\n      $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before());\n    }\n    var $found = GapCursor.findFrom($start, dir, mustMove);\n    if (!$found) { return false }\n    if (dispatch) { dispatch(state.tr.setSelection(new GapCursor($found))); }\n    return true\n  }\n}\n\nfunction handleClick(view, pos, event) {\n  if (!view.editable) { return false }\n  var $pos = view.state.doc.resolve(pos);\n  if (!GapCursor.valid($pos)) { return false }\n  var ref = view.posAtCoords({left: event.clientX, top: event.clientY});\n  var inside = ref.inside;\n  if (inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(inside))) { return false }\n  view.dispatch(view.state.tr.setSelection(new GapCursor($pos)));\n  return true\n}\n\nfunction drawGapCursor(state) {\n  if (!(state.selection instanceof GapCursor)) { return null }\n  var node = document.createElement(\"div\");\n  node.className = \"ProseMirror-gapcursor\";\n  return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, {key: \"gapcursor\"})])\n}\n\nexport { GapCursor, gapCursor };\n//# sourceMappingURL=index.es.js.map\n","export default function crelt() {\n  var elt = arguments[0]\n  if (typeof elt == \"string\") elt = document.createElement(elt)\n  var i = 1, next = arguments[1]\n  if (next && typeof next == \"object\" && next.nodeType == null && !Array.isArray(next)) {\n    for (var name in next) if (Object.prototype.hasOwnProperty.call(next, name)) {\n      var value = next[name]\n      if (typeof value == \"string\") elt.setAttribute(name, value)\n      else if (value != null) elt[name] = value\n    }\n    i++\n  }\n  for (; i < arguments.length; i++) add(elt, arguments[i])\n  return elt\n}\n\nfunction add(elt, child) {\n  if (typeof child == \"string\") {\n    elt.appendChild(document.createTextNode(child))\n  } else if (child == null) {\n  } else if (child.nodeType != null) {\n    elt.appendChild(child)\n  } else if (Array.isArray(child)) {\n    for (var i = 0; i < child.length; i++) add(elt, child[i])\n  } else {\n    throw new RangeError(\"Unsupported child node: \" + child)\n  }\n}\n","import crel from 'crelt';\nimport { joinUp, lift, selectParentNode, setBlockType, wrapIn } from 'prosemirror-commands';\nimport { undo, redo } from 'prosemirror-history';\nimport { Plugin } from 'prosemirror-state';\n\nvar SVG = \"http://www.w3.org/2000/svg\";\nvar XLINK = \"http://www.w3.org/1999/xlink\";\n\nvar prefix = \"ProseMirror-icon\";\n\nfunction hashPath(path) {\n  var hash = 0;\n  for (var i = 0; i < path.length; i++)\n    { hash = (((hash << 5) - hash) + path.charCodeAt(i)) | 0; }\n  return hash\n}\n\nfunction getIcon(icon) {\n  var node = document.createElement(\"div\");\n  node.className = prefix;\n  if (icon.path) {\n    var name = \"pm-icon-\" + hashPath(icon.path).toString(16);\n    if (!document.getElementById(name)) { buildSVG(name, icon); }\n    var svg = node.appendChild(document.createElementNS(SVG, \"svg\"));\n    svg.style.width = (icon.width / icon.height) + \"em\";\n    var use = svg.appendChild(document.createElementNS(SVG, \"use\"));\n    use.setAttributeNS(XLINK, \"href\", /([^#]*)/.exec(document.location)[1] + \"#\" + name);\n  } else if (icon.dom) {\n    node.appendChild(icon.dom.cloneNode(true));\n  } else {\n    node.appendChild(document.createElement(\"span\")).textContent = icon.text || '';\n    if (icon.css) { node.firstChild.style.cssText = icon.css; }\n  }\n  return node\n}\n\nfunction buildSVG(name, data) {\n  var collection = document.getElementById(prefix + \"-collection\");\n  if (!collection) {\n    collection = document.createElementNS(SVG, \"svg\");\n    collection.id = prefix + \"-collection\";\n    collection.style.display = \"none\";\n    document.body.insertBefore(collection, document.body.firstChild);\n  }\n  var sym = document.createElementNS(SVG, \"symbol\");\n  sym.id = name;\n  sym.setAttribute(\"viewBox\", \"0 0 \" + data.width + \" \" + data.height);\n  var path = sym.appendChild(document.createElementNS(SVG, \"path\"));\n  path.setAttribute(\"d\", data.path);\n  collection.appendChild(sym);\n}\n\nvar prefix$1 = \"ProseMirror-menu\";\n\n// ::- An icon or label that, when clicked, executes a command.\nvar MenuItem = function MenuItem(spec) {\n  // :: MenuItemSpec\n  // The spec used to create the menu item.\n  this.spec = spec;\n};\n\n// :: (EditorView) → {dom: dom.Node, update: (EditorState) → bool}\n// Renders the icon according to its [display\n// spec](#menu.MenuItemSpec.display), and adds an event handler which\n// executes the command when the representation is clicked.\nMenuItem.prototype.render = function render (view) {\n  var spec = this.spec;\n  var dom = spec.render ? spec.render(view)\n      : spec.icon ? getIcon(spec.icon)\n      : spec.label ? crel(\"div\", null, translate(view, spec.label))\n      : null;\n  if (!dom) { throw new RangeError(\"MenuItem without icon or label property\") }\n  if (spec.title) {\n    var title = (typeof spec.title === \"function\" ? spec.title(view.state) : spec.title);\n    dom.setAttribute(\"title\", translate(view, title));\n  }\n  if (spec.class) { dom.classList.add(spec.class); }\n  if (spec.css) { dom.style.cssText += spec.css; }\n\n  dom.addEventListener(\"mousedown\", function (e) {\n    e.preventDefault();\n    if (!dom.classList.contains(prefix$1 + \"-disabled\"))\n      { spec.run(view.state, view.dispatch, view, e); }\n  });\n\n  function update(state) {\n    if (spec.select) {\n      var selected = spec.select(state);\n      dom.style.display = selected ? \"\" : \"none\";\n      if (!selected) { return false }\n    }\n    var enabled = true;\n    if (spec.enable) {\n      enabled = spec.enable(state) || false;\n      setClass(dom, prefix$1 + \"-disabled\", !enabled);\n    }\n    if (spec.active) {\n      var active = enabled && spec.active(state) || false;\n      setClass(dom, prefix$1 + \"-active\", active);\n    }\n    return true\n  }\n\n  return {dom: dom, update: update}\n};\n\nfunction translate(view, text) {\n  return view._props.translate ? view._props.translate(text) : text\n}\n\n// MenuItemSpec:: interface\n// The configuration object passed to the `MenuItem` constructor.\n//\n//   run:: (EditorState, (Transaction), EditorView, dom.Event)\n//   The function to execute when the menu item is activated.\n//\n//   select:: ?(EditorState) → bool\n//   Optional function that is used to determine whether the item is\n//   appropriate at the moment. Deselected items will be hidden.\n//\n//   enable:: ?(EditorState) → bool\n//   Function that is used to determine if the item is enabled. If\n//   given and returning false, the item will be given a disabled\n//   styling.\n//\n//   active:: ?(EditorState) → bool\n//   A predicate function to determine whether the item is 'active' (for\n//   example, the item for toggling the strong mark might be active then\n//   the cursor is in strong text).\n//\n//   render:: ?(EditorView) → dom.Node\n//   A function that renders the item. You must provide either this,\n//   [`icon`](#menu.MenuItemSpec.icon), or [`label`](#MenuItemSpec.label).\n//\n//   icon:: ?Object\n//   Describes an icon to show for this item. The object may specify\n//   an SVG icon, in which case its `path` property should be an [SVG\n//   path\n//   spec](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d),\n//   and `width` and `height` should provide the viewbox in which that\n//   path exists. Alternatively, it may have a `text` property\n//   specifying a string of text that makes up the icon, with an\n//   optional `css` property giving additional CSS styling for the\n//   text. _Or_ it may contain `dom` property containing a DOM node.\n//\n//   label:: ?string\n//   Makes the item show up as a text label. Mostly useful for items\n//   wrapped in a [drop-down](#menu.Dropdown) or similar menu. The object\n//   should have a `label` property providing the text to display.\n//\n//   title:: ?union<string, (EditorState) → string>\n//   Defines DOM title (mouseover) text for the item.\n//\n//   class:: ?string\n//   Optionally adds a CSS class to the item's DOM representation.\n//\n//   css:: ?string\n//   Optionally adds a string of inline CSS to the item's DOM\n//   representation.\n\nvar lastMenuEvent = {time: 0, node: null};\nfunction markMenuEvent(e) {\n  lastMenuEvent.time = Date.now();\n  lastMenuEvent.node = e.target;\n}\nfunction isMenuEvent(wrapper) {\n  return Date.now() - 100 < lastMenuEvent.time &&\n    lastMenuEvent.node && wrapper.contains(lastMenuEvent.node)\n}\n\n// ::- A drop-down menu, displayed as a label with a downwards-pointing\n// triangle to the right of it.\nvar Dropdown = function Dropdown(content, options) {\n  this.options = options || {};\n  this.content = Array.isArray(content) ? content : [content];\n};\n\n// :: (EditorView) → {dom: dom.Node, update: (EditorState)}\n// Render the dropdown menu and sub-items.\nDropdown.prototype.render = function render (view) {\n    var this$1 = this;\n\n  var content = renderDropdownItems(this.content, view);\n\n  var label = crel(\"div\", {class: prefix$1 + \"-dropdown \" + (this.options.class || \"\"),\n                           style: this.options.css},\n                   translate(view, this.options.label));\n  if (this.options.title) { label.setAttribute(\"title\", translate(view, this.options.title)); }\n  var wrap = crel(\"div\", {class: prefix$1 + \"-dropdown-wrap\"}, label);\n  var open = null, listeningOnClose = null;\n  var close = function () {\n    if (open && open.close()) {\n      open = null;\n      window.removeEventListener(\"mousedown\", listeningOnClose);\n    }\n  };\n  label.addEventListener(\"mousedown\", function (e) {\n    e.preventDefault();\n    markMenuEvent(e);\n    if (open) {\n      close();\n    } else {\n      open = this$1.expand(wrap, content.dom);\n      window.addEventListener(\"mousedown\", listeningOnClose = function () {\n        if (!isMenuEvent(wrap)) { close(); }\n      });\n    }\n  });\n\n  function update(state) {\n    var inner = content.update(state);\n    wrap.style.display = inner ? \"\" : \"none\";\n    return inner\n  }\n\n  return {dom: wrap, update: update}\n};\n\nDropdown.prototype.expand = function expand (dom, items) {\n  var menuDOM = crel(\"div\", {class: prefix$1 + \"-dropdown-menu \" + (this.options.class || \"\")}, items);\n\n  var done = false;\n  function close() {\n    if (done) { return }\n    done = true;\n    dom.removeChild(menuDOM);\n    return true\n  }\n  dom.appendChild(menuDOM);\n  return {close: close, node: menuDOM}\n};\n\nfunction renderDropdownItems(items, view) {\n  var rendered = [], updates = [];\n  for (var i = 0; i < items.length; i++) {\n    var ref = items[i].render(view);\n    var dom = ref.dom;\n    var update = ref.update;\n    rendered.push(crel(\"div\", {class: prefix$1 + \"-dropdown-item\"}, dom));\n    updates.push(update);\n  }\n  return {dom: rendered, update: combineUpdates(updates, rendered)}\n}\n\nfunction combineUpdates(updates, nodes) {\n  return function (state) {\n    var something = false;\n    for (var i = 0; i < updates.length; i++) {\n      var up = updates[i](state);\n      nodes[i].style.display = up ? \"\" : \"none\";\n      if (up) { something = true; }\n    }\n    return something\n  }\n}\n\n// ::- Represents a submenu wrapping a group of elements that start\n// hidden and expand to the right when hovered over or tapped.\nvar DropdownSubmenu = function DropdownSubmenu(content, options) {\n  this.options = options || {};\n  this.content = Array.isArray(content) ? content : [content];\n};\n\n// :: (EditorView) → {dom: dom.Node, update: (EditorState) → bool}\n// Renders the submenu.\nDropdownSubmenu.prototype.render = function render (view) {\n  var items = renderDropdownItems(this.content, view);\n\n  var label = crel(\"div\", {class: prefix$1 + \"-submenu-label\"}, translate(view, this.options.label));\n  var wrap = crel(\"div\", {class: prefix$1 + \"-submenu-wrap\"}, label,\n                 crel(\"div\", {class: prefix$1 + \"-submenu\"}, items.dom));\n  var listeningOnClose = null;\n  label.addEventListener(\"mousedown\", function (e) {\n    e.preventDefault();\n    markMenuEvent(e);\n    setClass(wrap, prefix$1 + \"-submenu-wrap-active\");\n    if (!listeningOnClose)\n      { window.addEventListener(\"mousedown\", listeningOnClose = function () {\n        if (!isMenuEvent(wrap)) {\n          wrap.classList.remove(prefix$1 + \"-submenu-wrap-active\");\n          window.removeEventListener(\"mousedown\", listeningOnClose);\n          listeningOnClose = null;\n        }\n      }); }\n  });\n\n  function update(state) {\n    var inner = items.update(state);\n    wrap.style.display = inner ? \"\" : \"none\";\n    return inner\n  }\n  return {dom: wrap, update: update}\n};\n\n// :: (EditorView, [union<MenuElement, [MenuElement]>]) → {dom: ?dom.DocumentFragment, update: (EditorState) → bool}\n// Render the given, possibly nested, array of menu elements into a\n// document fragment, placing separators between them (and ensuring no\n// superfluous separators appear when some of the groups turn out to\n// be empty).\nfunction renderGrouped(view, content) {\n  var result = document.createDocumentFragment();\n  var updates = [], separators = [];\n  for (var i = 0; i < content.length; i++) {\n    var items = content[i], localUpdates = [], localNodes = [];\n    for (var j = 0; j < items.length; j++) {\n      var ref = items[j].render(view);\n      var dom = ref.dom;\n      var update$1 = ref.update;\n      var span = crel(\"span\", {class: prefix$1 + \"item\"}, dom);\n      result.appendChild(span);\n      localNodes.push(span);\n      localUpdates.push(update$1);\n    }\n    if (localUpdates.length) {\n      updates.push(combineUpdates(localUpdates, localNodes));\n      if (i < content.length - 1)\n        { separators.push(result.appendChild(separator())); }\n    }\n  }\n\n  function update(state) {\n    var something = false, needSep = false;\n    for (var i = 0; i < updates.length; i++) {\n      var hasContent = updates[i](state);\n      if (i) { separators[i - 1].style.display = needSep && hasContent ? \"\" : \"none\"; }\n      needSep = hasContent;\n      if (hasContent) { something = true; }\n    }\n    return something\n  }\n  return {dom: result, update: update}\n}\n\nfunction separator() {\n  return crel(\"span\", {class: prefix$1 + \"separator\"})\n}\n\n// :: Object\n// A set of basic editor-related icons. Contains the properties\n// `join`, `lift`, `selectParentNode`, `undo`, `redo`, `strong`, `em`,\n// `code`, `link`, `bulletList`, `orderedList`, and `blockquote`, each\n// holding an object that can be used as the `icon` option to\n// `MenuItem`.\nvar icons = {\n  join: {\n    width: 800, height: 900,\n    path: \"M0 75h800v125h-800z M0 825h800v-125h-800z M250 400h100v-100h100v100h100v100h-100v100h-100v-100h-100z\"\n  },\n  lift: {\n    width: 1024, height: 1024,\n    path: \"M219 310v329q0 7-5 12t-12 5q-8 0-13-5l-164-164q-5-5-5-13t5-13l164-164q5-5 13-5 7 0 12 5t5 12zM1024 749v109q0 7-5 12t-12 5h-987q-7 0-12-5t-5-12v-109q0-7 5-12t12-5h987q7 0 12 5t5 12zM1024 530v109q0 7-5 12t-12 5h-621q-7 0-12-5t-5-12v-109q0-7 5-12t12-5h621q7 0 12 5t5 12zM1024 310v109q0 7-5 12t-12 5h-621q-7 0-12-5t-5-12v-109q0-7 5-12t12-5h621q7 0 12 5t5 12zM1024 91v109q0 7-5 12t-12 5h-987q-7 0-12-5t-5-12v-109q0-7 5-12t12-5h987q7 0 12 5t5 12z\"\n  },\n  selectParentNode: {text: \"\\u2b1a\", css: \"font-weight: bold\"},\n  undo: {\n    width: 1024, height: 1024,\n    path: \"M761 1024c113-206 132-520-313-509v253l-384-384 384-384v248c534-13 594 472 313 775z\"\n  },\n  redo: {\n    width: 1024, height: 1024,\n    path: \"M576 248v-248l384 384-384 384v-253c-446-10-427 303-313 509-280-303-221-789 313-775z\"\n  },\n  strong: {\n    width: 805, height: 1024,\n    path: \"M317 869q42 18 80 18 214 0 214-191 0-65-23-102-15-25-35-42t-38-26-46-14-48-6-54-1q-41 0-57 5 0 30-0 90t-0 90q0 4-0 38t-0 55 2 47 6 38zM309 442q24 4 62 4 46 0 81-7t62-25 42-51 14-81q0-40-16-70t-45-46-61-24-70-8q-28 0-74 7 0 28 2 86t2 86q0 15-0 45t-0 45q0 26 0 39zM0 950l1-53q8-2 48-9t60-15q4-6 7-15t4-19 3-18 1-21 0-19v-37q0-561-12-585-2-4-12-8t-25-6-28-4-27-2-17-1l-2-47q56-1 194-6t213-5q13 0 39 0t38 0q40 0 78 7t73 24 61 40 42 59 16 78q0 29-9 54t-22 41-36 32-41 25-48 22q88 20 146 76t58 141q0 57-20 102t-53 74-78 48-93 27-100 8q-25 0-75-1t-75-1q-60 0-175 6t-132 6z\"\n  },\n  em: {\n    width: 585, height: 1024,\n    path: \"M0 949l9-48q3-1 46-12t63-21q16-20 23-57 0-4 35-165t65-310 29-169v-14q-13-7-31-10t-39-4-33-3l10-58q18 1 68 3t85 4 68 1q27 0 56-1t69-4 56-3q-2 22-10 50-17 5-58 16t-62 19q-4 10-8 24t-5 22-4 26-3 24q-15 84-50 239t-44 203q-1 5-7 33t-11 51-9 47-3 32l0 10q9 2 105 17-1 25-9 56-6 0-18 0t-18 0q-16 0-49-5t-49-5q-78-1-117-1-29 0-81 5t-69 6z\"\n  },\n  code: {\n    width: 896, height: 1024,\n    path: \"M608 192l-96 96 224 224-224 224 96 96 288-320-288-320zM288 192l-288 320 288 320 96-96-224-224 224-224-96-96z\"\n  },\n  link: {\n    width: 951, height: 1024,\n    path: \"M832 694q0-22-16-38l-118-118q-16-16-38-16-24 0-41 18 1 1 10 10t12 12 8 10 7 14 2 15q0 22-16 38t-38 16q-8 0-15-2t-14-7-10-8-12-12-10-10q-18 17-18 41 0 22 16 38l117 118q15 15 38 15 22 0 38-14l84-83q16-16 16-38zM430 292q0-22-16-38l-117-118q-16-16-38-16-22 0-38 15l-84 83q-16 16-16 38 0 22 16 38l118 118q15 15 38 15 24 0 41-17-1-1-10-10t-12-12-8-10-7-14-2-15q0-22 16-38t38-16q8 0 15 2t14 7 10 8 12 12 10 10q18-17 18-41zM941 694q0 68-48 116l-84 83q-47 47-116 47-69 0-116-48l-117-118q-47-47-47-116 0-70 50-119l-50-50q-49 50-118 50-68 0-116-48l-118-118q-48-48-48-116t48-116l84-83q47-47 116-47 69 0 116 48l117 118q47 47 47 116 0 70-50 119l50 50q49-50 118-50 68 0 116 48l118 118q48 48 48 116z\"\n  },\n  bulletList: {\n    width: 768, height: 896,\n    path: \"M0 512h128v-128h-128v128zM0 256h128v-128h-128v128zM0 768h128v-128h-128v128zM256 512h512v-128h-512v128zM256 256h512v-128h-512v128zM256 768h512v-128h-512v128z\"\n  },\n  orderedList: {\n    width: 768, height: 896,\n    path: \"M320 512h448v-128h-448v128zM320 768h448v-128h-448v128zM320 128v128h448v-128h-448zM79 384h78v-256h-36l-85 23v50l43-2v185zM189 590c0-36-12-78-96-78-33 0-64 6-83 16l1 66c21-10 42-15 67-15s32 11 32 28c0 26-30 58-110 112v50h192v-67l-91 2c49-30 87-66 87-113l1-1z\"\n  },\n  blockquote: {\n    width: 640, height: 896,\n    path: \"M0 448v256h256v-256h-128c0 0 0-128 128-128v-128c0 0-256 0-256 256zM640 320v-128c0 0-256 0-256 256v256h256v-256h-128c0 0 0-128 128-128z\"\n  }\n};\n\n// :: MenuItem\n// Menu item for the `joinUp` command.\nvar joinUpItem = new MenuItem({\n  title: \"Join with above block\",\n  run: joinUp,\n  select: function (state) { return joinUp(state); },\n  icon: icons.join\n});\n\n// :: MenuItem\n// Menu item for the `lift` command.\nvar liftItem = new MenuItem({\n  title: \"Lift out of enclosing block\",\n  run: lift,\n  select: function (state) { return lift(state); },\n  icon: icons.lift\n});\n\n// :: MenuItem\n// Menu item for the `selectParentNode` command.\nvar selectParentNodeItem = new MenuItem({\n  title: \"Select parent node\",\n  run: selectParentNode,\n  select: function (state) { return selectParentNode(state); },\n  icon: icons.selectParentNode\n});\n\n// :: MenuItem\n// Menu item for the `undo` command.\nvar undoItem = new MenuItem({\n  title: \"Undo last change\",\n  run: undo,\n  enable: function (state) { return undo(state); },\n  icon: icons.undo\n});\n\n// :: MenuItem\n// Menu item for the `redo` command.\nvar redoItem = new MenuItem({\n  title: \"Redo last undone change\",\n  run: redo,\n  enable: function (state) { return redo(state); },\n  icon: icons.redo\n});\n\n// :: (NodeType, Object) → MenuItem\n// Build a menu item for wrapping the selection in a given node type.\n// Adds `run` and `select` properties to the ones present in\n// `options`. `options.attrs` may be an object or a function.\nfunction wrapItem(nodeType, options) {\n  var passedOptions = {\n    run: function run(state, dispatch) {\n      // FIXME if (options.attrs instanceof Function) options.attrs(state, attrs => wrapIn(nodeType, attrs)(state))\n      return wrapIn(nodeType, options.attrs)(state, dispatch)\n    },\n    select: function select(state) {\n      return wrapIn(nodeType, options.attrs instanceof Function ? null : options.attrs)(state)\n    }\n  };\n  for (var prop in options) { passedOptions[prop] = options[prop]; }\n  return new MenuItem(passedOptions)\n}\n\n// :: (NodeType, Object) → MenuItem\n// Build a menu item for changing the type of the textblock around the\n// selection to the given type. Provides `run`, `active`, and `select`\n// properties. Others must be given in `options`. `options.attrs` may\n// be an object to provide the attributes for the textblock node.\nfunction blockTypeItem(nodeType, options) {\n  var command = setBlockType(nodeType, options.attrs);\n  var passedOptions = {\n    run: command,\n    enable: function enable(state) { return command(state) },\n    active: function active(state) {\n      var ref = state.selection;\n      var $from = ref.$from;\n      var to = ref.to;\n      var node = ref.node;\n      if (node) { return node.hasMarkup(nodeType, options.attrs) }\n      return to <= $from.end() && $from.parent.hasMarkup(nodeType, options.attrs)\n    }\n  };\n  for (var prop in options) { passedOptions[prop] = options[prop]; }\n  return new MenuItem(passedOptions)\n}\n\n// Work around classList.toggle being broken in IE11\nfunction setClass(dom, cls, on) {\n  if (on) { dom.classList.add(cls); }\n  else { dom.classList.remove(cls); }\n}\n\nvar prefix$2 = \"ProseMirror-menubar\";\n\nfunction isIOS() {\n  if (typeof navigator == \"undefined\") { return false }\n  var agent = navigator.userAgent;\n  return !/Edge\\/\\d/.test(agent) && /AppleWebKit/.test(agent) && /Mobile\\/\\w+/.test(agent)\n}\n\n// :: (Object) → Plugin\n// A plugin that will place a menu bar above the editor. Note that\n// this involves wrapping the editor in an additional `<div>`.\n//\n//   options::-\n//   Supports the following options:\n//\n//     content:: [[MenuElement]]\n//     Provides the content of the menu, as a nested array to be\n//     passed to `renderGrouped`.\n//\n//     floating:: ?bool\n//     Determines whether the menu floats, i.e. whether it sticks to\n//     the top of the viewport when the editor is partially scrolled\n//     out of view.\nfunction menuBar(options) {\n  return new Plugin({\n    view: function view(editorView) { return new MenuBarView(editorView, options) }\n  })\n}\n\nvar MenuBarView = function MenuBarView(editorView, options) {\n  var this$1 = this;\n\n  this.editorView = editorView;\n  this.options = options;\n\n  this.wrapper = crel(\"div\", {class: prefix$2 + \"-wrapper\"});\n  this.menu = this.wrapper.appendChild(crel(\"div\", {class: prefix$2}));\n  this.menu.className = prefix$2;\n  this.spacer = null;\n\n  editorView.dom.parentNode.replaceChild(this.wrapper, editorView.dom);\n  this.wrapper.appendChild(editorView.dom);\n\n  this.maxHeight = 0;\n  this.widthForMaxHeight = 0;\n  this.floating = false;\n\n  var ref = renderGrouped(this.editorView, this.options.content);\n  var dom = ref.dom;\n  var update = ref.update;\n  this.contentUpdate = update;\n  this.menu.appendChild(dom);\n  this.update();\n\n  if (options.floating && !isIOS()) {\n    this.updateFloat();\n    var potentialScrollers = getAllWrapping(this.wrapper);\n    this.scrollFunc = function (e) {\n      var root = this$1.editorView.root;\n      if (!(root.body || root).contains(this$1.wrapper)) {\n          potentialScrollers.forEach(function (el) { return el.removeEventListener(\"scroll\", this$1.scrollFunc); });\n      } else {\n          this$1.updateFloat(e.target.getBoundingClientRect && e.target);\n      }\n    };\n    potentialScrollers.forEach(function (el) { return el.addEventListener('scroll', this$1.scrollFunc); });\n  }\n};\n\nMenuBarView.prototype.update = function update () {\n  this.contentUpdate(this.editorView.state);\n\n  if (this.floating) {\n    this.updateScrollCursor();\n  } else {\n    if (this.menu.offsetWidth != this.widthForMaxHeight) {\n      this.widthForMaxHeight = this.menu.offsetWidth;\n      this.maxHeight = 0;\n    }\n    if (this.menu.offsetHeight > this.maxHeight) {\n      this.maxHeight = this.menu.offsetHeight;\n      this.menu.style.minHeight = this.maxHeight + \"px\";\n    }\n  }\n};\n\nMenuBarView.prototype.updateScrollCursor = function updateScrollCursor () {\n  var selection = this.editorView.root.getSelection();\n  if (!selection.focusNode) { return }\n  var rects = selection.getRangeAt(0).getClientRects();\n  var selRect = rects[selectionIsInverted(selection) ? 0 : rects.length - 1];\n  if (!selRect) { return }\n  var menuRect = this.menu.getBoundingClientRect();\n  if (selRect.top < menuRect.bottom && selRect.bottom > menuRect.top) {\n    var scrollable = findWrappingScrollable(this.wrapper);\n    if (scrollable) { scrollable.scrollTop -= (menuRect.bottom - selRect.top); }\n  }\n};\n\nMenuBarView.prototype.updateFloat = function updateFloat (scrollAncestor) {\n  var parent = this.wrapper, editorRect = parent.getBoundingClientRect(),\n      top = scrollAncestor ? Math.max(0, scrollAncestor.getBoundingClientRect().top) : 0;\n\n  if (this.floating) {\n    if (editorRect.top >= top || editorRect.bottom < this.menu.offsetHeight + 10) {\n      this.floating = false;\n      this.menu.style.position = this.menu.style.left = this.menu.style.top = this.menu.style.width = \"\";\n      this.menu.style.display = \"\";\n      this.spacer.parentNode.removeChild(this.spacer);\n      this.spacer = null;\n    } else {\n      var border = (parent.offsetWidth - parent.clientWidth) / 2;\n      this.menu.style.left = (editorRect.left + border) + \"px\";\n      this.menu.style.display = (editorRect.top > window.innerHeight ? \"none\" : \"\");\n      if (scrollAncestor) { this.menu.style.top = top + \"px\"; }\n    }\n  } else {\n    if (editorRect.top < top && editorRect.bottom >= this.menu.offsetHeight + 10) {\n      this.floating = true;\n      var menuRect = this.menu.getBoundingClientRect();\n      this.menu.style.left = menuRect.left + \"px\";\n      this.menu.style.width = menuRect.width + \"px\";\n      if (scrollAncestor) { this.menu.style.top = top + \"px\"; }\n      this.menu.style.position = \"fixed\";\n      this.spacer = crel(\"div\", {class: prefix$2 + \"-spacer\", style: (\"height: \" + (menuRect.height) + \"px\")});\n      parent.insertBefore(this.spacer, this.menu);\n    }\n  }\n};\n\nMenuBarView.prototype.destroy = function destroy () {\n  if (this.wrapper.parentNode)\n    { this.wrapper.parentNode.replaceChild(this.editorView.dom, this.wrapper); }\n};\n\n// Not precise, but close enough\nfunction selectionIsInverted(selection) {\n  if (selection.anchorNode == selection.focusNode) { return selection.anchorOffset > selection.focusOffset }\n  return selection.anchorNode.compareDocumentPosition(selection.focusNode) == Node.DOCUMENT_POSITION_FOLLOWING\n}\n\nfunction findWrappingScrollable(node) {\n  for (var cur = node.parentNode; cur; cur = cur.parentNode)\n    { if (cur.scrollHeight > cur.clientHeight) { return cur } }\n}\n\nfunction getAllWrapping(node) {\n    var res = [window];\n    for (var cur = node.parentNode; cur; cur = cur.parentNode)\n        { res.push(cur); }\n    return res\n}\n\nexport { Dropdown, DropdownSubmenu, MenuItem, blockTypeItem, icons, joinUpItem, liftItem, menuBar, redoItem, renderGrouped, selectParentNodeItem, undoItem, wrapItem };\n//# sourceMappingURL=index.es.js.map\n","import { Plugin } from 'prosemirror-state';\nimport { findWrapping, canJoin } from 'prosemirror-transform';\n\n// ::- Input rules are regular expressions describing a piece of text\n// that, when typed, causes something to happen. This might be\n// changing two dashes into an emdash, wrapping a paragraph starting\n// with `\"> \"` into a blockquote, or something entirely different.\nvar InputRule = function InputRule(match, handler) {\n  this.match = match;\n  this.handler = typeof handler == \"string\" ? stringHandler(handler) : handler;\n};\n\nfunction stringHandler(string) {\n  return function(state, match, start, end) {\n    var insert = string;\n    if (match[1]) {\n      var offset = match[0].lastIndexOf(match[1]);\n      insert += match[0].slice(offset + match[1].length);\n      start += offset;\n      var cutOff = start - end;\n      if (cutOff > 0) {\n        insert = match[0].slice(offset - cutOff, offset) + insert;\n        start = end;\n      }\n    }\n    return state.tr.insertText(insert, start, end)\n  }\n}\n\nvar MAX_MATCH = 500;\n\n// :: (config: {rules: [InputRule]}) → Plugin\n// Create an input rules plugin. When enabled, it will cause text\n// input that matches any of the given rules to trigger the rule's\n// action.\nfunction inputRules(ref) {\n  var rules = ref.rules;\n\n  var plugin = new Plugin({\n    state: {\n      init: function init() { return null },\n      apply: function apply(tr, prev) {\n        var stored = tr.getMeta(this);\n        if (stored) { return stored }\n        return tr.selectionSet || tr.docChanged ? null : prev\n      }\n    },\n\n    props: {\n      handleTextInput: function handleTextInput(view, from, to, text) {\n        return run(view, from, to, text, rules, plugin)\n      },\n      handleDOMEvents: {\n        compositionend: function (view) {\n          setTimeout(function () {\n            var ref = view.state.selection;\n            var $cursor = ref.$cursor;\n            if ($cursor) { run(view, $cursor.pos, $cursor.pos, \"\", rules, plugin); }\n          });\n        }\n      }\n    },\n\n    isInputRules: true\n  });\n  return plugin\n}\n\nfunction run(view, from, to, text, rules, plugin) {\n  if (view.composing) { return false }\n  var state = view.state, $from = state.doc.resolve(from);\n  if ($from.parent.type.spec.code) { return false }\n  var textBefore = $from.parent.textBetween(Math.max(0, $from.parentOffset - MAX_MATCH), $from.parentOffset,\n                                            null, \"\\ufffc\") + text;\n  for (var i = 0; i < rules.length; i++) {\n    var match = rules[i].match.exec(textBefore);\n    var tr = match && rules[i].handler(state, match, from - (match[0].length - text.length), to);\n    if (!tr) { continue }\n    view.dispatch(tr.setMeta(plugin, {transform: tr, from: from, to: to, text: text}));\n    return true\n  }\n  return false\n}\n\n// :: (EditorState, ?(Transaction)) → bool\n// This is a command that will undo an input rule, if applying such a\n// rule was the last thing that the user did.\nfunction undoInputRule(state, dispatch) {\n  var plugins = state.plugins;\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i], undoable = (void 0);\n    if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n      if (dispatch) {\n        var tr = state.tr, toUndo = undoable.transform;\n        for (var j = toUndo.steps.length - 1; j >= 0; j--)\n          { tr.step(toUndo.steps[j].invert(toUndo.docs[j])); }\n        if (undoable.text) {\n          var marks = tr.doc.resolve(undoable.from).marks();\n          tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks));\n        } else {\n          tr.delete(undoable.from, undoable.to);\n        }\n        dispatch(tr);\n      }\n      return true\n    }\n  }\n  return false\n}\n\n// :: InputRule Converts double dashes to an emdash.\nvar emDash = new InputRule(/--$/, \"—\");\n// :: InputRule Converts three dots to an ellipsis character.\nvar ellipsis = new InputRule(/\\.\\.\\.$/, \"…\");\n// :: InputRule “Smart” opening double quotes.\nvar openDoubleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(\")$/, \"“\");\n// :: InputRule “Smart” closing double quotes.\nvar closeDoubleQuote = new InputRule(/\"$/, \"”\");\n// :: InputRule “Smart” opening single quotes.\nvar openSingleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(')$/, \"‘\");\n// :: InputRule “Smart” closing single quotes.\nvar closeSingleQuote = new InputRule(/'$/, \"’\");\n\n// :: [InputRule] Smart-quote related input rules.\nvar smartQuotes = [openDoubleQuote, closeDoubleQuote, openSingleQuote, closeSingleQuote];\n\n// :: (RegExp, NodeType, ?union<Object, ([string]) → ?Object>, ?([string], Node) → bool) → InputRule\n// Build an input rule for automatically wrapping a textblock when a\n// given string is typed. The `regexp` argument is\n// directly passed through to the `InputRule` constructor. You'll\n// probably want the regexp to start with `^`, so that the pattern can\n// only occur at the start of a textblock.\n//\n// `nodeType` is the type of node to wrap in. If it needs attributes,\n// you can either pass them directly, or pass a function that will\n// compute them from the regular expression match.\n//\n// By default, if there's a node with the same type above the newly\n// wrapped node, the rule will try to [join](#transform.Transform.join) those\n// two nodes. You can pass a join predicate, which takes a regular\n// expression match and the node before the wrapped node, and can\n// return a boolean to indicate whether a join should happen.\nfunction wrappingInputRule(regexp, nodeType, getAttrs, joinPredicate) {\n  return new InputRule(regexp, function (state, match, start, end) {\n    var attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n    var tr = state.tr.delete(start, end);\n    var $start = tr.doc.resolve(start), range = $start.blockRange(), wrapping = range && findWrapping(range, nodeType, attrs);\n    if (!wrapping) { return null }\n    tr.wrap(range, wrapping);\n    var before = tr.doc.resolve(start - 1).nodeBefore;\n    if (before && before.type == nodeType && canJoin(tr.doc, start - 1) &&\n        (!joinPredicate || joinPredicate(match, before)))\n      { tr.join(start - 1); }\n    return tr\n  })\n}\n\n// :: (RegExp, NodeType, ?union<Object, ([string]) → ?Object>) → InputRule\n// Build an input rule that changes the type of a textblock when the\n// matched text is typed into it. You'll usually want to start your\n// regexp with `^` to that it is only matched at the start of a\n// textblock. The optional `getAttrs` parameter can be used to compute\n// the new node's attributes, and works the same as in the\n// `wrappingInputRule` function.\nfunction textblockTypeInputRule(regexp, nodeType, getAttrs) {\n  return new InputRule(regexp, function (state, match, start, end) {\n    var $start = state.doc.resolve(start);\n    var attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n    if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), nodeType)) { return null }\n    return state.tr\n      .delete(start, end)\n      .setBlockType(start, start, nodeType, attrs)\n  })\n}\n\nexport { InputRule, closeDoubleQuote, closeSingleQuote, ellipsis, emDash, inputRules, openDoubleQuote, openSingleQuote, smartQuotes, textblockTypeInputRule, undoInputRule, wrappingInputRule };\n//# sourceMappingURL=index.es.js.map\n","import { keymap } from 'prosemirror-keymap';\nimport { undo, redo, history } from 'prosemirror-history';\nimport { toggleMark, wrapIn, chainCommands, exitCode, setBlockType, joinUp, joinDown, lift, selectParentNode, baseKeymap } from 'prosemirror-commands';\nimport { NodeSelection, Plugin } from 'prosemirror-state';\nimport { dropCursor } from 'prosemirror-dropcursor';\nimport { gapCursor } from 'prosemirror-gapcursor';\nimport { icons, MenuItem, wrapItem, blockTypeItem, Dropdown, DropdownSubmenu, joinUpItem, liftItem, selectParentNodeItem, undoItem, redoItem, menuBar } from 'prosemirror-menu';\nimport { wrapInList, splitListItem, liftListItem, sinkListItem } from 'prosemirror-schema-list';\nimport { undoInputRule, smartQuotes, ellipsis, emDash, wrappingInputRule, textblockTypeInputRule, inputRules } from 'prosemirror-inputrules';\n\nvar prefix = \"ProseMirror-prompt\";\n\nfunction openPrompt(options) {\n  var wrapper = document.body.appendChild(document.createElement(\"div\"));\n  wrapper.className = prefix;\n\n  var mouseOutside = function (e) { if (!wrapper.contains(e.target)) { close(); } };\n  setTimeout(function () { return window.addEventListener(\"mousedown\", mouseOutside); }, 50);\n  var close = function () {\n    window.removeEventListener(\"mousedown\", mouseOutside);\n    if (wrapper.parentNode) { wrapper.parentNode.removeChild(wrapper); }\n  };\n\n  var domFields = [];\n  for (var name in options.fields) { domFields.push(options.fields[name].render()); }\n\n  var submitButton = document.createElement(\"button\");\n  submitButton.type = \"submit\";\n  submitButton.className = prefix + \"-submit\";\n  submitButton.textContent = \"OK\";\n  var cancelButton = document.createElement(\"button\");\n  cancelButton.type = \"button\";\n  cancelButton.className = prefix + \"-cancel\";\n  cancelButton.textContent = \"Cancel\";\n  cancelButton.addEventListener(\"click\", close);\n\n  var form = wrapper.appendChild(document.createElement(\"form\"));\n  if (options.title) { form.appendChild(document.createElement(\"h5\")).textContent = options.title; }\n  domFields.forEach(function (field) {\n    form.appendChild(document.createElement(\"div\")).appendChild(field);\n  });\n  var buttons = form.appendChild(document.createElement(\"div\"));\n  buttons.className = prefix + \"-buttons\";\n  buttons.appendChild(submitButton);\n  buttons.appendChild(document.createTextNode(\" \"));\n  buttons.appendChild(cancelButton);\n\n  var box = wrapper.getBoundingClientRect();\n  wrapper.style.top = ((window.innerHeight - box.height) / 2) + \"px\";\n  wrapper.style.left = ((window.innerWidth - box.width) / 2) + \"px\";\n\n  var submit = function () {\n    var params = getValues(options.fields, domFields);\n    if (params) {\n      close();\n      options.callback(params);\n    }\n  };\n\n  form.addEventListener(\"submit\", function (e) {\n    e.preventDefault();\n    submit();\n  });\n\n  form.addEventListener(\"keydown\", function (e) {\n    if (e.keyCode == 27) {\n      e.preventDefault();\n      close();\n    } else if (e.keyCode == 13 && !(e.ctrlKey || e.metaKey || e.shiftKey)) {\n      e.preventDefault();\n      submit();\n    } else if (e.keyCode == 9) {\n      window.setTimeout(function () {\n        if (!wrapper.contains(document.activeElement)) { close(); }\n      }, 500);\n    }\n  });\n\n  var input = form.elements[0];\n  if (input) { input.focus(); }\n}\n\nfunction getValues(fields, domFields) {\n  var result = Object.create(null), i = 0;\n  for (var name in fields) {\n    var field = fields[name], dom = domFields[i++];\n    var value = field.read(dom), bad = field.validate(value);\n    if (bad) {\n      reportInvalid(dom, bad);\n      return null\n    }\n    result[name] = field.clean(value);\n  }\n  return result\n}\n\nfunction reportInvalid(dom, message) {\n  // FIXME this is awful and needs a lot more work\n  var parent = dom.parentNode;\n  var msg = parent.appendChild(document.createElement(\"div\"));\n  msg.style.left = (dom.offsetLeft + dom.offsetWidth + 2) + \"px\";\n  msg.style.top = (dom.offsetTop - 5) + \"px\";\n  msg.className = \"ProseMirror-invalid\";\n  msg.textContent = message;\n  setTimeout(function () { return parent.removeChild(msg); }, 1500);\n}\n\n// ::- The type of field that `FieldPrompt` expects to be passed to it.\nvar Field = function Field(options) { this.options = options; };\n\n// render:: (state: EditorState, props: Object) → dom.Node\n// Render the field to the DOM. Should be implemented by all subclasses.\n\n// :: (dom.Node) → any\n// Read the field's value from its DOM node.\nField.prototype.read = function read (dom) { return dom.value };\n\n// :: (any) → ?string\n// A field-type-specific validation function.\nField.prototype.validateType = function validateType (_value) {};\n\nField.prototype.validate = function validate (value) {\n  if (!value && this.options.required)\n    { return \"Required field\" }\n  return this.validateType(value) || (this.options.validate && this.options.validate(value))\n};\n\nField.prototype.clean = function clean (value) {\n  return this.options.clean ? this.options.clean(value) : value\n};\n\n// ::- A field class for single-line text fields.\nvar TextField = /*@__PURE__*/(function (Field) {\n  function TextField () {\n    Field.apply(this, arguments);\n  }\n\n  if ( Field ) TextField.__proto__ = Field;\n  TextField.prototype = Object.create( Field && Field.prototype );\n  TextField.prototype.constructor = TextField;\n\n  TextField.prototype.render = function render () {\n    var input = document.createElement(\"input\");\n    input.type = \"text\";\n    input.placeholder = this.options.label;\n    input.value = this.options.value || \"\";\n    input.autocomplete = \"off\";\n    return input\n  };\n\n  return TextField;\n}(Field));\n\n// Helpers to create specific types of items\n\nfunction canInsert(state, nodeType) {\n  var $from = state.selection.$from;\n  for (var d = $from.depth; d >= 0; d--) {\n    var index = $from.index(d);\n    if ($from.node(d).canReplaceWith(index, index, nodeType)) { return true }\n  }\n  return false\n}\n\nfunction insertImageItem(nodeType) {\n  return new MenuItem({\n    title: \"Insert image\",\n    label: \"Image\",\n    enable: function enable(state) { return canInsert(state, nodeType) },\n    run: function run(state, _, view) {\n      var ref = state.selection;\n      var from = ref.from;\n      var to = ref.to;\n      var attrs = null;\n      if (state.selection instanceof NodeSelection && state.selection.node.type == nodeType)\n        { attrs = state.selection.node.attrs; }\n      openPrompt({\n        title: \"Insert image\",\n        fields: {\n          src: new TextField({label: \"Location\", required: true, value: attrs && attrs.src}),\n          title: new TextField({label: \"Title\", value: attrs && attrs.title}),\n          alt: new TextField({label: \"Description\",\n                              value: attrs ? attrs.alt : state.doc.textBetween(from, to, \" \")})\n        },\n        callback: function callback(attrs) {\n          view.dispatch(view.state.tr.replaceSelectionWith(nodeType.createAndFill(attrs)));\n          view.focus();\n        }\n      });\n    }\n  })\n}\n\nfunction cmdItem(cmd, options) {\n  var passedOptions = {\n    label: options.title,\n    run: cmd\n  };\n  for (var prop in options) { passedOptions[prop] = options[prop]; }\n  if ((!options.enable || options.enable === true) && !options.select)\n    { passedOptions[options.enable ? \"enable\" : \"select\"] = function (state) { return cmd(state); }; }\n\n  return new MenuItem(passedOptions)\n}\n\nfunction markActive(state, type) {\n  var ref = state.selection;\n  var from = ref.from;\n  var $from = ref.$from;\n  var to = ref.to;\n  var empty = ref.empty;\n  if (empty) { return type.isInSet(state.storedMarks || $from.marks()) }\n  else { return state.doc.rangeHasMark(from, to, type) }\n}\n\nfunction markItem(markType, options) {\n  var passedOptions = {\n    active: function active(state) { return markActive(state, markType) },\n    enable: true\n  };\n  for (var prop in options) { passedOptions[prop] = options[prop]; }\n  return cmdItem(toggleMark(markType), passedOptions)\n}\n\nfunction linkItem(markType) {\n  return new MenuItem({\n    title: \"Add or remove link\",\n    icon: icons.link,\n    active: function active(state) { return markActive(state, markType) },\n    enable: function enable(state) { return !state.selection.empty },\n    run: function run(state, dispatch, view) {\n      if (markActive(state, markType)) {\n        toggleMark(markType)(state, dispatch);\n        return true\n      }\n      openPrompt({\n        title: \"Create a link\",\n        fields: {\n          href: new TextField({\n            label: \"Link target\",\n            required: true\n          }),\n          title: new TextField({label: \"Title\"})\n        },\n        callback: function callback(attrs) {\n          toggleMark(markType, attrs)(view.state, view.dispatch);\n          view.focus();\n        }\n      });\n    }\n  })\n}\n\nfunction wrapListItem(nodeType, options) {\n  return cmdItem(wrapInList(nodeType, options.attrs), options)\n}\n\n// :: (Schema) → Object\n// Given a schema, look for default mark and node types in it and\n// return an object with relevant menu items relating to those marks:\n//\n// **`toggleStrong`**`: MenuItem`\n//   : A menu item to toggle the [strong mark](#schema-basic.StrongMark).\n//\n// **`toggleEm`**`: MenuItem`\n//   : A menu item to toggle the [emphasis mark](#schema-basic.EmMark).\n//\n// **`toggleCode`**`: MenuItem`\n//   : A menu item to toggle the [code font mark](#schema-basic.CodeMark).\n//\n// **`toggleLink`**`: MenuItem`\n//   : A menu item to toggle the [link mark](#schema-basic.LinkMark).\n//\n// **`insertImage`**`: MenuItem`\n//   : A menu item to insert an [image](#schema-basic.Image).\n//\n// **`wrapBulletList`**`: MenuItem`\n//   : A menu item to wrap the selection in a [bullet list](#schema-list.BulletList).\n//\n// **`wrapOrderedList`**`: MenuItem`\n//   : A menu item to wrap the selection in an [ordered list](#schema-list.OrderedList).\n//\n// **`wrapBlockQuote`**`: MenuItem`\n//   : A menu item to wrap the selection in a [block quote](#schema-basic.BlockQuote).\n//\n// **`makeParagraph`**`: MenuItem`\n//   : A menu item to set the current textblock to be a normal\n//     [paragraph](#schema-basic.Paragraph).\n//\n// **`makeCodeBlock`**`: MenuItem`\n//   : A menu item to set the current textblock to be a\n//     [code block](#schema-basic.CodeBlock).\n//\n// **`makeHead[N]`**`: MenuItem`\n//   : Where _N_ is 1 to 6. Menu items to set the current textblock to\n//     be a [heading](#schema-basic.Heading) of level _N_.\n//\n// **`insertHorizontalRule`**`: MenuItem`\n//   : A menu item to insert a horizontal rule.\n//\n// The return value also contains some prefabricated menu elements and\n// menus, that you can use instead of composing your own menu from\n// scratch:\n//\n// **`insertMenu`**`: Dropdown`\n//   : A dropdown containing the `insertImage` and\n//     `insertHorizontalRule` items.\n//\n// **`typeMenu`**`: Dropdown`\n//   : A dropdown containing the items for making the current\n//     textblock a paragraph, code block, or heading.\n//\n// **`fullMenu`**`: [[MenuElement]]`\n//   : An array of arrays of menu elements for use as the full menu\n//     for, for example the [menu bar](https://github.com/prosemirror/prosemirror-menu#user-content-menubar).\nfunction buildMenuItems(schema) {\n  var r = {}, type;\n  if (type = schema.marks.strong)\n    { r.toggleStrong = markItem(type, {title: \"Toggle strong style\", icon: icons.strong}); }\n  if (type = schema.marks.em)\n    { r.toggleEm = markItem(type, {title: \"Toggle emphasis\", icon: icons.em}); }\n  if (type = schema.marks.code)\n    { r.toggleCode = markItem(type, {title: \"Toggle code font\", icon: icons.code}); }\n  if (type = schema.marks.link)\n    { r.toggleLink = linkItem(type); }\n\n  if (type = schema.nodes.image)\n    { r.insertImage = insertImageItem(type); }\n  if (type = schema.nodes.bullet_list)\n    { r.wrapBulletList = wrapListItem(type, {\n      title: \"Wrap in bullet list\",\n      icon: icons.bulletList\n    }); }\n  if (type = schema.nodes.ordered_list)\n    { r.wrapOrderedList = wrapListItem(type, {\n      title: \"Wrap in ordered list\",\n      icon: icons.orderedList\n    }); }\n  if (type = schema.nodes.blockquote)\n    { r.wrapBlockQuote = wrapItem(type, {\n      title: \"Wrap in block quote\",\n      icon: icons.blockquote\n    }); }\n  if (type = schema.nodes.paragraph)\n    { r.makeParagraph = blockTypeItem(type, {\n      title: \"Change to paragraph\",\n      label: \"Plain\"\n    }); }\n  if (type = schema.nodes.code_block)\n    { r.makeCodeBlock = blockTypeItem(type, {\n      title: \"Change to code block\",\n      label: \"Code\"\n    }); }\n  if (type = schema.nodes.heading)\n    { for (var i = 1; i <= 10; i++)\n      { r[\"makeHead\" + i] = blockTypeItem(type, {\n        title: \"Change to heading \" + i,\n        label: \"Level \" + i,\n        attrs: {level: i}\n      }); } }\n  if (type = schema.nodes.horizontal_rule) {\n    var hr = type;\n    r.insertHorizontalRule = new MenuItem({\n      title: \"Insert horizontal rule\",\n      label: \"Horizontal rule\",\n      enable: function enable(state) { return canInsert(state, hr) },\n      run: function run(state, dispatch) { dispatch(state.tr.replaceSelectionWith(hr.create())); }\n    });\n  }\n\n  var cut = function (arr) { return arr.filter(function (x) { return x; }); };\n  r.insertMenu = new Dropdown(cut([r.insertImage, r.insertHorizontalRule]), {label: \"Insert\"});\n  r.typeMenu = new Dropdown(cut([r.makeParagraph, r.makeCodeBlock, r.makeHead1 && new DropdownSubmenu(cut([\n    r.makeHead1, r.makeHead2, r.makeHead3, r.makeHead4, r.makeHead5, r.makeHead6\n  ]), {label: \"Heading\"})]), {label: \"Type...\"});\n\n  r.inlineMenu = [cut([r.toggleStrong, r.toggleEm, r.toggleCode, r.toggleLink])];\n  r.blockMenu = [cut([r.wrapBulletList, r.wrapOrderedList, r.wrapBlockQuote, joinUpItem,\n                      liftItem, selectParentNodeItem])];\n  r.fullMenu = r.inlineMenu.concat([[r.insertMenu, r.typeMenu]], [[undoItem, redoItem]], r.blockMenu);\n\n  return r\n}\n\nvar mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform) : false;\n\n// :: (Schema, ?Object) → Object\n// Inspect the given schema looking for marks and nodes from the\n// basic schema, and if found, add key bindings related to them.\n// This will add:\n//\n// * **Mod-b** for toggling [strong](#schema-basic.StrongMark)\n// * **Mod-i** for toggling [emphasis](#schema-basic.EmMark)\n// * **Mod-`** for toggling [code font](#schema-basic.CodeMark)\n// * **Ctrl-Shift-0** for making the current textblock a paragraph\n// * **Ctrl-Shift-1** to **Ctrl-Shift-Digit6** for making the current\n//   textblock a heading of the corresponding level\n// * **Ctrl-Shift-Backslash** to make the current textblock a code block\n// * **Ctrl-Shift-8** to wrap the selection in an ordered list\n// * **Ctrl-Shift-9** to wrap the selection in a bullet list\n// * **Ctrl->** to wrap the selection in a block quote\n// * **Enter** to split a non-empty textblock in a list item while at\n//   the same time splitting the list item\n// * **Mod-Enter** to insert a hard break\n// * **Mod-_** to insert a horizontal rule\n// * **Backspace** to undo an input rule\n// * **Alt-ArrowUp** to `joinUp`\n// * **Alt-ArrowDown** to `joinDown`\n// * **Mod-BracketLeft** to `lift`\n// * **Escape** to `selectParentNode`\n//\n// You can suppress or map these bindings by passing a `mapKeys`\n// argument, which maps key names (say `\"Mod-B\"` to either `false`, to\n// remove the binding, or a new key name string.\nfunction buildKeymap(schema, mapKeys) {\n  var keys = {}, type;\n  function bind(key, cmd) {\n    if (mapKeys) {\n      var mapped = mapKeys[key];\n      if (mapped === false) { return }\n      if (mapped) { key = mapped; }\n    }\n    keys[key] = cmd;\n  }\n\n\n  bind(\"Mod-z\", undo);\n  bind(\"Shift-Mod-z\", redo);\n  bind(\"Backspace\", undoInputRule);\n  if (!mac) { bind(\"Mod-y\", redo); }\n\n  bind(\"Alt-ArrowUp\", joinUp);\n  bind(\"Alt-ArrowDown\", joinDown);\n  bind(\"Mod-BracketLeft\", lift);\n  bind(\"Escape\", selectParentNode);\n\n  if (type = schema.marks.strong) {\n    bind(\"Mod-b\", toggleMark(type));\n    bind(\"Mod-B\", toggleMark(type));\n  }\n  if (type = schema.marks.em) {\n    bind(\"Mod-i\", toggleMark(type));\n    bind(\"Mod-I\", toggleMark(type));\n  }\n  if (type = schema.marks.code)\n    { bind(\"Mod-`\", toggleMark(type)); }\n\n  if (type = schema.nodes.bullet_list)\n    { bind(\"Shift-Ctrl-8\", wrapInList(type)); }\n  if (type = schema.nodes.ordered_list)\n    { bind(\"Shift-Ctrl-9\", wrapInList(type)); }\n  if (type = schema.nodes.blockquote)\n    { bind(\"Ctrl->\", wrapIn(type)); }\n  if (type = schema.nodes.hard_break) {\n    var br = type, cmd = chainCommands(exitCode, function (state, dispatch) {\n      dispatch(state.tr.replaceSelectionWith(br.create()).scrollIntoView());\n      return true\n    });\n    bind(\"Mod-Enter\", cmd);\n    bind(\"Shift-Enter\", cmd);\n    if (mac) { bind(\"Ctrl-Enter\", cmd); }\n  }\n  if (type = schema.nodes.list_item) {\n    bind(\"Enter\", splitListItem(type));\n    bind(\"Mod-[\", liftListItem(type));\n    bind(\"Mod-]\", sinkListItem(type));\n  }\n  if (type = schema.nodes.paragraph)\n    { bind(\"Shift-Ctrl-0\", setBlockType(type)); }\n  if (type = schema.nodes.code_block)\n    { bind(\"Shift-Ctrl-\\\\\", setBlockType(type)); }\n  if (type = schema.nodes.heading)\n    { for (var i = 1; i <= 6; i++) { bind(\"Shift-Ctrl-\" + i, setBlockType(type, {level: i})); } }\n  if (type = schema.nodes.horizontal_rule) {\n    var hr = type;\n    bind(\"Mod-_\", function (state, dispatch) {\n      dispatch(state.tr.replaceSelectionWith(hr.create()).scrollIntoView());\n      return true\n    });\n  }\n\n  return keys\n}\n\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nfunction blockQuoteRule(nodeType) {\n  return wrappingInputRule(/^\\s*>\\s$/, nodeType)\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nfunction orderedListRule(nodeType) {\n  return wrappingInputRule(/^(\\d+)\\.\\s$/, nodeType, function (match) { return ({order: +match[1]}); },\n                           function (match, node) { return node.childCount + node.attrs.order == +match[1]; })\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nfunction bulletListRule(nodeType) {\n  return wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType)\n}\n\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nfunction codeBlockRule(nodeType) {\n  return textblockTypeInputRule(/^```$/, nodeType)\n}\n\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nfunction headingRule(nodeType, maxLevel) {\n  return textblockTypeInputRule(new RegExp(\"^(#{1,\" + maxLevel + \"})\\\\s$\"),\n                                nodeType, function (match) { return ({level: match[1].length}); })\n}\n\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nfunction buildInputRules(schema) {\n  var rules = smartQuotes.concat(ellipsis, emDash), type;\n  if (type = schema.nodes.blockquote) { rules.push(blockQuoteRule(type)); }\n  if (type = schema.nodes.ordered_list) { rules.push(orderedListRule(type)); }\n  if (type = schema.nodes.bullet_list) { rules.push(bulletListRule(type)); }\n  if (type = schema.nodes.code_block) { rules.push(codeBlockRule(type)); }\n  if (type = schema.nodes.heading) { rules.push(headingRule(type, 6)); }\n  return inputRules({rules: rules})\n}\n\n// !! This module exports helper functions for deriving a set of basic\n// menu items, input rules, or key bindings from a schema. These\n// values need to know about the schema for two reasons—they need\n// access to specific instances of node and mark types, and they need\n// to know which of the node and mark types that they know about are\n// actually present in the schema.\n//\n// The `exampleSetup` plugin ties these together into a plugin that\n// will automatically enable this basic functionality in an editor.\n\n// :: (Object) → [Plugin]\n// A convenience plugin that bundles together a simple menu with basic\n// key bindings, input rules, and styling for the example schema.\n// Probably only useful for quickly setting up a passable\n// editor—you'll need more control over your settings in most\n// real-world situations.\n//\n//   options::- The following options are recognized:\n//\n//     schema:: Schema\n//     The schema to generate key bindings and menu items for.\n//\n//     mapKeys:: ?Object\n//     Can be used to [adjust](#example-setup.buildKeymap) the key bindings created.\n//\n//     menuBar:: ?bool\n//     Set to false to disable the menu bar.\n//\n//     history:: ?bool\n//     Set to false to disable the history plugin.\n//\n//     floatingMenu:: ?bool\n//     Set to false to make the menu bar non-floating.\n//\n//     menuContent:: [[MenuItem]]\n//     Can be used to override the menu content.\nfunction exampleSetup(options) {\n  var plugins = [\n    buildInputRules(options.schema),\n    keymap(buildKeymap(options.schema, options.mapKeys)),\n    keymap(baseKeymap),\n    dropCursor(),\n    gapCursor()\n  ];\n  if (options.menuBar !== false)\n    { plugins.push(menuBar({floating: options.floatingMenu !== false,\n                          content: options.menuContent || buildMenuItems(options.schema).fullMenu})); }\n  if (options.history !== false)\n    { plugins.push(history()); }\n\n  return plugins.concat(new Plugin({\n    props: {\n      attributes: {class: \"ProseMirror-example-setup-style\"}\n    }\n  }))\n}\n\nexport { buildInputRules, buildKeymap, buildMenuItems, exampleSetup };\n//# sourceMappingURL=index.es.js.map\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {Array<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n *\n * @param {Array<ITEM>} arr\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => arr.every(f)\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @param {Array<S>} arr\n * @param {function(S, number, Array<S>):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => arr.some(f)\n\n/**\n * @template ELEM\n *\n * @param {Array<ELEM>} a\n * @param {Array<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* istanbul ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* istanbul ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* istanbul ignore next */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  utf8TextDecoder = null\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n","/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nexport const varStorage = _localStorage\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\n\n/* istanbul ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name)\n/* istanbul ignore next */\nexport const isBrowser = typeof window !== 'undefined' && !isNode\n/* istanbul ignore next */\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create()\n      // eslint-disable-next-line no-undef\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasParam = name => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\n\n/* istanbul ignore next */\nexport const production = hasConf('production')\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* istanbul ignore next */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* istanbul ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* istanbul ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\n/**\n * @type {number}\n */\nexport const HIGHEST_INT32 = binary.BITS31\n\n/**\n * @module number\n */\n\n/* istanbul ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nconst verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer.\n *\n * Encodes integers in the range from [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num >>>= 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * Encodes integers in the range from [-2147483648, -2147483647].\n *\n * We don't use zig-zag encoding because we want to keep the option open\n * to use the same function for BigInt and 53bit integers (doubles).\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num >>>= 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num >>>= 7\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeVarString = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && data <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  /* istanbul ignore else */\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as binary from './binary.js'\nimport * as math from './math.js'\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let len = 0\n  while (true) {\n    const r = decoder.arr[decoder.pos++]\n    num = num | ((r & binary.BITS7) << len)\n    len += 7\n    if (r < binary.BIT8) {\n      return num >>> 0 // return unsigned number!\n    }\n    /* istanbul ignore if */\n    if (len > 35) {\n      throw new Error('Integer out of range!')\n    }\n  }\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let len = 6\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  while (true) {\n    r = decoder.arr[decoder.pos++]\n    num = num | ((r & binary.BITS7) << len)\n    len += 7\n    if (r < binary.BIT8) {\n      return sign * (num >>> 0)\n    }\n    /* istanbul ignore if */\n    if (len > 41) {\n      throw new Error('Integer out of range!')\n    }\n  }\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\nexport const readVarString = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = diff >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/* eslint-env browser */\nexport const performance = typeof window === 'undefined' ? null : (typeof window.performance !== 'undefined' && window.performance) || null\n\nconst isoCrypto = typeof crypto === 'undefined' ? null : crypto\n\n/**\n * @type {function(number):ArrayBuffer}\n */\nexport const cryptoRandomBuffer = isoCrypto !== null\n  ? len => {\n    // browser\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    isoCrypto.getRandomValues(arr)\n    return buf\n  }\n  : len => {\n    // polyfill\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    for (let i = 0; i < len; i++) {\n      arr[i] = Math.ceil((Math.random() * 0xFFFFFFFF) >>> 0)\n    }\n    return buf\n  }\n","\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport { cryptoRandomBuffer } from './isomorphic.js'\n\nexport const rand = Math.random\n\n/* istanbul ignore next */\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* istanbul ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* istanbul ignore next */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* istanbul ignore next */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n","/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n","/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n","/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* istanbul ignore next */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const createTextNode = text => doc.createTextNode(text)\n\n/* istanbul ignore next */\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\n/* istanbul ignore next */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\n/* istanbul ignore next */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\n/* istanbul ignore next */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\n/* istanbul ignore next */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\n/* istanbul ignore next */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\n/* istanbul ignore next */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\n/* istanbul ignore next */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\n/* istanbul ignore next */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\n/* istanbul ignore next */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* istanbul ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as symbol from './symbol.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as time from './time.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [BOLD]: pair.create('font-weight', 'bold'),\n  [UNBOLD]: pair.create('font-weight', 'normal'),\n  [BLUE]: pair.create('color', 'blue'),\n  [GREEN]: pair.create('color', 'green'),\n  [GREY]: pair.create('color', 'grey'),\n  [RED]: pair.create('color', 'red'),\n  [PURPLE]: pair.create('color', 'purple'),\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [UNCOLOR]: pair.create('color', 'black')\n}\n\nconst _nodeStyleMap = {\n  [BOLD]: '\\u001b[1m',\n  [UNBOLD]: '\\u001b[2m',\n  [BLUE]: '\\x1b[34m',\n  [GREEN]: '\\x1b[32m',\n  [GREY]: '\\u001b[37m',\n  [RED]: '\\x1b[31m',\n  [PURPLE]: '\\x1b[35m',\n  [ORANGE]: '\\x1b[38;5;208m',\n  [UNCOLOR]: '\\x1b[0m'\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeBrowserLoggingArgs = args => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNodeLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _nodeStyleMap[arg]\n    if (style !== undefined) {\n      strBuilder.push(style)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg)\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    strBuilder.push('\\x1b[0m')\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    /* istanbul ignore else */\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/* istanbul ignore next */\nconst computeLoggingArgs = env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(ORANGE)\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Error} err\n */\nexport const printError = err => {\n  console.error(err)\n  vconsoles.forEach(vc => vc.printError(err))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`)\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach(vc => vc.printImg(url, height))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} base64\n * @param {number} height\n */\nexport const printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupEnd())\n}\n\n/* istanbul ignore next */\n/**\n * @param {function():Node} createNode\n */\nexport const printDom = createNode =>\n  vconsoles.forEach(vc => vc.printDom(createNode()))\n\n/* istanbul ignore next */\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\nexport const printCanvas = (canvas, height) => printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = new Set()\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\nconst _computeLineSpans = args => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [pair.create('style', dom.mapToStyleString(currentStyle))], [dom.text(arg)])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(dom.element('span', [], [dom.text(/** @type {string} */ (content))]))\n    }\n  }\n  return spans\n}\n\nconst lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* istanbul ignore next */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [pair.create('hidden', collapsed), pair.create('style', 'color:grey;font-size:120%;')], [dom.text('▼')])\n      const triangleRight = dom.element('span', [pair.create('hidden', !collapsed), pair.create('style', 'color:grey;font-size:125%;')], [dom.text('▶')])\n      const content = dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, dom.text(' ')].concat(_computeLineSpans(args)))\n      const nextContainer = dom.element('div', [pair.create('hidden', collapsed)])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', event => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([RED, BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('img', [pair.create('src', url), pair.create('height', `${math.round(height * 1.5)}px`)])])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @param {Element} dom\n */\nexport const createVConsole = dom => new VConsole(dom)\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = moduleName => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null && (debugRegexVar === '*' || debugRegexVar === 'true' || new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n\n  return !doLogging ? func.nop : (...args) => {\n    const timeNow = time.getUnixTime()\n    const timeDiff = timeNow - lastLoggingTime\n    lastLoggingTime = timeNow\n    print(color, moduleName, UNCOLOR, ...args.map(arg => (typeof arg === 'string' || typeof arg === 'symbol') ? arg : JSON.stringify(arg)), color, ' +' + timeDiff + 'ms')\n  }\n}\n","/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  /**\n   * @param {function(T):R} f\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","import { Observable } from 'lib0/observable';\nimport * as array from 'lib0/array';\nimport * as math from 'lib0/math';\nimport * as map from 'lib0/map';\nimport * as encoding from 'lib0/encoding';\nimport * as decoding from 'lib0/decoding';\nimport * as random from 'lib0/random';\nimport * as buffer from 'lib0/buffer';\nimport * as error from 'lib0/error';\nimport * as binary from 'lib0/binary';\nimport * as f from 'lib0/function';\nimport { callAll } from 'lib0/function';\nimport * as set from 'lib0/set';\nimport * as logging from 'lib0/logging';\nimport * as time from 'lib0/time';\nimport * as iterator from 'lib0/iterator';\nimport * as object from 'lib0/object';\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nclass AbstractConnector extends Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super();\n    this.doc = ydoc;\n    this.awareness = awareness;\n  }\n}\n\nclass DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock;\n    /**\n     * @type {number}\n     */\n    this.len = len;\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nclass DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map();\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid));\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i];\n      iterateStructs(transaction, structs, del.clock, del.len, f);\n    }\n  });\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nconst findIndexDS = (dis, clock) => {\n  let left = 0;\n  let right = dis.length - 1;\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2);\n    const mid = dis[midindex];\n    const midclock = mid.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n  }\n  return null\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client);\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n};\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock);\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j;\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1];\n      const right = dels[i];\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock);\n      } else {\n        if (j < i) {\n          dels[j] = right;\n        }\n        j++;\n      }\n    }\n    dels.length = j;\n  });\n};\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nconst mergeDeleteSets = dss => {\n  const merged = new DeleteSet();\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice();\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || []);\n        }\n        merged.clients.set(client, dels);\n      }\n    });\n  }\n  sortAndMergeDeleteSet(merged);\n  return merged\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nconst addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => []).push(new DeleteItem(clock, length));\n};\n\nconst createDeleteSet = () => new DeleteSet();\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nconst createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet();\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = [];\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i];\n      if (struct.deleted) {\n        const clock = struct.id.clock;\n        let len = struct.length;\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length;\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len));\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems);\n    }\n  });\n  return ds\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size);\n  ds.clients.forEach((dsitems, client) => {\n    encoder.resetDsCurVal();\n    encoding.writeVarUint(encoder.restEncoder, client);\n    const len = dsitems.length;\n    encoding.writeVarUint(encoder.restEncoder, len);\n    for (let i = 0; i < len; i++) {\n      const item = dsitems[i];\n      encoder.writeDsClock(item.clock);\n      encoder.writeDsLen(item.len);\n    }\n  });\n};\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nconst readDeleteSet = decoder => {\n  const ds = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => []);\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()));\n      }\n    }\n  }\n  return ds\n};\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nconst readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    const structs = store.clients.get(client) || [];\n    const state = getState(store, client);\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock();\n      const clockEnd = clock + decoder.readDsLen();\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state);\n        }\n        let index = findIndexSS(structs, clock);\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index];\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n          index++; // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++];\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock));\n              }\n              struct.delete(transaction);\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock);\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2();\n    encoding.writeVarUint(ds.restEncoder, 0); // encode 0 structs\n    writeDeleteSet(ds, unappliedDS);\n    return ds.toUint8Array()\n  }\n  return null\n};\n\n/**\n * @module Y\n */\n\nconst generateNewClientId = random.uint32;\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nclass Doc extends Observable {\n  /**\n   * @param {DocOpts} [opts] configuration\n   */\n  constructor ({ guid = random.uuidv4(), gc = true, gcFilter = () => true, meta = null, autoLoad = false } = {}) {\n    super();\n    this.gc = gc;\n    this.gcFilter = gcFilter;\n    this.clientID = generateNewClientId();\n    this.guid = guid;\n    /**\n     * @type {Map<string, AbstractType<YEvent>>}\n     */\n    this.share = new Map();\n    this.store = new StructStore();\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null;\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = [];\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set();\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null;\n    this.shouldLoad = autoLoad;\n    this.autoLoad = autoLoad;\n    this.meta = meta;\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item;\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this);\n      }, null, true);\n    }\n    this.shouldLoad = true;\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(Array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @param {function(Transaction):void} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    transact(this, f, origin);\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor();\n      t._integrate(this, null);\n      return t\n    });\n    const Constr = type.constructor;\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor();\n        t._map = type._map;\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t;\n          }\n        });\n        t._start = type._start;\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t;\n        }\n        t._length = type._length;\n        this.share.set(name, t);\n        t._integrate(this, null);\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {};\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON();\n    });\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy());\n    const item = this._item;\n    if (item !== null) {\n      this._item = null;\n      const content = /** @type {ContentDoc} */ (item.content);\n      if (item.deleted) {\n        // @ts-ignore\n        content.doc = null;\n      } else {\n        content.doc = new Doc({ guid: this.guid, ...content.opts });\n        content.doc._item = item;\n      }\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(content.doc);\n        }\n        transaction.subdocsRemoved.add(this);\n      }, null, true);\n    }\n    this.emit('destroyed', [true]);\n    this.emit('destroy', [this]);\n    super.destroy();\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f);\n  }\n}\n\nclass DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nclass UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nclass DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0;\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder);\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1;\n    this.dsCurrVal += diff;\n    return diff\n  }\n}\n\nclass UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder);\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = [];\n    decoding.readVarUint(decoder); // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder));\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read();\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read();\n      this.keys.push(key);\n      return key\n    }\n  }\n}\n\nclass DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder();\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n}\n\nclass UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed));\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key);\n  }\n}\n\nclass DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder(); // encodes all the rest / non-optimized\n    this.dsCurrVal = 0;\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal;\n    this.dsCurrVal = clock;\n    encoding.writeVarUint(this.restEncoder, diff);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase();\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1);\n    this.dsCurrVal += len;\n  }\n}\n\nclass UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super();\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map();\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0;\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.clientEncoder = new encoding.UintOptRleEncoder();\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.stringEncoder = new encoding.StringEncoder();\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.typeRefEncoder = new encoding.UintOptRleEncoder();\n    this.lenEncoder = new encoding.UintOptRleEncoder();\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder();\n    encoding.writeVarUint(encoder, 0); // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder));\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder));\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array());\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder));\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client);\n    this.leftClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client);\n    this.rightClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed);\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key);\n    if (clock === undefined) {\n      this.keyClockEncoder.write(this.keyClock++);\n      this.stringEncoder.write(key);\n    } else {\n      this.keyClockEncoder.write(this.keyClock++);\n    }\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock); // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock);\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs);\n  encoder.writeClient(client);\n  encoding.writeVarUint(encoder.restEncoder, clock);\n  const firstStruct = structs[startNewStructs];\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock);\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0);\n  }\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nconst writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map();\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock);\n    }\n  });\n  getStateVector(store).forEach((clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0);\n    }\n  });\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size);\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  Array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    // @ts-ignore\n    writeStructs(encoder, store.clients.get(client), client, clock);\n  });\n};\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nconst readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create();\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs });\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen();\n          refs[i] = new GC(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder);\n          refs[i] = new Skip(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          );\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct;\n          clock += struct.length;\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n};\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = [];\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = Array.from(clientsStructRefs.keys()).sort((a, b) => a - b);\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop();\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  };\n  let curStructsTarget = getNextStructTarget();\n  if (curStructsTarget === null && stack.length === 0) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore();\n  const missingSV = new Map();\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client);\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock);\n    }\n  };\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++];\n  // caching the state because it is used very often\n  const state = new Map();\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client;\n      const unapplicableItems = clientsStructRefs.get(client);\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--;\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i));\n        clientsStructRefs.delete(client);\n        unapplicableItems.i = 0;\n        unapplicableItems.refs = [];\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item]);\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client);\n    }\n    stack.length = 0;\n  };\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client));\n      const offset = localClock - stackHead.id.clock;\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead);\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1);\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS();\n      } else {\n        const missing = stackHead.getMissing(transaction, store);\n        if (missing !== null) {\n          stack.push(stackHead);\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 };\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing));\n            addStackToRestSS();\n          } else {\n            stackHead = structRefs.refs[structRefs.i++];\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset);\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length);\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop());\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n    } else {\n      curStructsTarget = getNextStructTarget();\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2();\n    writeClientsStructs(encoder, restStructs, new Map());\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0); // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nconst writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nconst readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false;\n    let retry = false;\n    const doc = transaction.doc;\n    const store = doc.store;\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc);\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss);\n    const pending = store.pendingStructs;\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true;\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client);\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock);\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update]);\n      }\n    } else {\n      store.pendingStructs = restStructs;\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store);\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs));\n      decoding.readVarUint(pendingDSUpdate.restDecoder); // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store);\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2]);\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2;\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest;\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update;\n      store.pendingStructs = null;\n      applyUpdateV2(transaction.doc, update);\n    }\n  }, transactionOrigin, false);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder));\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nconst applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update);\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder));\n};\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1);\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nconst writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector);\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store));\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector);\n  writeStateAsUpdate(encoder, doc, targetStateVector);\n  const updates = [encoder.toUint8Array()];\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs);\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector));\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1());\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst readStateVector = decoder => {\n  const ss = new Map();\n  const ssLength = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const clock = decoding.readVarUint(decoder.restDecoder);\n    ss.set(client, clock);\n  }\n  return ss\n};\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)));\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nconst writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size);\n  sv.forEach((clock, client) => {\n    encoding.writeVarUint(encoder.restEncoder, client); // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock);\n  });\n  return encoder\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nconst writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store));\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc);\n  } else {\n    writeDocumentStateVector(encoder, doc);\n  }\n  return encoder.toUint8Array()\n};\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1());\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nclass EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = [];\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nconst createEventHandler = () => new EventHandler();\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nconst addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f);\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nconst removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l;\n  const len = l.length;\n  eventHandler.l = l.filter(g => f !== g);\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.');\n  }\n};\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nconst callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1]);\n\nclass ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client;\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock;\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock);\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nconst createID = (client, clock) => new ID(client, clock);\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nconst writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client);\n  encoding.writeVarUint(encoder, id.clock);\n};\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nconst readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder));\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nconst findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n};\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nconst isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item;\n  }\n  return false\n};\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nconst logType = type => {\n  const res = [];\n  let n = type._start;\n  while (n) {\n    res.push(n);\n    n = n.right;\n  }\n  console.log('Children: ', res);\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content));\n};\n\nclass PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map();\n    this.yusers = storeType;\n    this.doc = doc;\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map();\n    this.dss = dss;\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds');\n      const ids = user.get('ids');\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription);\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]));\n            }\n          });\n        });\n      });\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))));\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      );\n      ids.forEach(addClientId);\n    };\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      );\n    });\n    // add intial data\n    storeType.forEach(initUser);\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} [conf]\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers;\n    let user = users.get(userDescription);\n    if (!user) {\n      user = new YMap();\n      user.set('ids', new YArray());\n      user.set('ds', new YArray());\n      users.set(userDescription, user);\n    }\n    user.get('ids').push([clientid]);\n    users.observe(event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription);\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite;\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid]);\n            }\n          });\n          const encoder = new DSEncoderV1();\n          const ds = this.dss.get(userDescription);\n          if (ds) {\n            writeDeleteSet(encoder, ds);\n            user.get('ds').push([encoder.toUint8Array()]);\n          }\n        }\n      }, 0);\n    });\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds');\n        const ds = transaction.deleteSet;\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1();\n          writeDeleteSet(encoder, ds);\n          yds.push([encoder.toUint8Array()]);\n        }\n      });\n    });\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nclass RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type;\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname;\n    /**\n     * @type {ID | null}\n     */\n    this.item = item;\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nconst relativePositionToJSON = rpos => {\n  const json = {};\n  if (rpos.type) {\n    json.type = rpos.type;\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname;\n  }\n  if (rpos.item) {\n    json.item = rpos.item;\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc;\n  }\n  return json\n};\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc);\n\nclass AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n    /**\n     * @type {number}\n     */\n    this.index = index;\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nconst createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc);\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nconst createRelativePosition = (type, item, assoc) => {\n  let typeid = null;\n  let tname = null;\n  if (type._item === null) {\n    tname = findRootTypeKey(type);\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock);\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n};\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start;\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--;\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length;\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right;\n  }\n  return createRelativePosition(type, null, assoc)\n};\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nconst writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos;\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0);\n    writeID(encoder, item);\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1);\n    encoding.writeVarString(encoder, tname);\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2);\n    writeID(encoder, type);\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc);\n  return encoder\n};\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nconst encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder();\n  writeRelativePosition(encoder, rpos);\n  return encoding.toUint8Array(encoder)\n};\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nconst readRelativePosition = decoder => {\n  let type = null;\n  let tname = null;\n  let itemID = null;\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder);\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder);\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder);\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0;\n  return new RelativePosition(type, tname, itemID, assoc)\n};\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nconst decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array));\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nconst createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store;\n  const rightID = rpos.item;\n  const typeID = rpos.type;\n  const tname = rpos.tname;\n  const assoc = rpos.assoc;\n  let type = null;\n  let index = 0;\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID);\n    const right = res.item;\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent);\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)); // adjust position based on left association if necessary\n      let n = right.left;\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length;\n        }\n        n = n.left;\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname);\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID);\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type;\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length;\n    } else {\n      index = 0;\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n};\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n);\n\nclass Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds;\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv;\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nconst equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients;\n  const ds2 = snap2.ds.clients;\n  const sv1 = snap1.sv;\n  const sv2 = snap2.sv;\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || [];\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i];\n      const dsitem2 = dsitems2[i];\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nconst encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds);\n  writeStateVector(encoder, snapshot.sv);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nconst encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1());\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nconst decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n};\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nconst decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)));\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nconst createSnapshot = (ds, sm) => new Snapshot(ds, sm);\n\nconst emptySnapshot = createSnapshot(createDeleteSet(), new Map());\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nconst snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store));\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nconst isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id);\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nconst splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create);\n  const store = transaction.doc.store;\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n    });\n    iterateDeletedStructs(transaction, snapshot.ds, item => {});\n    meta.add(snapshot);\n  }\n};\n\n/**\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nconst createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('originDoc must not be garbage collected')\n  }\n  const { sv, ds } = snapshot;\n\n  const encoder = new UpdateEncoderV2();\n  originDoc.transact(transaction => {\n    let size = 0;\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++;\n      }\n    });\n    encoding.writeVarUint(encoder.restEncoder, size);\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n      const structs = originDoc.store.clients.get(client) || [];\n      const lastStructIndex = findIndexSS(structs, clock - 1);\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1);\n      encoder.writeClient(client);\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0);\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0);\n      }\n    }\n    writeDeleteSet(encoder, ds);\n  });\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot');\n  return newDoc\n};\n\nclass StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map();\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null;\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null;\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nconst getStateVector = store => {\n  const sm = new Map();\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1];\n    sm.set(client, struct.id.clock + struct.length);\n  });\n  return sm\n};\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nconst getState = (store, client) => {\n  const structs = store.clients.get(client);\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1];\n  return lastStruct.id.clock + lastStruct.length\n};\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nconst addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client);\n  if (structs === undefined) {\n    structs = [];\n    store.clients.set(struct.id.client, structs);\n  } else {\n    const lastStruct = structs[structs.length - 1];\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct);\n};\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nconst findIndexSS = (structs, clock) => {\n  let left = 0;\n  let right = structs.length - 1;\n  let mid = structs[right];\n  let midclock = mid.id.clock;\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right); // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex];\n    midclock = mid.id.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n    midindex = math.floor((left + right) / 2);\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nconst find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  return structs[findIndexSS(structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nconst getItem = /** @type {function(StructStore,ID):Item} */ (find);\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nconst findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock);\n  const struct = structs[index];\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n    return index + 1\n  }\n  return index\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client));\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  const index = findIndexSS(structs, id.clock);\n  const struct = structs[index];\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1));\n  }\n  return struct\n};\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nconst replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client));\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct;\n};\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len;\n  let index = findIndexCleanStart(transaction, structs, clockStart);\n  let struct;\n  do {\n    struct = structs[index++];\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd);\n    }\n    f(struct);\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n};\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nclass Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet();\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store);\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map();\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent>,Set<String|null>>}\n     */\n    this.changed = new Map();\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent>,Array<YEvent>>}\n     */\n    this.changedParentTypes = new Map();\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = [];\n    /**\n     * @type {any}\n     */\n    this.origin = origin;\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map();\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local;\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set();\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nconst writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet);\n  writeStructsFromTransaction(encoder, transaction);\n  writeDeleteSet(encoder, transaction.deleteSet);\n  return true\n};\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent>} type\n * @param {string|null} parentSub\n */\nconst addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item;\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub);\n  }\n};\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n */\nconst tryToMergeWithLeft = (structs, pos) => {\n  const left = structs[pos - 1];\n  const right = structs[pos];\n  if (left.deleted === right.deleted && left.constructor === right.constructor) {\n    if (left.mergeWith(right)) {\n      structs.splice(pos, 1);\n      if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n        /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left));\n      }\n    }\n  }\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len;\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si];\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false);\n        }\n      }\n    }\n  }\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1));\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[--si]\n      ) {\n        tryToMergeWithLeft(structs, si);\n      }\n    }\n  });\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter);\n  tryMergeDeleteSet(ds, store);\n};\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i];\n    const doc = transaction.doc;\n    const store = doc.store;\n    const ds = transaction.deleteSet;\n    const mergeStructs = transaction._mergeStructs;\n    try {\n      sortAndMergeDeleteSet(ds);\n      transaction.afterState = getStateVector(transaction.doc.store);\n      doc._transaction = null;\n      doc.emit('beforeObserverCalls', [transaction, doc]);\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = [];\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs);\n          }\n        })\n      );\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) =>\n          fs.push(() => {\n            // We need to think about the possibility that the user transforms the\n            // Y.Doc in the event.\n            if (type._item === null || !type._item.deleted) {\n              events = events\n                .filter(event =>\n                  event.target._item === null || !event.target._item.deleted\n                );\n              events\n                .forEach(event => {\n                  event.currentTarget = type;\n                });\n              // sort events by path length so that top-level events are fired first.\n              events\n                .sort((event1, event2) => event1.path.length - event2.path.length);\n              // We don't need to check for events.length\n              // because we know it has at least one element\n              callEventHandlerListeners(type._dEH, events, transaction);\n            }\n          })\n        );\n        fs.push(() => doc.emit('afterTransaction', [transaction, doc]));\n      });\n      callAll(fs, []);\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter);\n      }\n      tryMergeDeleteSet(ds, store);\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0;\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1);\n          for (let i = structs.length - 1; i >= firstChangePos; i--) {\n            tryToMergeWithLeft(structs, i);\n          }\n        }\n      });\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = 0; i < mergeStructs.length; i++) {\n        const { client, clock } = mergeStructs[i].id;\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n        const replacedStructPos = findIndexSS(structs, clock);\n        if (replacedStructPos + 1 < structs.length) {\n          tryToMergeWithLeft(structs, replacedStructPos + 1);\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLeft(structs, replacedStructPos);\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        doc.clientID = generateNewClientId();\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.');\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc]);\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      transaction.subdocsAdded.forEach(subdoc => doc.subdocs.add(subdoc));\n      transaction.subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc));\n\n      doc.emit('subdocs', [{ loaded: transaction.subdocsLoaded, added: transaction.subdocsAdded, removed: transaction.subdocsRemoved }]);\n      transaction.subdocsRemoved.forEach(subdoc => subdoc.destroy());\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = [];\n        doc.emit('afterAllTransactions', [doc, transactionCleanups]);\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1);\n      }\n    }\n  }\n};\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @param {Doc} doc\n * @param {function(Transaction):void} f\n * @param {any} [origin=true]\n *\n * @function\n */\nconst transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups;\n  let initialCall = false;\n  if (doc._transaction === null) {\n    initialCall = true;\n    doc._transaction = new Transaction(doc, origin, local);\n    transactionCleanups.push(doc._transaction);\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc]);\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc]);\n  }\n  try {\n    f(doc._transaction);\n  } finally {\n    if (initialCall && transactionCleanups[0] === doc._transaction) {\n      // The first transaction ended, now process observer calls.\n      // Observer call may create new transactions for which we need to call the observers and do cleanup.\n      // We don't want to nest these calls, so we execute these calls one after\n      // another.\n      // Also we need to ensure that all cleanups are called, even if the\n      // observes throw errors.\n      // This file is full of hacky try {} finally {} blocks to ensure that an\n      // event can throw errors and also that the cleanup is called.\n      cleanupTransactions(transactionCleanups, 0);\n    }\n  }\n};\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions;\n    this.deletions = deletions;\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map();\n  }\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null;\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null;\n  const doc = undoManager.doc;\n  const scope = undoManager.scope;\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store;\n      const stackItem = /** @type {StackItem} */ (stack.pop());\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set();\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = [];\n      let performedChange = false;\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id);\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff));\n            }\n            struct = item;\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct);\n          }\n        }\n      });\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct);\n        }\n      });\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, itemsToDelete) !== null || performedChange;\n      });\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i];\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction);\n          performedChange = true;\n        }\n      }\n      result = performedChange ? stackItem : null;\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0;\n      }\n    });\n    _tr = transaction;\n  }, undoManager);\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes;\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager]);\n  }\n  return result\n};\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter whan an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'>}\n */\nclass UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, { captureTimeout = 500, deleteFilter = () => true, trackedOrigins = new Set([null]) } = {}) {\n    super();\n    this.scope = typeScope instanceof Array ? typeScope : [typeScope];\n    this.deleteFilter = deleteFilter;\n    trackedOrigins.add(this);\n    this.trackedOrigins = trackedOrigins;\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = [];\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = [];\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false;\n    this.redoing = false;\n    this.doc = /** @type {Doc} */ (this.scope[0].doc);\n    this.lastChange = 0;\n    this.doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      // Only track certain transactions\n      if (!this.scope.some(type => transaction.changedParentTypes.has(type)) || (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))) {\n        return\n      }\n      const undoing = this.undoing;\n      const redoing = this.redoing;\n      const stack = undoing ? this.redoStack : this.undoStack;\n      if (undoing) {\n        this.stopCapturing(); // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.redoStack = [];\n      }\n      const insertions = new DeleteSet();\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0;\n        const len = endClock - startClock;\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len);\n        }\n      });\n      const now = time.getUnixTime();\n      if (now - this.lastChange < captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1];\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet]);\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions]);\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions));\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now;\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true);\n        }\n      });\n      this.emit('stack-item-added', [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this]);\n    });\n  }\n\n  clear () {\n    this.doc.transact(transaction => {\n      /**\n       * @param {StackItem} stackItem\n       */\n      const clearItem = stackItem => {\n        iterateDeletedStructs(transaction, stackItem.deletions, item => {\n          if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n            keepItem(item, false);\n          }\n        });\n      };\n      this.undoStack.forEach(clearItem);\n      this.redoStack.forEach(clearItem);\n    });\n    this.undoStack = [];\n    this.redoStack = [];\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0;\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.undoStack, 'undo');\n    } finally {\n      this.undoing = false;\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.redoStack, 'redo');\n    } finally {\n      this.redoing = false;\n    }\n    return res\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder);\n        yield new Skip(createID(client, clock), len);\n        clock += len;\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        );\n        yield struct;\n        clock += struct.length;\n      } else {\n        const len = decoder.readLen();\n        yield new GC(createID(client, clock), len);\n        clock += len;\n      }\n    }\n  }\n}\n\nclass LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder);\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null;\n    this.done = false;\n    this.filterSkips = filterSkips;\n    this.next();\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null;\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nconst logUpdate = update => logUpdateV2(update, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = [];\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr);\n  }\n  logging.print('Structs: ', structs);\n  const ds = readDeleteSet(updateDecoder);\n  logging.print('DeleteSet: ', ds);\n};\n\nclass LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0;\n    this.startClock = 0;\n    this.written = 0;\n    this.encoder = encoder;\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = [];\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nconst mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let size = 0;\n    let currClient = curr.id.client;\n    let stopCounting = curr.id.clock !== 0; // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length;\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++;\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient);\n          encoding.writeVarUint(encoder.restEncoder, currClock);\n        }\n        currClient = curr.id.client;\n        currClock = 0;\n        stopCounting = curr.id.clock !== 0;\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true;\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length;\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++;\n      encoding.writeVarUint(encoder.restEncoder, currClient);\n      encoding.writeVarUint(encoder.restEncoder, currClock);\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder();\n    encoding.writeVarUint(enc, size);\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder);\n    encoder.restEncoder = enc;\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0);\n    return encoder.toUint8Array()\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map();\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let currClient = curr.id.client;\n    let currClock = curr.id.clock;\n    // write the beginning to `from`\n    from.set(currClient, currClock);\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock);\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock);\n        // update currClient\n        currClient = curr.id.client;\n      }\n      currClock = curr.id.clock + curr.length;\n    }\n    // write the end to `to`\n    to.set(currClient, currClock);\n  }\n  return { from, to }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1);\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id;\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id;\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left);\n    const { client, clock } = leftItem.id;\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n};\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nconst mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)));\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true));\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null;\n\n  const updateEncoder = new YEncoder();\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder);\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null);\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock;\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    );\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0];\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client;\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr);\n      let iterated = false;\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next();\n        iterated = true;\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n        currWrite = { struct: curr, offset: 0 };\n        currDecoder.next();\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock;\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length;\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff);\n            currWrite = { struct, offset: 0 };\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock;\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff;\n            } else {\n              curr = sliceStruct(curr, diff);\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            currWrite = { struct: curr, offset: 0 };\n            currDecoder.next();\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 };\n      currDecoder.next();\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n      currWrite = { struct: next, offset: 0 };\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n    currWrite = null;\n  }\n  finishLazyStructWriting(lazyStructEncoder);\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder));\n  const ds = mergeDeleteSets(dss);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nconst diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv);\n  const encoder = new YEncoder();\n  const lazyStructWriter = new LazyStructWriter(encoder);\n  const decoder = new YDecoder(decoding.createDecoder(update));\n  const reader = new LazyStructReader(decoder, false);\n  while (reader.curr) {\n    const curr = reader.curr;\n    const currClient = curr.id.client;\n    const svClock = state.get(currClient) || 0;\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next();\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0));\n      reader.next();\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0);\n        reader.next();\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next();\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter);\n  // write ds\n  const ds = readDeleteSet(decoder);\n  writeDeleteSet(encoder, ds);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nconst diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) });\n    lazyWriter.encoder.restEncoder = encoding.createEncoder();\n    lazyWriter.written = 0;\n  }\n};\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter);\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client;\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client);\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset);\n  }\n  struct.write(lazyWriter.encoder, offset);\n  lazyWriter.written++;\n};\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter);\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder;\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length);\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i];\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written);\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder);\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nconst convertUpdateFormat = (update, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  const updateEncoder = new YEncoder();\n  const lazyWriter = new LazyStructWriter(updateEncoder);\n\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, curr, 0);\n  }\n  finishLazyStructWriting(lazyWriter);\n  const ds = readDeleteSet(updateDecoder);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, UpdateDecoderV2, UpdateEncoderV1);\n\n/**\n * YEvent describes the changes on a YType.\n */\nclass YEvent {\n  /**\n   * @param {AbstractType<any>} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {AbstractType<any>}\n     */\n    this.target = target;\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target;\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction;\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null;\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null;\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null;\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    // @ts-ignore _item is defined because target is integrated\n    return getPathTo(this.currentTarget, this.target)\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      const keys = new Map();\n      const target = this.target;\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key));\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action;\n          let oldValue;\n          if (this.adds(item)) {\n            let prev = item.left;\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left;\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                action = 'add';\n                oldValue = undefined;\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete';\n              oldValue = array.last(/** @type {Item} */ item.content.getContent());\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue });\n        }\n      });\n      this._keys = keys;\n    }\n    return this._keys\n  }\n\n  /**\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes;\n    if (changes === null) {\n      const target = this.target;\n      const added = set.create();\n      const deleted = set.create();\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = [];\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      };\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null;\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp);\n          }\n        };\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp();\n                lastOp = { delete: 0 };\n              }\n              lastOp.delete += item.length;\n              deleted.add(item);\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp();\n                lastOp = { insert: [] };\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent());\n              added.add(item);\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp();\n                lastOp = { retain: 0 };\n              }\n              lastOp.retain += item.length;\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp();\n        }\n      }\n      this._changes = changes;\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = [];\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub);\n    } else {\n      // parent is array-ish\n      let i = 0;\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start;\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++;\n        }\n        c = c.right;\n      }\n      path.unshift(i);\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent);\n  }\n  return path\n};\n\nconst maxSearchMarker = 80;\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0;\n\nclass ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true;\n    this.p = p;\n    this.index = index;\n    this.timestamp = globalSearchMarkerTimestamp++;\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++; };\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false;\n  marker.p = p;\n  p.marker = true;\n  marker.index = index;\n  marker.timestamp = globalSearchMarkerTimestamp++;\n};\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b);\n    overwriteMarker(marker, p, index);\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index);\n    searchMarker.push(pm);\n    return pm\n  }\n};\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nconst findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b);\n  let p = yarray._start;\n  let pindex = 0;\n  if (marker !== null) {\n    p = marker.p;\n    pindex = marker.index;\n    refreshMarkerTimestamp(marker); // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length;\n    }\n    p = p.right;\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex);\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n};\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nconst updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i];\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p;\n      p.marker = false;\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left;\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length;\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1);\n        continue\n      }\n      m.p = p;\n      p.marker = true;\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len);\n    }\n  }\n};\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nconst getTypeChildren = t => {\n  let s = t._start;\n  const arr = [];\n  while (s) {\n    arr.push(s);\n    s = s.right;\n  }\n  return arr\n};\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nconst callTypeObservers = (type, transaction, event) => {\n  const changedType = type;\n  const changedParentTypes = transaction.changedParentTypes;\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event);\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent);\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction);\n};\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nclass AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null;\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map();\n    /**\n     * @type {Item|null}\n     */\n    this._start = null;\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null;\n    this._length = 0;\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler();\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent>,Transaction>}\n     */\n    this._dEH = createEventHandler();\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null;\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y;\n    this._item = item;\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0;\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start;\n  }\n  if (end < 0) {\n    end = type._length + end;\n  }\n  let len = end - start;\n  const cs = [];\n  let n = type._start;\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      if (c.length <= start) {\n        start -= c.length;\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i]);\n          len--;\n        }\n        start = 0;\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArray = type => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArraySnapshot = (type, snapshot) => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nconst typeListForEach = (type, f) => {\n  let index = 0;\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type);\n      }\n    }\n    n = n.right;\n  }\n};\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nconst typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = [];\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type));\n  });\n  return result\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nconst typeListCreateIterator = type => {\n  let n = type._start;\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null;\n  let currentContentIndex = 0;\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right;\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent();\n        currentContentIndex = 0;\n        n = n.right; // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++];\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null;\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nconst typeListGet = (type, index) => {\n  const marker = findMarker(type, index);\n  let n = type._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length;\n    }\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const store = doc.store;\n  const right = referenceItem === null ? parent._start : referenceItem.right;\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = [];\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent));\n      left.integrate(transaction, 0);\n      jsonContent = [];\n    }\n  };\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c);\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c);\n          break\n        default:\n          packJsonContent();\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))));\n              left.integrate(transaction, 0);\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)));\n              left.integrate(transaction, 0);\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c));\n                left.integrate(transaction, 0);\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  });\n  packJsonContent();\n};\n\nconst lengthExceeded = error.create('Length exceeded!');\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length);\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev; // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0;\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n        }\n        break\n      }\n      index -= n.length;\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length);\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nconst typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index;\n  const startLength = length;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n      }\n      index -= n.length;\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length));\n      }\n      n.delete(transaction);\n      length -= n.length;\n    }\n    n = n.right;\n  }\n  if (length > 0) {\n    throw lengthExceeded\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nconst typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key);\n  if (c !== undefined) {\n    c.delete(transaction);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nconst typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  let content;\n  if (value == null) {\n    content = new ContentAny([value]);\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value]);\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value));\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value));\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value);\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0);\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGet = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nconst typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {};\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1];\n    }\n  });\n  return res\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst typeMapHas = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null;\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left;\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n};\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nconst createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted);\n\n/**\n * @module YArray\n */\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n */\nclass YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction);\n    this._transaction = transaction;\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nclass YArray extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = [];\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = [];\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    const a = new YArray();\n    a.push(items);\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    const arr = new YArray();\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? el.clone() : el\n    ));\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction));\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content);\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length);\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function on once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f);\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nconst readYArray = decoder => new YArray();\n\n/**\n * @template T\n * Event that describes the changes on a YMap.\n */\nclass YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction);\n    this.keysChanged = subs;\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<MapType>}\n */\nclass YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super();\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null;\n\n    if (entries === undefined) {\n      this._prelimContent = new Map();\n    } else {\n      this._prelimContent = new Map(entries);\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value);\n    });\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    const map = new YMap();\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? value.clone() : value);\n    });\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs));\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {};\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1];\n        map[key] = v instanceof AbstractType ? v.toJSON() : v;\n      }\n    });\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<any>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {};\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this);\n      }\n    });\n    return map\n  }\n\n  /**\n   * @return {IterableIterator<MapType>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key);\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {MapType} value The value of the element to add\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, value);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value);\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (value, key, map) {\n          typeMapDelete(transaction, map, key);\n        });\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear();\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nconst readYMap = decoder => new YMap();\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b));\n\nclass ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left;\n    this.right = right;\n    this.index = index;\n    this.currentAttributes = currentAttributes;\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase();\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content));\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length;\n        }\n        break\n    }\n    this.left = this.right;\n    this.right = this.right.right;\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content));\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count));\n          }\n          pos.index += pos.right.length;\n          count -= pos.right.length;\n        }\n        break\n    }\n    pos.left = pos.right;\n    pos.right = pos.right.right;\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map();\n  const marker = findMarker(parent, index);\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes);\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes);\n    return findNextPosition(transaction, pos, index)\n  }\n};\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key);\n    }\n    currPos.forward();\n  }\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left;\n    const right = currPos.right;\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n    nextFormat.integrate(transaction, 0);\n    currPos.right = nextFormat;\n    currPos.forward();\n  });\n};\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format;\n  if (value === null) {\n    currentAttributes.delete(key);\n  } else {\n    currentAttributes.set(key, value);\n  }\n};\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) ; else {\n      break\n    }\n    currPos.forward();\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const negatedAttributes = new Map();\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key];\n    const currentVal = currPos.currentAttributes.get(key) || null;\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal);\n      const { left, right } = currPos;\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n      currPos.right.integrate(transaction, 0);\n      currPos.forward();\n    }\n  }\n  return negatedAttributes\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null;\n    }\n  });\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text));\n  let { left, right, index } = currPos;\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength());\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content);\n  right.integrate(transaction, 0);\n  currPos.right = right;\n  currPos.index = index;\n  currPos.forward();\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  while (length > 0 && currPos.right !== null) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content);\n          const attr = attributes[key];\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key);\n            } else {\n              negatedAttributes.set(key, value);\n            }\n            currPos.right.delete(transaction);\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          break\n      }\n    }\n    currPos.forward();\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = '';\n    for (; length > 0; length--) {\n      newlines += '\\n';\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines));\n    currPos.right.integrate(transaction, 0);\n    currPos.forward();\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} end exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} endAttributes This attribute is modified!\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, end, startAttributes, endAttributes) => {\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      updateCurrentAttributes(endAttributes, /** @type {ContentFormat} */ (end.content));\n    }\n    end = end.right;\n  }\n  let cleanups = 0;\n  while (start !== end) {\n    if (!start.deleted) {\n      const content = start.content;\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content);\n          if ((endAttributes.get(key) || null) !== value || (startAttributes.get(key) || null) === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction);\n            cleanups++;\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right);\n  }\n  return cleanups\n};\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right;\n  }\n  const attrs = new Set();\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key;\n      if (attrs.has(key)) {\n        item.delete(transaction);\n      } else {\n        attrs.add(key);\n      }\n    }\n    item = item.left;\n  }\n};\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nconst cleanupYTextFormatting = type => {\n  let res = 0;\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start);\n    let end = type._start;\n    let startAttributes = map.create();\n    const currentAttributes = map.copy(startAttributes);\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content));\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes);\n            startAttributes = map.copy(currentAttributes);\n            start = end;\n            break\n        }\n      }\n      end = end.right;\n    }\n  });\n  return res\n};\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length;\n  const startAttrs = map.copy(currPos.currentAttributes);\n  const start = currPos.right;\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          currPos.right.delete(transaction);\n          break\n      }\n    }\n    currPos.forward();\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, map.copy(currPos.currentAttributes));\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent);\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length);\n  }\n  return currPos\n};\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * Event that describes the changes on a YText type.\n */\nclass YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.keysChanged.add(sub);\n      }\n    });\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      };\n      this._changes = changes;\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc);\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = [];\n      transact(y, transaction => {\n        const currentAttributes = new Map(); // saves all current attributes for insert\n        const oldAttributes = new Map();\n        let item = this.target._start;\n        /**\n         * @type {string?}\n         */\n        let action = null;\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}; // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = '';\n        let retain = 0;\n        let deleteLen = 0;\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op;\n            switch (action) {\n              case 'delete':\n                op = { delete: deleteLen };\n                deleteLen = 0;\n                break\n              case 'insert':\n                op = { insert };\n                if (currentAttributes.size > 0) {\n                  op.attributes = {};\n                  currentAttributes.forEach((value, key) => {\n                    if (value !== null) {\n                      op.attributes[key] = value;\n                    }\n                  });\n                }\n                insert = '';\n                break\n              case 'retain':\n                op = { retain };\n                if (Object.keys(attributes).length > 0) {\n                  op.attributes = {};\n                  for (const key in attributes) {\n                    op.attributes[key] = attributes[key];\n                  }\n                }\n                retain = 0;\n                break\n            }\n            delta.push(op);\n            action = null;\n          }\n        };\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp();\n                  action = 'insert';\n                  insert = item.content.getContent()[0];\n                  addOp();\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += 1;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += 1;\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp();\n                    action = 'insert';\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str;\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += item.length;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += item.length;\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content);\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null;\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key];\n                    } else {\n                      attributes[key] = value;\n                    }\n                  } else {\n                    item.delete(transaction);\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value);\n                const curVal = currentAttributes.get(key) || null;\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp();\n                  }\n                  attributes[key] = curVal;\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value);\n                const attr = attributes[key];\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (value === null) {\n                      attributes[key] = value;\n                    } else {\n                      delete attributes[key];\n                    }\n                  } else {\n                    item.delete(transaction);\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp();\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content));\n              }\n              break\n            }\n          }\n          item = item.right;\n        }\n        addOp();\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1];\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop();\n          } else {\n            break\n          }\n        }\n      });\n      this._delta = delta;\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nclass YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super();\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : [];\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = [];\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f());\n    } catch (e) {\n      console.error(e);\n    }\n    this._pending = null;\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    const event = new YTextEvent(this, transaction, parentSubs);\n    const doc = transaction.doc;\n    callTypeObservers(this, transaction, event);\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local) {\n      // check if another formatting item was inserted\n      let foundFormattingItem = false;\n      for (const [client, afterClock] of transaction.afterState.entries()) {\n        const clock = transaction.beforeState.get(client) || 0;\n        if (afterClock === clock) {\n          continue\n        }\n        iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n          if (!item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat) {\n            foundFormattingItem = true;\n          }\n        });\n        if (foundFormattingItem) {\n          break\n        }\n      }\n      if (!foundFormattingItem) {\n        iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n          if (item instanceof GC || foundFormattingItem) {\n            return\n          }\n          if (item.parent === this && item.content.constructor === ContentFormat) {\n            foundFormattingItem = true;\n          }\n        });\n      }\n      transact(doc, (t) => {\n        if (foundFormattingItem) {\n          // If a formatting item was inserted, we simply clean the whole type.\n          // We need to compute currentAttributes for the current position anyway.\n          cleanupYTextFormatting(this);\n        } else {\n          // If no formatting attribute was inserted, we can make due with contextless\n          // formatting cleanups.\n          // Contextless: it is not necessary to compute currentAttributes for the affected position.\n          iterateDeletedStructs(t, t.deleteSet, item => {\n            if (item instanceof GC) {\n              return\n            }\n            if (item.parent === this) {\n              cleanupContextlessFormattingGap(t, item);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = '';\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start;\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str;\n      }\n      n = n.right;\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  [opts]\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map());\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i];\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert;\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {});\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {});\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete);\n          }\n        }\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta));\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = [];\n    const currentAttributes = new Map();\n    const doc = /** @type {Doc} */ (this.doc);\n    let str = '';\n    let n = this._start;\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {};\n        let addAttributes = false;\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true;\n          attributes[key] = value;\n        });\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str };\n        if (addAttributes) {\n          op.attributes = attributes;\n        }\n        ops.push(op);\n        str = '';\n      }\n    }\n    // snapshots are merged again after the transaction, so we need to keep the\n    // transalive until we are done\n    transact(doc, transaction => {\n      if (snapshot) {\n        splitSnapshotAffectedStructs(transaction, snapshot);\n      }\n      if (prevSnapshot) {\n        splitSnapshotAffectedStructs(transaction, prevSnapshot);\n      }\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange');\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'removed') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' });\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'added') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' });\n                }\n              } else if (cur !== undefined) {\n                packStr();\n                currentAttributes.delete('ychange');\n              }\n              str += /** @type {ContentString} */ (n.content).str;\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr();\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              };\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({});\n                op.attributes = attrs;\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value;\n                });\n              }\n              ops.push(op);\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr();\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content));\n              }\n              break\n          }\n        }\n        n = n.right;\n      }\n      packStr();\n    }, splitSnapshotAffectedStructs);\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (!attributes) {\n          attributes = {};\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v; });\n        }\n        insertText(transaction, this, pos, text, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes));\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        insertText(transaction, this, pos, embed, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes));\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length));\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes));\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName));\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue));\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nconst readYText = decoder => new YText();\n\n/**\n * @module YXml\n */\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nclass YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f;\n    this._root = root;\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start);\n    this._firstCall = true;\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode;\n    let type = n && n.content && /** @type {any} */ (n.content).type;\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type;\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start;\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right;\n              break\n            } else if (n.parent === this._root) {\n              n = null;\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item;\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false;\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n;\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nclass YXmlFragment extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = [];\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first;\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment();\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query);\n    const next = iterator.next();\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    return Array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction));\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment();\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this);\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null);\n    });\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref;\n        typeListInsertGenericsAfter(transaction, this, refItem, content);\n      });\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent);\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1;\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length);\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content);\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nconst readYXmlFragment = decoder => new YXmlFragment();\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n */\nclass YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super();\n    this.nodeName = nodeName;\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map();\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value);\n    });\n    this._prelimAttrs = null;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement}\n   */\n  clone () {\n    const el = new YXmlElement(this.nodeName);\n    const attrs = this.getAttributes();\n    for (const key in attrs) {\n      el.setAttribute(key, attrs[key]);\n    }\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes();\n    const stringBuilder = [];\n    const keys = [];\n    for (const key in attrs) {\n      keys.push(key);\n    }\n    keys.sort();\n    const keysLen = keys.length;\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i];\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"');\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase();\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : '';\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName);\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {String} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue);\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {String} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {String} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName);\n    const attrs = this.getAttributes();\n    for (const key in attrs) {\n      dom.setAttribute(key, attrs[key]);\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding));\n    });\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID);\n    encoder.writeKey(this.nodeName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nconst readYXmlElement = decoder => new YXmlElement(decoder.readKey());\n\n/**\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nclass YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.attributesChanged.add(sub);\n      }\n    });\n  }\n}\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nclass YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super();\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName);\n    this.forEach((value, key) => {\n      el.set(key, value);\n    });\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName];\n    let dom;\n    if (hook !== undefined) {\n      dom = hook.createDom(this);\n    } else {\n      dom = document.createElement(this.hookName);\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName);\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID);\n    encoder.writeKey(this.hookName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nconst readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey());\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nclass YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString());\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = [];\n      for (const nodeName in delta.attributes) {\n        const attrs = [];\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] });\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1);\n        nestedNodes.push({ nodeName, attrs });\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1);\n      // now convert to dom string\n      let str = '';\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i];\n        str += `<${node.nodeName}`;\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j];\n          str += ` ${attr.key}=\"${attr.value}\"`;\n        }\n        str += '>';\n      }\n      str += delta.insert;\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`;\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nconst readYXmlText = decoder => new YXmlText();\n\nclass AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id;\n    this.length = length;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n\nconst structGCRefNumber = 0;\n\n/**\n * @private\n */\nclass GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.length -= offset;\n    }\n    addStruct(transaction.doc.store, this);\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber);\n    encoder.writeLen(this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\nclass ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nconst readContentBinary = decoder => new ContentBinary(decoder.readBuf());\n\nclass ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset);\n    this.len = offset;\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len);\n    item.markDeleted();\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nconst readContentDeleted = decoder => new ContentDeleted(decoder.readLen());\n\n/**\n * @private\n */\nclass ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.');\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * @type {any}\n     */\n    const opts = {};\n    this.opts = opts;\n    if (!doc.gc) {\n      opts.gc = false;\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true;\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta;\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(this.doc)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item;\n    transaction.subdocsAdded.add(this.doc);\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc);\n    } else {\n      transaction.subdocsRemoved.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid);\n    encoder.writeAny(this.opts);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nconst readContentDoc = decoder => new ContentDoc(new Doc({ guid: decoder.readString(), ...decoder.readAny() }));\n\n/**\n * @private\n */\nclass ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nconst readContentEmbed = decoder => new ContentEmbed(decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentFormat}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    /** @type {AbstractType<any>} */ (item.parent)._searchMarker = null;\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key);\n    encoder.writeJSON(this.value);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nconst readContentFormat = decoder => new ContentFormat(decoder.readString(), decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c));\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nconst readContentJSON = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString();\n    if (c === 'undefined') {\n      cs.push(undefined);\n    } else {\n      cs.push(JSON.parse(c));\n    }\n  }\n  return new ContentJSON(cs)\n};\n\nclass ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeAny(c);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nconst readContentAny = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny());\n  }\n  return new ContentAny(cs)\n};\n\n/**\n * @private\n */\nclass ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset));\n    this.str = this.str.slice(0, offset);\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1);\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�';\n      // replace right as well\n      right.str = '�' + right.str.slice(1);\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset));\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nconst readContentString = decoder => new ContentString(decoder.readString());\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nconst typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n];\n\nconst YArrayRefID = 0;\nconst YMapRefID = 1;\nconst YTextRefID = 2;\nconst YXmlElementRefID = 3;\nconst YXmlFragmentRefID = 4;\nconst YXmlHookRefID = 5;\nconst YXmlTextRefID = 6;\n\n/**\n * @private\n */\nclass ContentType {\n  /**\n   * @param {AbstractType<YEvent>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start;\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else {\n        // Whis will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item);\n      }\n      item = item.right;\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else {\n        // same as above\n        transaction._mergeStructs.push(item);\n      }\n    });\n    transaction.changed.delete(this.type);\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start;\n    while (item !== null) {\n      item.gc(store, true);\n      item = item.right;\n    }\n    this.type._start = null;\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true);\n        item = item.left;\n      }\n    });\n    this.type._map = new Map();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nconst readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder));\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nconst followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id;\n  let diff = 0;\n  let item;\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff);\n    }\n    item = getItem(store, nextID);\n    diff = nextID.clock - item.id.clock;\n    nextID = item.redone;\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n};\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nconst keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep;\n    item = /** @type {AbstractType<any>} */ (item.parent)._item;\n  }\n};\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nconst splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id;\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  );\n  if (leftItem.deleted) {\n    rightItem.markDeleted();\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true;\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff);\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem;\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem;\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem);\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem);\n  }\n  leftItem.length = diff;\n  return rightItem\n};\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {Array<Item>} itemsToDelete\n *\n * @return {Item|null}\n *\n * @private\n */\nconst redoItem = (transaction, item, redoitems, itemsToDelete) => {\n  const doc = transaction.doc;\n  const store = doc.store;\n  const ownClientID = doc.clientID;\n  const redone = item.redone;\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item;\n  /**\n   * @type {Item|null}\n   */\n  let left;\n  /**\n   * @type {Item|null}\n   */\n  let right;\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left;\n    right = item;\n  } else {\n    // Is a map item. Insert as current value\n    left = item;\n    while (left.right !== null) {\n      left = left.right;\n      if (left.id.client !== ownClientID) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    }\n    if (left.right !== null) {\n      left = /** @type {Item} */ (/** @type {AbstractType<any>} */ (item.parent)._map.get(item.parentSub));\n    }\n    right = null;\n  }\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true && parentItem.redone === null) {\n    // try to undo parent if it will be undone anyway\n    if (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete) === null) {\n      return null\n    }\n  }\n  if (parentItem !== null && parentItem.redone !== null) {\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone);\n    }\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left;\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone);\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace;\n        break\n      }\n      left = left.left;\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right;\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone);\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace;\n        break\n      }\n      right = right.right;\n    }\n    // Iterate right while right is in itemsToDelete\n    // If it is intended to delete right while item is redone, we can expect that item should replace right.\n    while (left !== null && left.right !== null && left.right !== right && itemsToDelete.findIndex(d => d === /** @type {Item} */ (left).right) >= 0) {\n      left = left.right;\n    }\n  }\n  const nextClock = getState(store, ownClientID);\n  const nextId = createID(ownClientID, nextClock);\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentItem === null ? item.parent : /** @type {ContentType} */ (parentItem.content).type,\n    item.parentSub,\n    item.content.copy()\n  );\n  item.redone = nextId;\n  keepItem(redoneItem, true);\n  redoneItem.integrate(transaction, 0);\n  return redoneItem\n};\n\n/**\n * Abstract class that represents any content.\n */\nclass Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength());\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin;\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left;\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right;\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin;\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent;\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub;\n    /**\n     * If this type's effect is reundone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null;\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content;\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0;\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4;\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1;\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3;\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3;\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin);\n      this.origin = this.left.lastId;\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin);\n      this.rightOrigin = this.right.id;\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null;\n    }\n    // only set parent if this shouldn't be garbage collected\n    if (!this.parent) {\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent;\n        this.parentSub = this.left.parentSub;\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent;\n        this.parentSub = this.right.parentSub;\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent);\n      if (parentItem.constructor === GC) {\n        this.parent = null;\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type;\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1));\n      this.origin = this.left.lastId;\n      this.content = this.content.splice(offset);\n      this.length -= offset;\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left;\n\n        /**\n         * @type {Item|null}\n         */\n        let o;\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right;\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (o !== null && o.left !== null) {\n            o = o.left;\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start;\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set();\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set();\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o);\n          conflictingItems.add(o);\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o;\n              conflictingItems.clear();\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o;\n              conflictingItems.clear();\n            }\n          } else {\n            break\n          }\n          o = o.right;\n        }\n        this.left = left;\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right;\n        this.right = right;\n        this.left.right = this;\n      } else {\n        let r;\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (r !== null && r.left !== null) {\n            r = r.left;\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this;\n        }\n        this.right = r;\n      }\n      if (this.right !== null) {\n        this.right.left = this;\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this);\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction);\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length;\n      }\n      addStruct(transaction.doc.store, this);\n      this.content.integrate(transaction, this);\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub);\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction);\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0);\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left;\n    while (n !== null && n.deleted) {\n      n = n.left;\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker;\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this;\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length;\n            }\n          }\n        });\n      }\n      if (right.keep) {\n        this.keep = true;\n      }\n      this.right = right.right;\n      if (this.right !== null) {\n        this.right.left = this;\n      }\n      this.length += right.length;\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length;\n      }\n      this.markDeleted();\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length);\n      addChangedTypeToTransaction(transaction, parent, this.parentSub);\n      this.content.delete(transaction);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store);\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length));\n    } else {\n      this.content = new ContentDeleted(this.length);\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin;\n    const rightOrigin = this.rightOrigin;\n    const parentSub = this.parentSub;\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6); // parentSub is non-null\n    encoder.writeInfo(info);\n    if (origin !== null) {\n      encoder.writeLeftID(origin);\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin);\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      if (parent._item !== undefined) {\n        const parentItem = parent._item;\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent);\n          encoder.writeParentInfo(true); // write parentYKey\n          encoder.writeString(ykey);\n        } else {\n          encoder.writeParentInfo(false); // write parent id\n          encoder.writeLeftID(parentItem.id);\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true); // write parentYKey\n        encoder.writeString(parent);\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false); // write parent id\n        encoder.writeLeftID(parent);\n      } else {\n        error.unexpectedCase();\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub);\n      }\n    }\n    this.content.write(encoder, offset);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nconst readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder);\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nconst contentRefs = [\n  () => { error.unexpectedCase(); }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase(); } // 10 - Skip is not ItemContent\n];\n\nconst structSkipRefNumber = 10;\n\n/**\n * @private\n */\nclass Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber);\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\n/** eslint-env browser */\n\nconst glo = /** @type {any} */ (typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined' ? global : {});\nconst importIdentifier = '__ $YJS$ __';\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this warning message. Please take this seriously.\n   *\n   * If you see this message, please make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   */\n  console.warn('Yjs was already imported. Importing different versions of Yjs often leads to issues.');\n}\nglo[importIdentifier] = true;\n\nexport { AbstractConnector, AbstractStruct, AbstractType, YArray as Array, ContentAny, ContentBinary, ContentDeleted, ContentEmbed, ContentFormat, ContentJSON, ContentString, ContentType, Doc, GC, ID, Item, YMap as Map, PermanentUserData, RelativePosition, Snapshot, YText as Text, Transaction, UndoManager, YXmlElement as XmlElement, YXmlFragment as XmlFragment, YXmlHook as XmlHook, YXmlText as XmlText, YArrayEvent, YEvent, YMapEvent, YTextEvent, YXmlEvent, applyUpdate, applyUpdateV2, compareIDs, compareRelativePositions, createAbsolutePositionFromRelativePosition, createDeleteSet, createDeleteSetFromStructStore, createDocFromSnapshot, createID, createRelativePositionFromJSON, createRelativePositionFromTypeIndex, createSnapshot, decodeRelativePosition, decodeSnapshot, decodeSnapshotV2, decodeStateVector, diffUpdate, diffUpdateV2, emptySnapshot, encodeRelativePosition, encodeSnapshot, encodeSnapshotV2, encodeStateAsUpdate, encodeStateAsUpdateV2, encodeStateVector, encodeStateVectorFromUpdate, encodeStateVectorFromUpdateV2, equalSnapshots, findIndexSS, findRootTypeKey, getItem, getState, getTypeChildren, isDeleted, isParentOf, iterateDeletedStructs, logType, logUpdate, logUpdateV2, mergeUpdates, mergeUpdatesV2, parseUpdateMeta, parseUpdateMetaV2, readUpdate, readUpdateV2, relativePositionToJSON, snapshot, transact, tryGc, typeListToArraySnapshot, typeMapGetSnapshot };\n//# sourceMappingURL=yjs.mjs.map\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","/**\n * @since 2021-10-27\n * @author vivaxy\n */\nimport * as Y from 'yjs';\nimport { Fragment } from 'prosemirror-model';\n\nconst errors = {\n  unexpected(message = 'case') {\n    return new Error('Unexpected ' + message);\n  },\n};\n\nconst INSERTED = -1;\n\nexport function insert(xmlFragment, schema, absPos, slice) {\n  const yNodes = p2yFragment(slice.content);\n  const length = insertXmlFragment(xmlFragment, schema, absPos, yNodes);\n  if (length !== INSERTED) {\n    throw new Error('Insert failed');\n  }\n}\n\nfunction insertXmlFragment(xmlFragment, schema, absPos, yNodes) {\n  if (absPos === 0) {\n    xmlFragment.insert(0, yNodes);\n    return INSERTED;\n  }\n  let pos = 0;\n  let offset = 0;\n  let item = xmlFragment._start;\n  while (item) {\n    if (absPos === pos) {\n      xmlFragment.insert(offset, yNodes);\n      return INSERTED;\n    }\n    if (!item.deleted) {\n      if (item.content.type.constructor === Y.XmlText) {\n        const length = insertXmlText(\n          item.content.type,\n          schema,\n          absPos - pos,\n          yNodes,\n        );\n        if (length === INSERTED) {\n          return INSERTED;\n        }\n        pos += length;\n        offset += 1;\n      } else if (item.content.type.constructor === Y.XmlElement) {\n        if (schema.nodes[item.content.type.nodeName].isLeaf) {\n          pos += 1;\n          offset += 1;\n        } else {\n          pos += 1;\n          const length = insertXmlElement(\n            item.content.type,\n            schema,\n            absPos - pos,\n            yNodes,\n          );\n          if (length === INSERTED) {\n            return INSERTED;\n          }\n          pos += length;\n          pos += 1;\n          offset += 1;\n        }\n      } else {\n        throw new Error('Unexpected case');\n      }\n      item = item.right;\n    }\n  }\n  return pos;\n}\n\nfunction insertXmlElement(xmlElement, schema, absPos, yNodes) {\n  return insertXmlFragment(xmlElement, schema, absPos, yNodes);\n}\n\nfunction insertXmlText(xmlText, schema, absPos, yNodes) {\n  if (absPos < xmlText.length) {\n    xmlText.insert(\n      absPos,\n      yNodes\n        .map(function (yNode) {\n          return getTextFromYXmlText(yNode);\n        })\n        .join(''),\n    );\n    return INSERTED;\n  }\n  return xmlText.length;\n}\n\nfunction getTextFromYXmlText(yXmlText) {\n  let text = '';\n  // hack to get text from YXmlText\n  yXmlText.doc = new Y.Doc();\n  yXmlText._pending.forEach(function (fn) {\n    fn();\n  });\n  let item = yXmlText._start;\n  while (item) {\n    if (!item.deleted && item.content.constructor === Y.ContentString) {\n      text += item.content.str;\n    }\n    item = item.right;\n  }\n  return text;\n}\n\nfunction getInsertPosition(type, pos) {\n  // TODO:\n  return { parent: null, offset: 0 };\n}\n\nfunction getNodeSize(type, schema) {\n  if (type.constructor === Y.XmlText) {\n    return type.length;\n  }\n  if (type.constructor === Y.XmlElement) {\n    if (schema.nodes[type.nodeName].isLeaf) {\n      return 1;\n    }\n    return 2 + getNodeSizeFromXmlFragment(type, schema);\n  }\n  if (type.constructor === Y.XmlFragment) {\n    return getNodeSizeFromXmlFragment(type, schema);\n  }\n}\n\nfunction getNodeSizeFromXmlFragment(xmlFragment, schema) {\n  let childNodeSize = 0;\n  let item = xmlFragment._start;\n  while (item) {\n    if (!item.deleted) {\n      childNodeSize += getNodeSize(item.content.type, schema);\n    }\n    item = item.right;\n  }\n  return childNodeSize;\n}\n\nconst removeHandlers = {\n  [Y.ContentType](item, schema, absPos, length) {\n    let removedLength = 0;\n    let totalLength = 0;\n\n    if (length <= 0) {\n      return { removedLength, totalLength };\n    }\n\n    const { type } = item.content;\n\n    switch (type.constructor) {\n      case Y.XmlElement:\n        const { nodeName } = type;\n        const nodeType = schema.nodes[nodeName];\n        if (nodeType.isBlock && nodeType.isLeaf) {\n          totalLength = 1;\n          removedLength +=\n            Math.max(0, totalLength - absPos) +\n            Math.max(0, absPos + length - totalLength);\n          if (removedLength) {\n            debugger;\n          }\n        } else if (nodeType.isBlock && !nodeType.isLeaf) {\n          totalLength += 1;\n          absPos -= 1;\n          const { removedLength: rl, totalLength: tl } = removeFromTypeArray(\n            type,\n            schema,\n            absPos,\n            length,\n          );\n          removedLength += rl;\n          totalLength += tl;\n          totalLength += 1;\n          absPos -= 1;\n        } else {\n          throw errors.unexpected();\n        }\n        break;\n      case Y.XmlText:\n        const oLength = type._length;\n        totalLength += oLength;\n        type.delete(absPos, length);\n        removedLength += type._length - oLength;\n        break;\n      default:\n        throw errors.unexpected();\n    }\n    return { removedLength, totalLength };\n  },\n  [Y.ContentString](item, schema, absPos, length) {\n    const totalLength = item.content.str.length;\n    const removedLength =\n      Math.max(0, totalLength - absPos) +\n      Math.max(0, absPos + length - totalLength);\n    if (removedLength) {\n      item.content.remove(absPos, length);\n    }\n    return { removedLength, totalLength };\n  },\n};\n\nfunction removeFromTypeArray(xmlFragment, schema, absPos, length) {\n  let totalLength = 0;\n  let removedLength = 0;\n  let item = xmlFragment._start;\n  while (item) {\n    const removeHandler = removeHandlers[item.content.constructor];\n    if (!removeHandler) {\n      throw errors.unexpected();\n    }\n    const { removedLength: rl, totalLength: tl } = removeHandler(\n      item,\n      schema,\n      absPos,\n      length,\n    );\n    absPos -= tl;\n    length -= rl;\n    totalLength += tl;\n    removedLength += rl;\n    item = item.right;\n  }\n  return { removedLength, totalLength };\n}\n\nexport function remove(xmlFragment, schema, absPos, length) {\n  removeFromTypeArray(xmlFragment, schema, absPos, length);\n}\n\nexport function p2y(pDoc, type) {\n  console.assert(pDoc.type.name === 'doc');\n  Y.transact(\n    type.doc,\n    function () {\n      p2yInsertIntoFragment(pDoc.content, type);\n    },\n    'local',\n  );\n}\n\nfunction p2yInsertIntoFragment(fragment, yFragment) {\n  const yNodes = p2yFragment(fragment);\n  yFragment.insert(0, yNodes);\n}\n\nfunction p2yFragment(fragment) {\n  return fragment.content.map(function (node) {\n    return p2yNode(node);\n  });\n}\n\nfunction p2yNode(node) {\n  if (node.type.name === 'text') {\n    return p2yText(node);\n  }\n  const yElement = new Y.XmlElement(node.type.name);\n  Object.keys(node.attrs).forEach(function (attrKey) {\n    yElement.setAttribute(attrKey, node.attrs[attrKey]);\n  });\n  if (!node.isLeaf) {\n    p2yInsertIntoFragment(node.content, yElement);\n  }\n  return yElement;\n}\n\nfunction p2yText(textNode) {\n  const yText = new Y.XmlText();\n  yText.insert(0, textNode.text);\n  textNode.marks.forEach(function (mark) {\n    yText.format(0, textNode.size, { [mark.type]: true });\n  });\n  return yText;\n}\n\nfunction forEachTypeArray(array, f) {\n  let item = array._start;\n  while (item) {\n    if (!item.deleted) {\n      f(item);\n    }\n    item = item.right;\n  }\n}\n\nfunction forEachTypeMap(map, f) {\n  for (const [key, value] of map._map) {\n    f(value, key);\n  }\n}\n\nfunction getMap(map) {\n  const result = {};\n  forEachTypeMap(map, function (value, key) {\n    let lastValue = null;\n    forEachTypeArray(value, function (item) {\n      if (item && !item.deleted) {\n        lastValue = item.value;\n      }\n    });\n    if (lastValue) {\n      result[key] = lastValue;\n    }\n  });\n  return result;\n}\n\nexport function y2p(xmlFragment, schema) {\n  const fragment = y2pFragment(xmlFragment, schema);\n  return schema.node('doc', null, fragment);\n}\n\nfunction y2pFragment(type, schema) {\n  let fragment = Fragment.empty;\n  forEachTypeArray(type, function (item) {\n    if (item.content.constructor === Y.ContentType) {\n      if (item.content.type.constructor === Y.XmlElement) {\n        const node = y2pElement(item.content.type, schema);\n        fragment = fragment.addToEnd(node);\n      } else if (item.content.type.constructor === Y.XmlText) {\n        const node = y2pText(item.content.type, schema);\n        fragment = fragment.addToEnd(node);\n      } else {\n        throw errors.unexpected();\n      }\n    }\n  });\n  return fragment;\n}\n\nfunction y2pElement(type, schema) {\n  const nodeName = type.nodeName;\n  const attrs = getMap(type);\n  const fragment = y2pFragment(type, schema);\n  return schema.node(nodeName, attrs, fragment);\n}\n\nfunction y2pText(type, schema) {\n  let text = '';\n  forEachTypeArray(type, function (item) {\n    if (item.content.constructor === Y.ContentString) {\n      text += item.content.str;\n    }\n  });\n  return schema.text(text);\n}\n","/**\n * @since 2021-10-27\n * @author vivaxy\n */\nimport {\n  ReplaceStep,\n  AddMarkStep,\n  RemoveMarkStep,\n  ReplaceAroundStep,\n} from 'prosemirror-transform';\nimport { Slice } from 'prosemirror-model';\nimport { Plugin, PluginKey } from 'prosemirror-state';\nimport * as Y from 'yjs';\nimport { insert, remove, y2p } from './helpers';\n\nconst pluginKey = new PluginKey('yjs');\n\nexport default new Plugin({\n  key: pluginKey,\n  state: {\n    init: (config) => {\n      const { yjs } = config;\n      yjs.xmlFragment.doc.on('update', function (update, origin) {\n        if (origin === 'local') {\n          yjs.onLocalUpdate(update, yjs.id);\n        }\n      });\n      // doc.get returns new type\n      yjs.xmlFragment.observeDeep(function (events, transaction) {\n        console.log(\n          'observeDeep',\n          yjs.xmlFragment.doc.clientID,\n          transaction.origin,\n        );\n        if (transaction.origin === 'remote') {\n          const view = yjs.getView();\n          const pDoc = y2p(yjs.xmlFragment, view.state.schema);\n          view.dispatch(\n            view.state.tr\n              .setMeta(pluginKey, { origin: 'remote' })\n              .replace(\n                0,\n                view.state.doc.content.size,\n                new Slice(pDoc.content, 0, 0),\n              ),\n          );\n        }\n      });\n      return yjs;\n    },\n    apply: (tr, yState, oldEditorState, newEditorState) => {\n      if (!tr.docChanged) {\n        return yState;\n      }\n      const meta = tr.getMeta(pluginKey);\n      if (meta && meta.origin === 'remote') {\n        return yState;\n      }\n      Y.transact(\n        yState.xmlFragment.doc,\n        function () {\n          tr.steps.forEach(function (step) {\n            switch (true) {\n              case step instanceof ReplaceStep:\n                if (step.to > step.from) {\n                  remove(\n                    yState.xmlFragment,\n                    oldEditorState.schema,\n                    step.from,\n                    step.to - step.from,\n                  );\n                }\n                if (step.slice.content.size) {\n                  insert(yState.xmlFragment, oldEditorState.schema, step.from, step.slice);\n                }\n                break;\n              case step instanceof ReplaceAroundStep:\n                // TODO:\n                break;\n              default:\n                throw new Error('Unexpect step constructor' + step.constructor);\n            }\n          });\n        },\n        'local',\n      );\n      console.log(yState.xmlFragment.toJSON());\n      return yState;\n    },\n  },\n});\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* istanbul ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* istanbul ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* istanbul ignore next */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  utf8TextDecoder = null\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nexport const varStorage = _localStorage\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\n\n/* istanbul ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name)\n/* istanbul ignore next */\nexport const isBrowser = typeof window !== 'undefined' && !isNode\n/* istanbul ignore next */\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create()\n      // eslint-disable-next-line no-undef\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasParam = name => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\n\n/* istanbul ignore next */\nexport const production = hasConf('production')\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* istanbul ignore next */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* istanbul ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* istanbul ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as binary from './binary.js'\nimport * as math from './math.js'\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let len = 0\n  while (true) {\n    const r = decoder.arr[decoder.pos++]\n    num = num | ((r & binary.BITS7) << len)\n    len += 7\n    if (r < binary.BIT8) {\n      return num >>> 0 // return unsigned number!\n    }\n    /* istanbul ignore if */\n    if (len > 35) {\n      throw new Error('Integer out of range!')\n    }\n  }\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let len = 6\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  while (true) {\n    r = decoder.arr[decoder.pos++]\n    num = num | ((r & binary.BITS7) << len)\n    len += 7\n    if (r < binary.BIT8) {\n      return sign * (num >>> 0)\n    }\n    /* istanbul ignore if */\n    if (len > 41) {\n      throw new Error('Integer out of range!')\n    }\n  }\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\nexport const readVarString = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = diff >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* istanbul ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* istanbul ignore next */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* istanbul ignore next */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {Array<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n *\n * @param {Array<ITEM>} arr\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => arr.every(f)\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @param {Array<S>} arr\n * @param {function(S, number, Array<S>):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => arr.some(f)\n\n/**\n * @template ELEM\n *\n * @param {Array<ELEM>} a\n * @param {Array<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\n/**\n * @type {number}\n */\nexport const HIGHEST_INT32 = binary.BITS31\n\n/**\n * @module number\n */\n\n/* istanbul ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nconst verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer.\n *\n * Encodes integers in the range from [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num >>>= 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * Encodes integers in the range from [-2147483648, -2147483647].\n *\n * We don't use zig-zag encoding because we want to keep the option open\n * to use the same function for BigInt and 53bit integers (doubles).\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num >>>= 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num >>>= 7\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeVarString = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && data <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  /* istanbul ignore else */\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/* eslint-env browser */\nexport const performance = typeof window === 'undefined' ? null : (typeof window.performance !== 'undefined' && window.performance) || null\n\nconst isoCrypto = typeof crypto === 'undefined' ? null : crypto\n\n/**\n * @type {function(number):ArrayBuffer}\n */\nexport const cryptoRandomBuffer = isoCrypto !== null\n  ? len => {\n    // browser\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    isoCrypto.getRandomValues(arr)\n    return buf\n  }\n  : len => {\n    // polyfill\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    for (let i = 0; i < len; i++) {\n      arr[i] = Math.ceil((Math.random() * 0xFFFFFFFF) >>> 0)\n    }\n    return buf\n  }\n","\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport { cryptoRandomBuffer } from './isomorphic.js'\n\nexport const rand = Math.random\n\n/* istanbul ignore next */\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n","/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n","/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n","/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* istanbul ignore next */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const createTextNode = text => doc.createTextNode(text)\n\n/* istanbul ignore next */\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\n/* istanbul ignore next */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\n/* istanbul ignore next */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\n/* istanbul ignore next */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\n/* istanbul ignore next */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\n/* istanbul ignore next */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\n/* istanbul ignore next */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\n/* istanbul ignore next */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\n/* istanbul ignore next */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\n/* istanbul ignore next */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* istanbul ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as symbol from './symbol.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as time from './time.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [BOLD]: pair.create('font-weight', 'bold'),\n  [UNBOLD]: pair.create('font-weight', 'normal'),\n  [BLUE]: pair.create('color', 'blue'),\n  [GREEN]: pair.create('color', 'green'),\n  [GREY]: pair.create('color', 'grey'),\n  [RED]: pair.create('color', 'red'),\n  [PURPLE]: pair.create('color', 'purple'),\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [UNCOLOR]: pair.create('color', 'black')\n}\n\nconst _nodeStyleMap = {\n  [BOLD]: '\\u001b[1m',\n  [UNBOLD]: '\\u001b[2m',\n  [BLUE]: '\\x1b[34m',\n  [GREEN]: '\\x1b[32m',\n  [GREY]: '\\u001b[37m',\n  [RED]: '\\x1b[31m',\n  [PURPLE]: '\\x1b[35m',\n  [ORANGE]: '\\x1b[38;5;208m',\n  [UNCOLOR]: '\\x1b[0m'\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeBrowserLoggingArgs = args => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNodeLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _nodeStyleMap[arg]\n    if (style !== undefined) {\n      strBuilder.push(style)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg)\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    strBuilder.push('\\x1b[0m')\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    /* istanbul ignore else */\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/* istanbul ignore next */\nconst computeLoggingArgs = env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(ORANGE)\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Error} err\n */\nexport const printError = err => {\n  console.error(err)\n  vconsoles.forEach(vc => vc.printError(err))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`)\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach(vc => vc.printImg(url, height))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} base64\n * @param {number} height\n */\nexport const printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupEnd())\n}\n\n/* istanbul ignore next */\n/**\n * @param {function():Node} createNode\n */\nexport const printDom = createNode =>\n  vconsoles.forEach(vc => vc.printDom(createNode()))\n\n/* istanbul ignore next */\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\nexport const printCanvas = (canvas, height) => printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = new Set()\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\nconst _computeLineSpans = args => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [pair.create('style', dom.mapToStyleString(currentStyle))], [dom.text(arg)])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(dom.element('span', [], [dom.text(/** @type {string} */ (content))]))\n    }\n  }\n  return spans\n}\n\nconst lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* istanbul ignore next */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [pair.create('hidden', collapsed), pair.create('style', 'color:grey;font-size:120%;')], [dom.text('▼')])\n      const triangleRight = dom.element('span', [pair.create('hidden', !collapsed), pair.create('style', 'color:grey;font-size:125%;')], [dom.text('▶')])\n      const content = dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, dom.text(' ')].concat(_computeLineSpans(args)))\n      const nextContainer = dom.element('div', [pair.create('hidden', collapsed)])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', event => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([RED, BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('img', [pair.create('src', url), pair.create('height', `${math.round(height * 1.5)}px`)])])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @param {Element} dom\n */\nexport const createVConsole = dom => new VConsole(dom)\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = moduleName => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null && (debugRegexVar === '*' || debugRegexVar === 'true' || new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n\n  return !doLogging ? func.nop : (...args) => {\n    const timeNow = time.getUnixTime()\n    const timeDiff = timeNow - lastLoggingTime\n    lastLoggingTime = timeNow\n    print(color, moduleName, UNCOLOR, ...args.map(arg => (typeof arg === 'string' || typeof arg === 'symbol') ? arg : JSON.stringify(arg)), color, ' +' + timeDiff + 'ms')\n  }\n}\n","/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  /**\n   * @param {function(T):R} f\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","import { Observable } from 'lib0/observable';\nimport * as array from 'lib0/array';\nimport * as math from 'lib0/math';\nimport * as map from 'lib0/map';\nimport * as encoding from 'lib0/encoding';\nimport * as decoding from 'lib0/decoding';\nimport * as random from 'lib0/random';\nimport * as buffer from 'lib0/buffer';\nimport * as error from 'lib0/error';\nimport * as binary from 'lib0/binary';\nimport * as f from 'lib0/function';\nimport { callAll } from 'lib0/function';\nimport * as set from 'lib0/set';\nimport * as logging from 'lib0/logging';\nimport * as time from 'lib0/time';\nimport * as iterator from 'lib0/iterator';\nimport * as object from 'lib0/object';\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nclass AbstractConnector extends Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super();\n    this.doc = ydoc;\n    this.awareness = awareness;\n  }\n}\n\nclass DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock;\n    /**\n     * @type {number}\n     */\n    this.len = len;\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nclass DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map();\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid));\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i];\n      iterateStructs(transaction, structs, del.clock, del.len, f);\n    }\n  });\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nconst findIndexDS = (dis, clock) => {\n  let left = 0;\n  let right = dis.length - 1;\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2);\n    const mid = dis[midindex];\n    const midclock = mid.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n  }\n  return null\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client);\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n};\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock);\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j;\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1];\n      const right = dels[i];\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock);\n      } else {\n        if (j < i) {\n          dels[j] = right;\n        }\n        j++;\n      }\n    }\n    dels.length = j;\n  });\n};\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nconst mergeDeleteSets = dss => {\n  const merged = new DeleteSet();\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice();\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || []);\n        }\n        merged.clients.set(client, dels);\n      }\n    });\n  }\n  sortAndMergeDeleteSet(merged);\n  return merged\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nconst addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => []).push(new DeleteItem(clock, length));\n};\n\nconst createDeleteSet = () => new DeleteSet();\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nconst createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet();\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = [];\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i];\n      if (struct.deleted) {\n        const clock = struct.id.clock;\n        let len = struct.length;\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length;\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len));\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems);\n    }\n  });\n  return ds\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size);\n  ds.clients.forEach((dsitems, client) => {\n    encoder.resetDsCurVal();\n    encoding.writeVarUint(encoder.restEncoder, client);\n    const len = dsitems.length;\n    encoding.writeVarUint(encoder.restEncoder, len);\n    for (let i = 0; i < len; i++) {\n      const item = dsitems[i];\n      encoder.writeDsClock(item.clock);\n      encoder.writeDsLen(item.len);\n    }\n  });\n};\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nconst readDeleteSet = decoder => {\n  const ds = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => []);\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()));\n      }\n    }\n  }\n  return ds\n};\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nconst readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    const structs = store.clients.get(client) || [];\n    const state = getState(store, client);\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock();\n      const clockEnd = clock + decoder.readDsLen();\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state);\n        }\n        let index = findIndexSS(structs, clock);\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index];\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n          index++; // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++];\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock));\n              }\n              struct.delete(transaction);\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock);\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2();\n    encoding.writeVarUint(ds.restEncoder, 0); // encode 0 structs\n    writeDeleteSet(ds, unappliedDS);\n    return ds.toUint8Array()\n  }\n  return null\n};\n\n/**\n * @module Y\n */\n\nconst generateNewClientId = random.uint32;\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nclass Doc extends Observable {\n  /**\n   * @param {DocOpts} [opts] configuration\n   */\n  constructor ({ guid = random.uuidv4(), gc = true, gcFilter = () => true, meta = null, autoLoad = false } = {}) {\n    super();\n    this.gc = gc;\n    this.gcFilter = gcFilter;\n    this.clientID = generateNewClientId();\n    this.guid = guid;\n    /**\n     * @type {Map<string, AbstractType<YEvent>>}\n     */\n    this.share = new Map();\n    this.store = new StructStore();\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null;\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = [];\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set();\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null;\n    this.shouldLoad = autoLoad;\n    this.autoLoad = autoLoad;\n    this.meta = meta;\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item;\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this);\n      }, null, true);\n    }\n    this.shouldLoad = true;\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(Array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @param {function(Transaction):void} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    transact(this, f, origin);\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor();\n      t._integrate(this, null);\n      return t\n    });\n    const Constr = type.constructor;\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor();\n        t._map = type._map;\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t;\n          }\n        });\n        t._start = type._start;\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t;\n        }\n        t._length = type._length;\n        this.share.set(name, t);\n        t._integrate(this, null);\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YMap<any>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {};\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON();\n    });\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy());\n    const item = this._item;\n    if (item !== null) {\n      this._item = null;\n      const content = /** @type {ContentDoc} */ (item.content);\n      if (item.deleted) {\n        // @ts-ignore\n        content.doc = null;\n      } else {\n        content.doc = new Doc({ guid: this.guid, ...content.opts });\n        content.doc._item = item;\n      }\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(content.doc);\n        }\n        transaction.subdocsRemoved.add(this);\n      }, null, true);\n    }\n    this.emit('destroyed', [true]);\n    this.emit('destroy', [this]);\n    super.destroy();\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f);\n  }\n}\n\nclass DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nclass UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nclass DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0;\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder);\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1;\n    this.dsCurrVal += diff;\n    return diff\n  }\n}\n\nclass UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder);\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = [];\n    decoding.readVarUint(decoder); // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder));\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read();\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read();\n      this.keys.push(key);\n      return key\n    }\n  }\n}\n\nclass DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder();\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n}\n\nclass UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed));\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key);\n  }\n}\n\nclass DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder(); // encodes all the rest / non-optimized\n    this.dsCurrVal = 0;\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal;\n    this.dsCurrVal = clock;\n    encoding.writeVarUint(this.restEncoder, diff);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase();\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1);\n    this.dsCurrVal += len;\n  }\n}\n\nclass UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super();\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map();\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0;\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.clientEncoder = new encoding.UintOptRleEncoder();\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.stringEncoder = new encoding.StringEncoder();\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.typeRefEncoder = new encoding.UintOptRleEncoder();\n    this.lenEncoder = new encoding.UintOptRleEncoder();\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder();\n    encoding.writeVarUint(encoder, 0); // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder));\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder));\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array());\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder));\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client);\n    this.leftClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client);\n    this.rightClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed);\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key);\n    if (clock === undefined) {\n      this.keyClockEncoder.write(this.keyClock++);\n      this.stringEncoder.write(key);\n    } else {\n      this.keyClockEncoder.write(this.keyClock++);\n    }\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock); // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock);\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs);\n  encoder.writeClient(client);\n  encoding.writeVarUint(encoder.restEncoder, clock);\n  const firstStruct = structs[startNewStructs];\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock);\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0);\n  }\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nconst writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map();\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock);\n    }\n  });\n  getStateVector(store).forEach((clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0);\n    }\n  });\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size);\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  Array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    // @ts-ignore\n    writeStructs(encoder, store.clients.get(client), client, clock);\n  });\n};\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nconst readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create();\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs });\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen();\n          refs[i] = new GC(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder);\n          refs[i] = new Skip(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          );\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct;\n          clock += struct.length;\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n};\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = [];\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = Array.from(clientsStructRefs.keys()).sort((a, b) => a - b);\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop();\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  };\n  let curStructsTarget = getNextStructTarget();\n  if (curStructsTarget === null && stack.length === 0) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore();\n  const missingSV = new Map();\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client);\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock);\n    }\n  };\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++];\n  // caching the state because it is used very often\n  const state = new Map();\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client;\n      const unapplicableItems = clientsStructRefs.get(client);\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--;\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i));\n        clientsStructRefs.delete(client);\n        unapplicableItems.i = 0;\n        unapplicableItems.refs = [];\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item]);\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client);\n    }\n    stack.length = 0;\n  };\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client));\n      const offset = localClock - stackHead.id.clock;\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead);\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1);\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS();\n      } else {\n        const missing = stackHead.getMissing(transaction, store);\n        if (missing !== null) {\n          stack.push(stackHead);\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 };\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing));\n            addStackToRestSS();\n          } else {\n            stackHead = structRefs.refs[structRefs.i++];\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset);\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length);\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop());\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n    } else {\n      curStructsTarget = getNextStructTarget();\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2();\n    writeClientsStructs(encoder, restStructs, new Map());\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0); // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nconst writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nconst readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false;\n    let retry = false;\n    const doc = transaction.doc;\n    const store = doc.store;\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc);\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss);\n    const pending = store.pendingStructs;\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true;\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client);\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock);\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update]);\n      }\n    } else {\n      store.pendingStructs = restStructs;\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store);\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs));\n      decoding.readVarUint(pendingDSUpdate.restDecoder); // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store);\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2]);\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2;\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest;\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update;\n      store.pendingStructs = null;\n      applyUpdateV2(transaction.doc, update);\n    }\n  }, transactionOrigin, false);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder));\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nconst applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update);\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder));\n};\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1);\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nconst writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector);\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store));\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector);\n  writeStateAsUpdate(encoder, doc, targetStateVector);\n  const updates = [encoder.toUint8Array()];\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs);\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector));\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1());\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst readStateVector = decoder => {\n  const ss = new Map();\n  const ssLength = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const clock = decoding.readVarUint(decoder.restDecoder);\n    ss.set(client, clock);\n  }\n  return ss\n};\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)));\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nconst writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size);\n  sv.forEach((clock, client) => {\n    encoding.writeVarUint(encoder.restEncoder, client); // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock);\n  });\n  return encoder\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nconst writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store));\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc);\n  } else {\n    writeDocumentStateVector(encoder, doc);\n  }\n  return encoder.toUint8Array()\n};\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1());\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nclass EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = [];\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nconst createEventHandler = () => new EventHandler();\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nconst addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f);\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nconst removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l;\n  const len = l.length;\n  eventHandler.l = l.filter(g => f !== g);\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.');\n  }\n};\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nconst callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1]);\n\nclass ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client;\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock;\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock);\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nconst createID = (client, clock) => new ID(client, clock);\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nconst writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client);\n  encoding.writeVarUint(encoder, id.clock);\n};\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nconst readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder));\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nconst findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n};\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nconst isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item;\n  }\n  return false\n};\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nconst logType = type => {\n  const res = [];\n  let n = type._start;\n  while (n) {\n    res.push(n);\n    n = n.right;\n  }\n  console.log('Children: ', res);\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content));\n};\n\nclass PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map();\n    this.yusers = storeType;\n    this.doc = doc;\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map();\n    this.dss = dss;\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds');\n      const ids = user.get('ids');\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription);\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]));\n            }\n          });\n        });\n      });\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))));\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      );\n      ids.forEach(addClientId);\n    };\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      );\n    });\n    // add intial data\n    storeType.forEach(initUser);\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} [conf]\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers;\n    let user = users.get(userDescription);\n    if (!user) {\n      user = new YMap();\n      user.set('ids', new YArray());\n      user.set('ds', new YArray());\n      users.set(userDescription, user);\n    }\n    user.get('ids').push([clientid]);\n    users.observe(event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription);\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite;\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid]);\n            }\n          });\n          const encoder = new DSEncoderV1();\n          const ds = this.dss.get(userDescription);\n          if (ds) {\n            writeDeleteSet(encoder, ds);\n            user.get('ds').push([encoder.toUint8Array()]);\n          }\n        }\n      }, 0);\n    });\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds');\n        const ds = transaction.deleteSet;\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1();\n          writeDeleteSet(encoder, ds);\n          yds.push([encoder.toUint8Array()]);\n        }\n      });\n    });\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nclass RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type;\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname;\n    /**\n     * @type {ID | null}\n     */\n    this.item = item;\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nconst relativePositionToJSON = rpos => {\n  const json = {};\n  if (rpos.type) {\n    json.type = rpos.type;\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname;\n  }\n  if (rpos.item) {\n    json.item = rpos.item;\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc;\n  }\n  return json\n};\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc);\n\nclass AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n    /**\n     * @type {number}\n     */\n    this.index = index;\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nconst createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc);\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nconst createRelativePosition = (type, item, assoc) => {\n  let typeid = null;\n  let tname = null;\n  if (type._item === null) {\n    tname = findRootTypeKey(type);\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock);\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n};\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start;\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--;\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length;\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right;\n  }\n  return createRelativePosition(type, null, assoc)\n};\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nconst writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos;\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0);\n    writeID(encoder, item);\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1);\n    encoding.writeVarString(encoder, tname);\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2);\n    writeID(encoder, type);\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc);\n  return encoder\n};\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nconst encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder();\n  writeRelativePosition(encoder, rpos);\n  return encoding.toUint8Array(encoder)\n};\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nconst readRelativePosition = decoder => {\n  let type = null;\n  let tname = null;\n  let itemID = null;\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder);\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder);\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder);\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0;\n  return new RelativePosition(type, tname, itemID, assoc)\n};\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nconst decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array));\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nconst createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store;\n  const rightID = rpos.item;\n  const typeID = rpos.type;\n  const tname = rpos.tname;\n  const assoc = rpos.assoc;\n  let type = null;\n  let index = 0;\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID);\n    const right = res.item;\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent);\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)); // adjust position based on left association if necessary\n      let n = right.left;\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length;\n        }\n        n = n.left;\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname);\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID);\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type;\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length;\n    } else {\n      index = 0;\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n};\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n);\n\nclass Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds;\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv;\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nconst equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients;\n  const ds2 = snap2.ds.clients;\n  const sv1 = snap1.sv;\n  const sv2 = snap2.sv;\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || [];\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i];\n      const dsitem2 = dsitems2[i];\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nconst encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds);\n  writeStateVector(encoder, snapshot.sv);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nconst encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1());\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nconst decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n};\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nconst decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)));\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nconst createSnapshot = (ds, sm) => new Snapshot(ds, sm);\n\nconst emptySnapshot = createSnapshot(createDeleteSet(), new Map());\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nconst snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store));\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nconst isVisible = (item, snapshot) => snapshot === undefined ? !item.deleted : (\n  snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n);\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nconst splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create);\n  const store = transaction.doc.store;\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n    });\n    iterateDeletedStructs(transaction, snapshot.ds, item => {});\n    meta.add(snapshot);\n  }\n};\n\n/**\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nconst createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('originDoc must not be garbage collected')\n  }\n  const { sv, ds } = snapshot;\n\n  const encoder = new UpdateEncoderV2();\n  originDoc.transact(transaction => {\n    let size = 0;\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++;\n      }\n    });\n    encoding.writeVarUint(encoder.restEncoder, size);\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n      const structs = originDoc.store.clients.get(client) || [];\n      const lastStructIndex = findIndexSS(structs, clock - 1);\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1);\n      encoder.writeClient(client);\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0);\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0);\n      }\n    }\n    writeDeleteSet(encoder, ds);\n  });\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot');\n  return newDoc\n};\n\nclass StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map();\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null;\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null;\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nconst getStateVector = store => {\n  const sm = new Map();\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1];\n    sm.set(client, struct.id.clock + struct.length);\n  });\n  return sm\n};\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nconst getState = (store, client) => {\n  const structs = store.clients.get(client);\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1];\n  return lastStruct.id.clock + lastStruct.length\n};\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nconst addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client);\n  if (structs === undefined) {\n    structs = [];\n    store.clients.set(struct.id.client, structs);\n  } else {\n    const lastStruct = structs[structs.length - 1];\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct);\n};\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nconst findIndexSS = (structs, clock) => {\n  let left = 0;\n  let right = structs.length - 1;\n  let mid = structs[right];\n  let midclock = mid.id.clock;\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right); // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex];\n    midclock = mid.id.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n    midindex = math.floor((left + right) / 2);\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nconst find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  return structs[findIndexSS(structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nconst getItem = /** @type {function(StructStore,ID):Item} */ (find);\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nconst findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock);\n  const struct = structs[index];\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n    return index + 1\n  }\n  return index\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client));\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  const index = findIndexSS(structs, id.clock);\n  const struct = structs[index];\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1));\n  }\n  return struct\n};\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nconst replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client));\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct;\n};\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len;\n  let index = findIndexCleanStart(transaction, structs, clockStart);\n  let struct;\n  do {\n    struct = structs[index++];\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd);\n    }\n    f(struct);\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n};\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nclass Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet();\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store);\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map();\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent>,Set<String|null>>}\n     */\n    this.changed = new Map();\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent>,Array<YEvent>>}\n     */\n    this.changedParentTypes = new Map();\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = [];\n    /**\n     * @type {any}\n     */\n    this.origin = origin;\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map();\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local;\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set();\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nconst writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet);\n  writeStructsFromTransaction(encoder, transaction);\n  writeDeleteSet(encoder, transaction.deleteSet);\n  return true\n};\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent>} type\n * @param {string|null} parentSub\n */\nconst addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item;\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub);\n  }\n};\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n */\nconst tryToMergeWithLeft = (structs, pos) => {\n  const left = structs[pos - 1];\n  const right = structs[pos];\n  if (left.deleted === right.deleted && left.constructor === right.constructor) {\n    if (left.mergeWith(right)) {\n      structs.splice(pos, 1);\n      if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n        /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left));\n      }\n    }\n  }\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len;\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si];\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false);\n        }\n      }\n    }\n  }\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1));\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[--si]\n      ) {\n        tryToMergeWithLeft(structs, si);\n      }\n    }\n  });\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter);\n  tryMergeDeleteSet(ds, store);\n};\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i];\n    const doc = transaction.doc;\n    const store = doc.store;\n    const ds = transaction.deleteSet;\n    const mergeStructs = transaction._mergeStructs;\n    try {\n      sortAndMergeDeleteSet(ds);\n      transaction.afterState = getStateVector(transaction.doc.store);\n      doc._transaction = null;\n      doc.emit('beforeObserverCalls', [transaction, doc]);\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = [];\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs);\n          }\n        })\n      );\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) =>\n          fs.push(() => {\n            // We need to think about the possibility that the user transforms the\n            // Y.Doc in the event.\n            if (type._item === null || !type._item.deleted) {\n              events = events\n                .filter(event =>\n                  event.target._item === null || !event.target._item.deleted\n                );\n              events\n                .forEach(event => {\n                  event.currentTarget = type;\n                });\n              // sort events by path length so that top-level events are fired first.\n              events\n                .sort((event1, event2) => event1.path.length - event2.path.length);\n              // We don't need to check for events.length\n              // because we know it has at least one element\n              callEventHandlerListeners(type._dEH, events, transaction);\n            }\n          })\n        );\n        fs.push(() => doc.emit('afterTransaction', [transaction, doc]));\n      });\n      callAll(fs, []);\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter);\n      }\n      tryMergeDeleteSet(ds, store);\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0;\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1);\n          for (let i = structs.length - 1; i >= firstChangePos; i--) {\n            tryToMergeWithLeft(structs, i);\n          }\n        }\n      });\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = 0; i < mergeStructs.length; i++) {\n        const { client, clock } = mergeStructs[i].id;\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n        const replacedStructPos = findIndexSS(structs, clock);\n        if (replacedStructPos + 1 < structs.length) {\n          tryToMergeWithLeft(structs, replacedStructPos + 1);\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLeft(structs, replacedStructPos);\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        doc.clientID = generateNewClientId();\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.');\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc]);\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      transaction.subdocsAdded.forEach(subdoc => doc.subdocs.add(subdoc));\n      transaction.subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc));\n\n      doc.emit('subdocs', [{ loaded: transaction.subdocsLoaded, added: transaction.subdocsAdded, removed: transaction.subdocsRemoved }]);\n      transaction.subdocsRemoved.forEach(subdoc => subdoc.destroy());\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = [];\n        doc.emit('afterAllTransactions', [doc, transactionCleanups]);\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1);\n      }\n    }\n  }\n};\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @param {Doc} doc\n * @param {function(Transaction):void} f\n * @param {any} [origin=true]\n *\n * @function\n */\nconst transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups;\n  let initialCall = false;\n  if (doc._transaction === null) {\n    initialCall = true;\n    doc._transaction = new Transaction(doc, origin, local);\n    transactionCleanups.push(doc._transaction);\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc]);\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc]);\n  }\n  try {\n    f(doc._transaction);\n  } finally {\n    if (initialCall && transactionCleanups[0] === doc._transaction) {\n      // The first transaction ended, now process observer calls.\n      // Observer call may create new transactions for which we need to call the observers and do cleanup.\n      // We don't want to nest these calls, so we execute these calls one after\n      // another.\n      // Also we need to ensure that all cleanups are called, even if the\n      // observes throw errors.\n      // This file is full of hacky try {} finally {} blocks to ensure that an\n      // event can throw errors and also that the cleanup is called.\n      cleanupTransactions(transactionCleanups, 0);\n    }\n  }\n};\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions;\n    this.deletions = deletions;\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map();\n  }\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null;\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null;\n  const doc = undoManager.doc;\n  const scope = undoManager.scope;\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store;\n      const stackItem = /** @type {StackItem} */ (stack.pop());\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set();\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = [];\n      let performedChange = false;\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id);\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff));\n            }\n            struct = item;\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct);\n          }\n        }\n      });\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct);\n        }\n      });\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo) !== null || performedChange;\n      });\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i];\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction);\n          performedChange = true;\n        }\n      }\n      result = performedChange ? stackItem : null;\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0;\n      }\n    });\n    _tr = transaction;\n  }, undoManager);\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes;\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager]);\n  }\n  return result\n};\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter whan an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'>}\n */\nclass UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, { captureTimeout = 500, deleteFilter = () => true, trackedOrigins = new Set([null]) } = {}) {\n    super();\n    this.scope = typeScope instanceof Array ? typeScope : [typeScope];\n    this.deleteFilter = deleteFilter;\n    trackedOrigins.add(this);\n    this.trackedOrigins = trackedOrigins;\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = [];\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = [];\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false;\n    this.redoing = false;\n    this.doc = /** @type {Doc} */ (this.scope[0].doc);\n    this.lastChange = 0;\n    this.doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      // Only track certain transactions\n      if (!this.scope.some(type => transaction.changedParentTypes.has(type)) || (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))) {\n        return\n      }\n      const undoing = this.undoing;\n      const redoing = this.redoing;\n      const stack = undoing ? this.redoStack : this.undoStack;\n      if (undoing) {\n        this.stopCapturing(); // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.redoStack = [];\n      }\n      const insertions = new DeleteSet();\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0;\n        const len = endClock - startClock;\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len);\n        }\n      });\n      const now = time.getUnixTime();\n      if (now - this.lastChange < captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1];\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet]);\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions]);\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions));\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now;\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true);\n        }\n      });\n      this.emit('stack-item-added', [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this]);\n    });\n  }\n\n  clear () {\n    this.doc.transact(transaction => {\n      /**\n       * @param {StackItem} stackItem\n       */\n      const clearItem = stackItem => {\n        iterateDeletedStructs(transaction, stackItem.deletions, item => {\n          if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n            keepItem(item, false);\n          }\n        });\n      };\n      this.undoStack.forEach(clearItem);\n      this.redoStack.forEach(clearItem);\n    });\n    this.undoStack = [];\n    this.redoStack = [];\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0;\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.undoStack, 'undo');\n    } finally {\n      this.undoing = false;\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.redoStack, 'redo');\n    } finally {\n      this.redoing = false;\n    }\n    return res\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder);\n        yield new Skip(createID(client, clock), len);\n        clock += len;\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        );\n        yield struct;\n        clock += struct.length;\n      } else {\n        const len = decoder.readLen();\n        yield new GC(createID(client, clock), len);\n        clock += len;\n      }\n    }\n  }\n}\n\nclass LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder);\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null;\n    this.done = false;\n    this.filterSkips = filterSkips;\n    this.next();\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null;\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nconst logUpdate = update => logUpdateV2(update, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = [];\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr);\n  }\n  logging.print('Structs: ', structs);\n  const ds = readDeleteSet(updateDecoder);\n  logging.print('DeleteSet: ', ds);\n};\n\nclass LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0;\n    this.startClock = 0;\n    this.written = 0;\n    this.encoder = encoder;\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = [];\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nconst mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let size = 0;\n    let currClient = curr.id.client;\n    let stopCounting = curr.id.clock !== 0; // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length;\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++;\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient);\n          encoding.writeVarUint(encoder.restEncoder, currClock);\n        }\n        currClient = curr.id.client;\n        currClock = 0;\n        stopCounting = curr.id.clock !== 0;\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true;\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length;\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++;\n      encoding.writeVarUint(encoder.restEncoder, currClient);\n      encoding.writeVarUint(encoder.restEncoder, currClock);\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder();\n    encoding.writeVarUint(enc, size);\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder);\n    encoder.restEncoder = enc;\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0);\n    return encoder.toUint8Array()\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map();\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let currClient = curr.id.client;\n    let currClock = curr.id.clock;\n    // write the beginning to `from`\n    from.set(currClient, currClock);\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock);\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock);\n        // update currClient\n        currClient = curr.id.client;\n      }\n      currClock = curr.id.clock + curr.length;\n    }\n    // write the end to `to`\n    to.set(currClient, currClock);\n  }\n  return { from, to }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1);\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id;\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id;\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left);\n    const { client, clock } = leftItem.id;\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n};\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nconst mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)));\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true));\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null;\n\n  const updateEncoder = new YEncoder();\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder);\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null);\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock;\n          if (clockDiff === 0) {\n            return dec1.curr.constructor === dec2.curr.constructor ? 0 : (\n              dec1.curr.constructor === Skip ? 1 : -1\n            )\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    );\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0];\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client;\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr);\n      let iterated = false;\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next();\n        iterated = true;\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n        currWrite = { struct: curr, offset: 0 };\n        currDecoder.next();\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock;\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length;\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff);\n            currWrite = { struct, offset: 0 };\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock;\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff;\n            } else {\n              curr = sliceStruct(curr, diff);\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            currWrite = { struct: curr, offset: 0 };\n            currDecoder.next();\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 };\n      currDecoder.next();\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n      currWrite = { struct: next, offset: 0 };\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n    currWrite = null;\n  }\n  finishLazyStructWriting(lazyStructEncoder);\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder));\n  const ds = mergeDeleteSets(dss);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nconst diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv);\n  const encoder = new YEncoder();\n  const lazyStructWriter = new LazyStructWriter(encoder);\n  const decoder = new YDecoder(decoding.createDecoder(update));\n  const reader = new LazyStructReader(decoder, false);\n  while (reader.curr) {\n    const curr = reader.curr;\n    const currClient = curr.id.client;\n    const svClock = state.get(currClient) || 0;\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next();\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0));\n      reader.next();\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0);\n        reader.next();\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next();\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter);\n  // write ds\n  const ds = readDeleteSet(decoder);\n  writeDeleteSet(encoder, ds);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nconst diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) });\n    lazyWriter.encoder.restEncoder = encoding.createEncoder();\n    lazyWriter.written = 0;\n  }\n};\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter);\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client;\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client);\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset);\n  }\n  struct.write(lazyWriter.encoder, offset);\n  lazyWriter.written++;\n};\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter);\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder;\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length);\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i];\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written);\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder);\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nconst convertUpdateFormat = (update, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  const updateEncoder = new YEncoder();\n  const lazyWriter = new LazyStructWriter(updateEncoder);\n\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, curr, 0);\n  }\n  finishLazyStructWriting(lazyWriter);\n  const ds = readDeleteSet(updateDecoder);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, UpdateDecoderV2, UpdateEncoderV1);\n\n/**\n * YEvent describes the changes on a YType.\n */\nclass YEvent {\n  /**\n   * @param {AbstractType<any>} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {AbstractType<any>}\n     */\n    this.target = target;\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target;\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction;\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null;\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null;\n    /**\n     * @type {null | Array<{ insert?: string | Array<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null;\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    // @ts-ignore _item is defined because target is integrated\n    return getPathTo(this.currentTarget, this.target)\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      const keys = new Map();\n      const target = this.target;\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key));\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action;\n          let oldValue;\n          if (this.adds(item)) {\n            let prev = item.left;\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left;\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                action = 'add';\n                oldValue = undefined;\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete';\n              oldValue = array.last(/** @type {Item} */ item.content.getContent());\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue });\n        }\n      });\n      this._keys = keys;\n    }\n    return this._keys\n  }\n\n  /**\n   * @type {Array<{insert?: string | Array<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes;\n    if (changes === null) {\n      const target = this.target;\n      const added = set.create();\n      const deleted = set.create();\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = [];\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      };\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null;\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp);\n          }\n        };\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp();\n                lastOp = { delete: 0 };\n              }\n              lastOp.delete += item.length;\n              deleted.add(item);\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp();\n                lastOp = { insert: [] };\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent());\n              added.add(item);\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp();\n                lastOp = { retain: 0 };\n              }\n              lastOp.retain += item.length;\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp();\n        }\n      }\n      this._changes = changes;\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = [];\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub);\n    } else {\n      // parent is array-ish\n      let i = 0;\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start;\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++;\n        }\n        c = c.right;\n      }\n      path.unshift(i);\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent);\n  }\n  return path\n};\n\nconst maxSearchMarker = 80;\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0;\n\nclass ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true;\n    this.p = p;\n    this.index = index;\n    this.timestamp = globalSearchMarkerTimestamp++;\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++; };\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false;\n  marker.p = p;\n  p.marker = true;\n  marker.index = index;\n  marker.timestamp = globalSearchMarkerTimestamp++;\n};\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b);\n    overwriteMarker(marker, p, index);\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index);\n    searchMarker.push(pm);\n    return pm\n  }\n};\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nconst findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b);\n  let p = yarray._start;\n  let pindex = 0;\n  if (marker !== null) {\n    p = marker.p;\n    pindex = marker.index;\n    refreshMarkerTimestamp(marker); // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length;\n    }\n    p = p.right;\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex);\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n};\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nconst updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i];\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p;\n      p.marker = false;\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left;\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length;\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1);\n        continue\n      }\n      m.p = p;\n      p.marker = true;\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len);\n    }\n  }\n};\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nconst getTypeChildren = t => {\n  let s = t._start;\n  const arr = [];\n  while (s) {\n    arr.push(s);\n    s = s.right;\n  }\n  return arr\n};\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nconst callTypeObservers = (type, transaction, event) => {\n  const changedType = type;\n  const changedParentTypes = transaction.changedParentTypes;\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event);\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent);\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction);\n};\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nclass AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null;\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map();\n    /**\n     * @type {Item|null}\n     */\n    this._start = null;\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null;\n    this._length = 0;\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler();\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent>,Transaction>}\n     */\n    this._dEH = createEventHandler();\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null;\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y;\n    this._item = item;\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0;\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start;\n  }\n  if (end < 0) {\n    end = type._length + end;\n  }\n  let len = end - start;\n  const cs = [];\n  let n = type._start;\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      if (c.length <= start) {\n        start -= c.length;\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i]);\n          len--;\n        }\n        start = 0;\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArray = type => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArraySnapshot = (type, snapshot) => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nconst typeListForEach = (type, f) => {\n  let index = 0;\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type);\n      }\n    }\n    n = n.right;\n  }\n};\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nconst typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = [];\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type));\n  });\n  return result\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nconst typeListCreateIterator = type => {\n  let n = type._start;\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null;\n  let currentContentIndex = 0;\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right;\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent();\n        currentContentIndex = 0;\n        n = n.right; // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++];\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null;\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nconst typeListGet = (type, index) => {\n  const marker = findMarker(type, index);\n  let n = type._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length;\n    }\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const store = doc.store;\n  const right = referenceItem === null ? parent._start : referenceItem.right;\n  /**\n   * @type {Array<Object|Array<any>|number>}\n   */\n  let jsonContent = [];\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent));\n      left.integrate(transaction, 0);\n      jsonContent = [];\n    }\n  };\n  content.forEach(c => {\n    switch (c.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        jsonContent.push(c);\n        break\n      default:\n        packJsonContent();\n        switch (c.constructor) {\n          case Uint8Array:\n          case ArrayBuffer:\n            left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))));\n            left.integrate(transaction, 0);\n            break\n          case Doc:\n            left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)));\n            left.integrate(transaction, 0);\n            break\n          default:\n            if (c instanceof AbstractType) {\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c));\n              left.integrate(transaction, 0);\n            } else {\n              throw new Error('Unexpected content type in insert operation')\n            }\n        }\n    }\n  });\n  packJsonContent();\n};\n\nconst lengthExceeded = error.create('Length exceeded!');\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length);\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev; // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0;\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n        }\n        break\n      }\n      index -= n.length;\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length);\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nconst typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index;\n  const startLength = length;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n      }\n      index -= n.length;\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length));\n      }\n      n.delete(transaction);\n      length -= n.length;\n    }\n    n = n.right;\n  }\n  if (length > 0) {\n    throw lengthExceeded\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nconst typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key);\n  if (c !== undefined) {\n    c.delete(transaction);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nconst typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  let content;\n  if (value == null) {\n    content = new ContentAny([value]);\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value]);\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value));\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value));\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value);\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0);\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGet = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nconst typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {};\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1];\n    }\n  });\n  return res\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst typeMapHas = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null;\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left;\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n};\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nconst createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted);\n\n/**\n * @module YArray\n */\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n */\nclass YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction);\n    this._transaction = transaction;\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nclass YArray extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = [];\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = [];\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    const a = new YArray();\n    a.push(items);\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    const arr = new YArray();\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? el.clone() : el\n    ));\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction));\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content);\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length);\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template T,M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function on once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f);\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nconst readYArray = decoder => new YArray();\n\n/**\n * @template T\n * Event that describes the changes on a YMap.\n */\nclass YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction);\n    this.keysChanged = subs;\n  }\n}\n\n/**\n * @template T number|string|Object|Array|Uint8Array\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<T>>\n * @implements {Iterable<T>}\n */\nclass YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super();\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null;\n\n    if (entries === undefined) {\n      this._prelimContent = new Map();\n    } else {\n      this._prelimContent = new Map(entries);\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value);\n    });\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<T>}\n   */\n  clone () {\n    const map = new YMap();\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? value.clone() : value);\n    });\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs));\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,T>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,T>}\n     */\n    const map = {};\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1];\n        map[key] = v instanceof AbstractType ? v.toJSON() : v;\n      }\n    });\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<any>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(T,string,YMap<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    /**\n     * @type {Object<string,T>}\n     */\n    const map = {};\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this);\n      }\n    });\n    return map\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key);\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {T} value The value of the element to add\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, value);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value);\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {T|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (value, key, map) {\n          typeMapDelete(transaction, map, key);\n        });\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear();\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nconst readYMap = decoder => new YMap();\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b));\n\nclass ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left;\n    this.right = right;\n    this.index = index;\n    this.currentAttributes = currentAttributes;\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase();\n    }\n    switch (this.right.content.constructor) {\n      case ContentEmbed:\n      case ContentString:\n        if (!this.right.deleted) {\n          this.index += this.right.length;\n        }\n        break\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content));\n        }\n        break\n    }\n    this.left = this.right;\n    this.right = this.right.right;\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentEmbed:\n      case ContentString:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count));\n          }\n          pos.index += pos.right.length;\n          count -= pos.right.length;\n        }\n        break\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content));\n        }\n        break\n    }\n    pos.left = pos.right;\n    pos.right = pos.right.right;\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map();\n  const marker = findMarker(parent, index);\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes);\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes);\n    return findNextPosition(transaction, pos, index)\n  }\n};\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key);\n    }\n    currPos.forward();\n  }\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  let nextFormat = currPos.left;\n  const right = currPos.right;\n  negatedAttributes.forEach((val, key) => {\n    nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), nextFormat, nextFormat && nextFormat.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n    nextFormat.integrate(transaction, 0);\n    currPos.right = nextFormat;\n  });\n};\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format;\n  if (value === null) {\n    currentAttributes.delete(key);\n  } else {\n    currentAttributes.set(key, value);\n  }\n};\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) ; else {\n      break\n    }\n    currPos.forward();\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const negatedAttributes = new Map();\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key];\n    const currentVal = currPos.currentAttributes.get(key) || null;\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal);\n      const { left, right } = currPos;\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n      currPos.right.integrate(transaction, 0);\n      currPos.forward();\n    }\n  }\n  return negatedAttributes\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null;\n    }\n  });\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : new ContentEmbed(text);\n  let { left, right, index } = currPos;\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength());\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content);\n  right.integrate(transaction, 0);\n  currPos.right = right;\n  currPos.index = index;\n  currPos.forward();\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  while (length > 0 && currPos.right !== null) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content);\n          const attr = attributes[key];\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key);\n            } else {\n              negatedAttributes.set(key, value);\n            }\n            currPos.right.delete(transaction);\n          }\n          break\n        }\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          break\n      }\n    }\n    currPos.forward();\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = '';\n    for (; length > 0; length--) {\n      newlines += '\\n';\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines));\n    currPos.right.integrate(transaction, 0);\n    currPos.forward();\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} end exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} endAttributes This attribute is modified!\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, end, startAttributes, endAttributes) => {\n  while (end && end.content.constructor !== ContentString && end.content.constructor !== ContentEmbed) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      updateCurrentAttributes(endAttributes, /** @type {ContentFormat} */ (end.content));\n    }\n    end = end.right;\n  }\n  let cleanups = 0;\n  while (start !== end) {\n    if (!start.deleted) {\n      const content = start.content;\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content);\n          if ((endAttributes.get(key) || null) !== value || (startAttributes.get(key) || null) === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction);\n            cleanups++;\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right);\n  }\n  return cleanups\n};\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || (item.right.content.constructor !== ContentString && item.right.content.constructor !== ContentEmbed))) {\n    item = item.right;\n  }\n  const attrs = new Set();\n  // iterate back until a content item is found\n  while (item && (item.deleted || (item.content.constructor !== ContentString && item.content.constructor !== ContentEmbed))) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key;\n      if (attrs.has(key)) {\n        item.delete(transaction);\n      } else {\n        attrs.add(key);\n      }\n    }\n    item = item.left;\n  }\n};\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nconst cleanupYTextFormatting = type => {\n  let res = 0;\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start);\n    let end = type._start;\n    let startAttributes = map.create();\n    const currentAttributes = map.copy(startAttributes);\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content));\n            break\n          case ContentEmbed:\n          case ContentString:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes);\n            startAttributes = map.copy(currentAttributes);\n            start = end;\n            break\n        }\n      }\n      end = end.right;\n    }\n  });\n  return res\n};\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length;\n  const startAttrs = map.copy(currPos.currentAttributes);\n  const start = currPos.right;\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          currPos.right.delete(transaction);\n          break\n      }\n    }\n    currPos.forward();\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, map.copy(currPos.currentAttributes));\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent);\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length);\n  }\n  return currPos\n};\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * Event that describes the changes on a YText type.\n */\nclass YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.keysChanged.add(sub);\n      }\n    });\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      };\n      this._changes = changes;\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc);\n      /**\n       * @type {Array<{insert?:string, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = [];\n      transact(y, transaction => {\n        const currentAttributes = new Map(); // saves all current attributes for insert\n        const oldAttributes = new Map();\n        let item = this.target._start;\n        /**\n         * @type {string?}\n         */\n        let action = null;\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}; // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = '';\n        let retain = 0;\n        let deleteLen = 0;\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op;\n            switch (action) {\n              case 'delete':\n                op = { delete: deleteLen };\n                deleteLen = 0;\n                break\n              case 'insert':\n                op = { insert };\n                if (currentAttributes.size > 0) {\n                  op.attributes = {};\n                  currentAttributes.forEach((value, key) => {\n                    if (value !== null) {\n                      op.attributes[key] = value;\n                    }\n                  });\n                }\n                insert = '';\n                break\n              case 'retain':\n                op = { retain };\n                if (Object.keys(attributes).length > 0) {\n                  op.attributes = {};\n                  for (const key in attributes) {\n                    op.attributes[key] = attributes[key];\n                  }\n                }\n                retain = 0;\n                break\n            }\n            delta.push(op);\n            action = null;\n          }\n        };\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp();\n                  action = 'insert';\n                  insert = /** @type {ContentEmbed} */ (item.content).embed;\n                  addOp();\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += 1;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += 1;\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp();\n                    action = 'insert';\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str;\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += item.length;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += item.length;\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content);\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null;\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key];\n                    } else {\n                      attributes[key] = value;\n                    }\n                  } else {\n                    item.delete(transaction);\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value);\n                const curVal = currentAttributes.get(key) || null;\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp();\n                  }\n                  attributes[key] = curVal;\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value);\n                const attr = attributes[key];\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (value === null) {\n                      attributes[key] = value;\n                    } else {\n                      delete attributes[key];\n                    }\n                  } else {\n                    item.delete(transaction);\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp();\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content));\n              }\n              break\n            }\n          }\n          item = item.right;\n        }\n        addOp();\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1];\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop();\n          } else {\n            break\n          }\n        }\n      });\n      this._delta = delta;\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nclass YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super();\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : [];\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = [];\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f());\n    } catch (e) {\n      console.error(e);\n    }\n    this._pending = null;\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    const event = new YTextEvent(this, transaction, parentSubs);\n    const doc = transaction.doc;\n    callTypeObservers(this, transaction, event);\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local) {\n      // check if another formatting item was inserted\n      let foundFormattingItem = false;\n      for (const [client, afterClock] of transaction.afterState.entries()) {\n        const clock = transaction.beforeState.get(client) || 0;\n        if (afterClock === clock) {\n          continue\n        }\n        iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n          if (!item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat) {\n            foundFormattingItem = true;\n          }\n        });\n        if (foundFormattingItem) {\n          break\n        }\n      }\n      if (!foundFormattingItem) {\n        iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n          if (item instanceof GC || foundFormattingItem) {\n            return\n          }\n          if (item.parent === this && item.content.constructor === ContentFormat) {\n            foundFormattingItem = true;\n          }\n        });\n      }\n      transact(doc, (t) => {\n        if (foundFormattingItem) {\n          // If a formatting item was inserted, we simply clean the whole type.\n          // We need to compute currentAttributes for the current position anyway.\n          cleanupYTextFormatting(this);\n        } else {\n          // If no formatting attribute was inserted, we can make due with contextless\n          // formatting cleanups.\n          // Contextless: it is not necessary to compute currentAttributes for the affected position.\n          iterateDeletedStructs(t, t.deleteSet, item => {\n            if (item instanceof GC) {\n              return\n            }\n            if (item.parent === this) {\n              cleanupContextlessFormattingGap(t, item);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = '';\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start;\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str;\n      }\n      n = n.right;\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  [opts]\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map());\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i];\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert;\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {});\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {});\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete);\n          }\n        }\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta));\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = [];\n    const currentAttributes = new Map();\n    const doc = /** @type {Doc} */ (this.doc);\n    let str = '';\n    let n = this._start;\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {};\n        let addAttributes = false;\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true;\n          attributes[key] = value;\n        });\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str };\n        if (addAttributes) {\n          op.attributes = attributes;\n        }\n        ops.push(op);\n        str = '';\n      }\n    }\n    // snapshots are merged again after the transaction, so we need to keep the\n    // transalive until we are done\n    transact(doc, transaction => {\n      if (snapshot) {\n        splitSnapshotAffectedStructs(transaction, snapshot);\n      }\n      if (prevSnapshot) {\n        splitSnapshotAffectedStructs(transaction, prevSnapshot);\n      }\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange');\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'removed') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' });\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'added') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' });\n                }\n              } else if (cur !== undefined) {\n                packStr();\n                currentAttributes.delete('ychange');\n              }\n              str += /** @type {ContentString} */ (n.content).str;\n              break\n            }\n            case ContentEmbed: {\n              packStr();\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: /** @type {ContentEmbed} */ (n.content).embed\n              };\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({});\n                op.attributes = attrs;\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value;\n                });\n              }\n              ops.push(op);\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr();\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content));\n              }\n              break\n          }\n        }\n        n = n.right;\n      }\n      packStr();\n    }, splitSnapshotAffectedStructs);\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (!attributes) {\n          attributes = {};\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v; });\n        }\n        insertText(transaction, this, pos, text, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes));\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    if (embed.constructor !== Object) {\n      throw new Error('Embed must be an Object')\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        insertText(transaction, this, pos, embed, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes));\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length));\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes));\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName));\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue));\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nconst readYText = decoder => new YText();\n\n/**\n * @module YXml\n */\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nclass YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f;\n    this._root = root;\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start);\n    this._firstCall = true;\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode;\n    let type = n && n.content && /** @type {any} */ (n.content).type;\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type;\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start;\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right;\n              break\n            } else if (n.parent === this._root) {\n              n = null;\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item;\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false;\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n;\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nclass YXmlFragment extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = [];\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first;\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment();\n    // @ts-ignore\n    el.insert(0, el.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query);\n    const next = iterator.next();\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    return Array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction));\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment();\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this);\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null);\n    });\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref;\n        typeListInsertGenericsAfter(transaction, this, refItem, content);\n      });\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent);\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1;\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length);\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content);\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nconst readYXmlFragment = decoder => new YXmlFragment();\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n */\nclass YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super();\n    this.nodeName = nodeName;\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map();\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value);\n    });\n    this._prelimAttrs = null;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement}\n   */\n  clone () {\n    const el = new YXmlElement(this.nodeName);\n    const attrs = this.getAttributes();\n    for (const key in attrs) {\n      el.setAttribute(key, attrs[key]);\n    }\n    // @ts-ignore\n    el.insert(0, el.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes();\n    const stringBuilder = [];\n    const keys = [];\n    for (const key in attrs) {\n      keys.push(key);\n    }\n    keys.sort();\n    const keysLen = keys.length;\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i];\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"');\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase();\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : '';\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName);\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {String} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue);\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {String} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {String} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName);\n    const attrs = this.getAttributes();\n    for (const key in attrs) {\n      dom.setAttribute(key, attrs[key]);\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding));\n    });\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID);\n    encoder.writeKey(this.nodeName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nconst readYXmlElement = decoder => new YXmlElement(decoder.readKey());\n\n/**\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nclass YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.attributesChanged.add(sub);\n      }\n    });\n  }\n}\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nclass YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super();\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName);\n    this.forEach((value, key) => {\n      el.set(key, value);\n    });\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName];\n    let dom;\n    if (hook !== undefined) {\n      dom = hook.createDom(this);\n    } else {\n      dom = document.createElement(this.hookName);\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName);\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID);\n    encoder.writeKey(this.hookName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nconst readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey());\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nclass YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString());\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = [];\n      for (const nodeName in delta.attributes) {\n        const attrs = [];\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] });\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1);\n        nestedNodes.push({ nodeName, attrs });\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1);\n      // now convert to dom string\n      let str = '';\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i];\n        str += `<${node.nodeName}`;\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j];\n          str += ` ${attr.key}=\"${attr.value}\"`;\n        }\n        str += '>';\n      }\n      str += delta.insert;\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`;\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nconst readYXmlText = decoder => new YXmlText();\n\nclass AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id;\n    this.length = length;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n\nconst structGCRefNumber = 0;\n\n/**\n * @private\n */\nclass GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.length -= offset;\n    }\n    addStruct(transaction.doc.store, this);\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber);\n    encoder.writeLen(this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\nclass ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nconst readContentBinary = decoder => new ContentBinary(decoder.readBuf());\n\nclass ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset);\n    this.len = offset;\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len);\n    item.markDeleted();\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nconst readContentDeleted = decoder => new ContentDeleted(decoder.readLen());\n\n/**\n * @private\n */\nclass ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.');\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * @type {any}\n     */\n    const opts = {};\n    this.opts = opts;\n    if (!doc.gc) {\n      opts.gc = false;\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true;\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta;\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(this.doc)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item;\n    transaction.subdocsAdded.add(this.doc);\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc);\n    } else {\n      transaction.subdocsRemoved.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid);\n    encoder.writeAny(this.opts);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nconst readContentDoc = decoder => new ContentDoc(new Doc({ guid: decoder.readString(), ...decoder.readAny() }));\n\n/**\n * @private\n */\nclass ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nconst readContentEmbed = decoder => new ContentEmbed(decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentFormat}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    /** @type {AbstractType<any>} */ (item.parent)._searchMarker = null;\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key);\n    encoder.writeJSON(this.value);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nconst readContentFormat = decoder => new ContentFormat(decoder.readString(), decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c));\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nconst readContentJSON = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString();\n    if (c === 'undefined') {\n      cs.push(undefined);\n    } else {\n      cs.push(JSON.parse(c));\n    }\n  }\n  return new ContentJSON(cs)\n};\n\nclass ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeAny(c);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nconst readContentAny = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny());\n  }\n  return new ContentAny(cs)\n};\n\n/**\n * @private\n */\nclass ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset));\n    this.str = this.str.slice(0, offset);\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1);\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�';\n      // replace right as well\n      right.str = '�' + right.str.slice(1);\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset));\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nconst readContentString = decoder => new ContentString(decoder.readString());\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nconst typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n];\n\nconst YArrayRefID = 0;\nconst YMapRefID = 1;\nconst YTextRefID = 2;\nconst YXmlElementRefID = 3;\nconst YXmlFragmentRefID = 4;\nconst YXmlHookRefID = 5;\nconst YXmlTextRefID = 6;\n\n/**\n * @private\n */\nclass ContentType {\n  /**\n   * @param {AbstractType<YEvent>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start;\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else {\n        // Whis will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item);\n      }\n      item = item.right;\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else {\n        // same as above\n        transaction._mergeStructs.push(item);\n      }\n    });\n    transaction.changed.delete(this.type);\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start;\n    while (item !== null) {\n      item.gc(store, true);\n      item = item.right;\n    }\n    this.type._start = null;\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true);\n        item = item.left;\n      }\n    });\n    this.type._map = new Map();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nconst readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder));\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nconst followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id;\n  let diff = 0;\n  let item;\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff);\n    }\n    item = getItem(store, nextID);\n    diff = nextID.clock - item.id.clock;\n    nextID = item.redone;\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n};\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nconst keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep;\n    item = /** @type {AbstractType<any>} */ (item.parent)._item;\n  }\n};\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nconst splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id;\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  );\n  if (leftItem.deleted) {\n    rightItem.markDeleted();\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true;\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff);\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem;\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem;\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem);\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem);\n  }\n  leftItem.length = diff;\n  return rightItem\n};\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n *\n * @return {Item|null}\n *\n * @private\n */\nconst redoItem = (transaction, item, redoitems) => {\n  const doc = transaction.doc;\n  const store = doc.store;\n  const ownClientID = doc.clientID;\n  const redone = item.redone;\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item;\n  /**\n   * @type {Item|null}\n   */\n  let left;\n  /**\n   * @type {Item|null}\n   */\n  let right;\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left;\n    right = item;\n  } else {\n    // Is a map item. Insert as current value\n    left = item;\n    while (left.right !== null) {\n      left = left.right;\n      if (left.id.client !== ownClientID) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    }\n    if (left.right !== null) {\n      left = /** @type {Item} */ (/** @type {AbstractType<any>} */ (item.parent)._map.get(item.parentSub));\n    }\n    right = null;\n  }\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true && parentItem.redone === null) {\n    // try to undo parent if it will be undone anyway\n    if (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems) === null) {\n      return null\n    }\n  }\n  if (parentItem !== null && parentItem.redone !== null) {\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone);\n    }\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left;\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone);\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace;\n        break\n      }\n      left = left.left;\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right;\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone);\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace;\n        break\n      }\n      right = right.right;\n    }\n  }\n  const nextClock = getState(store, ownClientID);\n  const nextId = createID(ownClientID, nextClock);\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentItem === null ? item.parent : /** @type {ContentType} */ (parentItem.content).type,\n    item.parentSub,\n    item.content.copy()\n  );\n  item.redone = nextId;\n  keepItem(redoneItem, true);\n  redoneItem.integrate(transaction, 0);\n  return redoneItem\n};\n\n/**\n * Abstract class that represents any content.\n */\nclass Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength());\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin;\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left;\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right;\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin;\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent;\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub;\n    /**\n     * If this type's effect is reundone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null;\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content;\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0;\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4;\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1;\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3;\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3;\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin);\n      this.origin = this.left.lastId;\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin);\n      this.rightOrigin = this.right.id;\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null;\n    }\n    // only set parent if this shouldn't be garbage collected\n    if (!this.parent) {\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent;\n        this.parentSub = this.left.parentSub;\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent;\n        this.parentSub = this.right.parentSub;\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent);\n      if (parentItem.constructor === GC) {\n        this.parent = null;\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type;\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1));\n      this.origin = this.left.lastId;\n      this.content = this.content.splice(offset);\n      this.length -= offset;\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left;\n\n        /**\n         * @type {Item|null}\n         */\n        let o;\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right;\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (o !== null && o.left !== null) {\n            o = o.left;\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start;\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set();\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set();\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o);\n          conflictingItems.add(o);\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o;\n              conflictingItems.clear();\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o;\n              conflictingItems.clear();\n            }\n          } else {\n            break\n          }\n          o = o.right;\n        }\n        this.left = left;\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right;\n        this.right = right;\n        this.left.right = this;\n      } else {\n        let r;\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (r !== null && r.left !== null) {\n            r = r.left;\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this;\n        }\n        this.right = r;\n      }\n      if (this.right !== null) {\n        this.right.left = this;\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this);\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction);\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length;\n      }\n      addStruct(transaction.doc.store, this);\n      this.content.integrate(transaction, this);\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub);\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction);\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0);\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left;\n    while (n !== null && n.deleted) {\n      n = n.left;\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker;\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this;\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length;\n            }\n          }\n        });\n      }\n      if (right.keep) {\n        this.keep = true;\n      }\n      this.right = right.right;\n      if (this.right !== null) {\n        this.right.left = this;\n      }\n      this.length += right.length;\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length;\n      }\n      this.markDeleted();\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length);\n      addChangedTypeToTransaction(transaction, parent, this.parentSub);\n      this.content.delete(transaction);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store);\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length));\n    } else {\n      this.content = new ContentDeleted(this.length);\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin;\n    const rightOrigin = this.rightOrigin;\n    const parentSub = this.parentSub;\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6); // parentSub is non-null\n    encoder.writeInfo(info);\n    if (origin !== null) {\n      encoder.writeLeftID(origin);\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin);\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      if (parent._item !== undefined) {\n        const parentItem = parent._item;\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent);\n          encoder.writeParentInfo(true); // write parentYKey\n          encoder.writeString(ykey);\n        } else {\n          encoder.writeParentInfo(false); // write parent id\n          encoder.writeLeftID(parentItem.id);\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true); // write parentYKey\n        encoder.writeString(parent);\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false); // write parent id\n        encoder.writeLeftID(parent);\n      } else {\n        error.unexpectedCase();\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub);\n      }\n    }\n    this.content.write(encoder, offset);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nconst readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder);\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nconst contentRefs = [\n  () => { error.unexpectedCase(); }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase(); } // 10 - Skip is not ItemContent\n];\n\nconst structSkipRefNumber = 10;\n\n/**\n * @private\n */\nclass Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber);\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\nexport { AbstractConnector, AbstractStruct, AbstractType, YArray as Array, ContentAny, ContentBinary, ContentDeleted, ContentEmbed, ContentFormat, ContentJSON, ContentString, ContentType, Doc, GC, ID, Item, YMap as Map, PermanentUserData, RelativePosition, Snapshot, YText as Text, Transaction, UndoManager, YXmlElement as XmlElement, YXmlFragment as XmlFragment, YXmlHook as XmlHook, YXmlText as XmlText, YArrayEvent, YEvent, YMapEvent, YTextEvent, YXmlEvent, applyUpdate, applyUpdateV2, compareIDs, compareRelativePositions, createAbsolutePositionFromRelativePosition, createDeleteSet, createDeleteSetFromStructStore, createDocFromSnapshot, createID, createRelativePositionFromJSON, createRelativePositionFromTypeIndex, createSnapshot, decodeRelativePosition, decodeSnapshot, decodeSnapshotV2, decodeStateVector, diffUpdate, diffUpdateV2, emptySnapshot, encodeRelativePosition, encodeSnapshot, encodeSnapshotV2, encodeStateAsUpdate, encodeStateAsUpdateV2, encodeStateVector, encodeStateVectorFromUpdate, encodeStateVectorFromUpdateV2, equalSnapshots, findRootTypeKey, getItem, getState, getTypeChildren, isDeleted, isParentOf, iterateDeletedStructs, logType, logUpdate, logUpdateV2, mergeUpdates, mergeUpdatesV2, parseUpdateMeta, parseUpdateMetaV2, readUpdate, readUpdateV2, relativePositionToJSON, snapshot, transact, tryGc, typeListToArraySnapshot, typeMapGetSnapshot };\n//# sourceMappingURL=yjs.mjs.map\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","/**\n * @since 2021-07-08\n * @author vivaxy\n */\nimport * as Y from 'yjs';\nimport * as decoding from 'lib0/decoding';\n\nconst readYArray = () => {\n  return new Y.Array();\n};\n\nconst readYMap = () => {\n  return new Y.Map();\n};\n\nconst readYText = () => {\n  return new Y.Text();\n};\n\nconst readYXmlElement = (decoder) => {\n  decoding.readVarString(decoder);\n};\n\nconst readYXmlFragment = (decoder) => {};\n\nconst readYXmlHook = (decoder) => {\n  decoding.readVarString(decoder);\n};\n\nconst readYXmlText = (decoder) => {};\n\nconst typeDecoder = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText,\n];\n\nexport default typeDecoder;\n","/**\n * @since 2021-08-25\n * @author vivaxy\n */\nexport default {\n  // utils\n  DOC: 'Doc',\n\n  // types\n  ABSTRACT_TYPE: 'AbstractType',\n  Y_ARRAY: 'YArray',\n  Y_MAP: 'YMap',\n  Y_TEXT: 'YText',\n  Y_XML_ELEMENT: 'YXmlElement',\n  Y_XML_FRAGMENT: 'YXmlFragment',\n  Y_XML_TEXT: 'YXmlText',\n\n  // structs\n  ABSTRACT_STRUCT: 'AbstractStruct',\n  GC: 'GC',\n  ITEM: 'Item',\n  SKIP: 'Skip',\n\n  // contents\n  CONTENT_ANY: 'ContentAny',\n  CONTENT_BINARY: 'ContentBinary',\n  CONTENT_DELETED: 'ContentDeleted',\n  CONTENT_DOC: 'ContentDoc',\n  CONTENT_EMBED: 'ContentEmbed',\n  CONTENT_FORMAT: 'ContentFormat',\n  CONTENT_JSON: 'ContentJSON',\n  CONTENT_STRING: 'ContentString',\n  CONTENT_TYPE: 'ContentType',\n};\n","/**\n * @since 2021-07-08\n * @author vivaxy\n */\nimport * as decoding from 'lib0/decoding';\nimport * as error from 'lib0/error';\nimport typeRefs from './type-decoder';\nimport { DATA_TYPES } from '../data-viewer';\n\nfunction readContentDeleted(decoder) {\n  return {\n    type: DATA_TYPES.CONTENT_DELETED,\n    length: decoding.readVarUint(decoder),\n  };\n}\n\nfunction readContentEmbed(decoder) {\n  const embed = decoding.readVarString(decoder);\n  debugger;\n  return {\n    type: DATA_TYPES.CONTENT_EMBED,\n    content: embed,\n    length: 1,\n  };\n}\n\nfunction readContentFormat(decoder) {\n  const key = decoding.readVarString(decoder);\n  const value = decoding.readVarString(decoder);\n  return {\n    type: DATA_TYPES.CONTENT_FORMAT,\n    content: { key, value },\n    length: 1,\n  };\n}\n\nfunction readContentJSON(decoder) {\n  const length = decoding.readVarUint(decoder);\n  const content = [];\n  for (let i = 0; i < length; i++) {\n    const c = decoding.readVarString(decoder);\n    if (c === 'undefined') {\n      content.push(undefined);\n    } else {\n      content.push(JSON.parse(c));\n    }\n  }\n  return {\n    type: DATA_TYPES.CONTENT_JSON,\n    content,\n    length,\n  };\n}\n\nfunction readContentString(decoder) {\n  const string = decoding.readVarString(decoder);\n  return {\n    type: DATA_TYPES.CONTENT_STRING,\n    string,\n    length: string.length,\n  };\n}\n\nfunction readContentType(decoder) {\n  const contentType = typeRefs[decoding.readVarUint(decoder)](decoder);\n  return {\n    type: DATA_TYPES.CONTENT_TYPE,\n    content: contentType,\n    length: 1,\n  };\n}\n\nfunction readContentBinary(decoder) {\n  const binary = decoding.readVarUint8Array(decoder);\n  return {\n    type: DATA_TYPES.CONTENT_BINARY,\n    content: binary,\n    length: 1,\n  };\n}\n\nfunction readContentAny(decoder) {\n  const len = decoding.readVarUint(decoder);\n  const content = [];\n\n  for (let i = 0; i < len; i++) {\n    const con = decoding.readAny(decoder);\n    content.push(con);\n  }\n\n  return {\n    type: DATA_TYPES.CONTENT_ANY,\n    content,\n    length: len,\n  };\n}\n\nconst contentDecoder = [\n  () => {\n    throw error.unexpectedCase();\n  }, // GC is not ItemContent\n  readContentDeleted,\n  readContentJSON,\n  readContentBinary,\n  readContentString,\n  readContentEmbed,\n  readContentFormat,\n  readContentType,\n  readContentAny,\n];\n\nexport default contentDecoder;\n","/**\n * @since 2021-07-08\n * @author vivaxy\n */\nimport * as decoding from 'lib0/decoding';\nimport * as binary from 'lib0/binary';\nimport contentRefs from './content-decoder';\nimport readDeleteSet from './delete-set-decoder';\nimport { DATA_TYPES } from '../data-viewer';\n\nexport default function updateDecoder(update) {\n  const decoder = decoding.createDecoder(update);\n  // const firstVarUint = decoding.peekVarUint(decoder);\n  // if (firstVarUint === 0) {\n  //   return 'encoding V2 not supported';\n  // } else {\n  return decodeV1(decoder);\n  // }\n}\n\nexport function decodeV1(decoder) {\n  const clientsStructs = readClientsStructRefs(decoder);\n  const deleteSet = readDeleteSet(decoder);\n  return { clientsStructs, deleteSet };\n}\n\nfunction readClientsStructRefs(decoder) {\n  const clientRefs = {};\n  const numOfStateUpdates = decoding.readVarUint(decoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder);\n    const items = [];\n    let { clock, client } = readID(decoder);\n\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoding.readUint8(decoder);\n      let struct;\n      const infoType = binary.BITS5 & info;\n      if (infoType === 0) {\n        // GC\n        struct = new AbstractStruct(DATA_TYPES.GC, client, clock, {\n          length: decoding.readVarUint(decoder),\n        });\n      } else if (infoType === 10) {\n        // Skip\n        struct = new AbstractStruct(DATA_TYPES.SKIP, client, clock, {\n          length: decoding.readVarUint(decoder),\n        });\n      } else {\n        struct = readItem(client, clock, decoder, info);\n      }\n      items.push(struct);\n      clock += struct.length;\n    }\n    clientRefs[client] = items;\n  }\n  return clientRefs;\n}\n\nfunction readID(decoder) {\n  return {\n    client: decoding.readVarUint(decoder),\n    clock: decoding.readVarUint(decoder),\n  };\n}\n\nclass AbstractStruct {\n  constructor(\n    type,\n    client,\n    clock,\n    content,\n    left,\n    origin,\n    right,\n    rightOrigin,\n    parentYKey,\n    parent,\n  ) {\n    this.type = type;\n    this.client = client;\n    this.clock = clock;\n    this.left = left;\n    this.origin = origin;\n    this.right = right;\n    this.rightOrigin = rightOrigin;\n    this.parentYKey = parentYKey;\n    this.parent = parent;\n    Object.keys(content).forEach((key) => {\n      this[key] = content[key];\n    });\n  }\n}\n\nfunction readItem(client, clock, decoder, info) {\n  const origin = (info & binary.BIT8) === binary.BIT8 ? readID(decoder) : null;\n  const rightOrigin =\n    (info & binary.BIT7) === binary.BIT7 ? readID(decoder) : null;\n  const canCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n\n  const hasParentYKey = canCopyParentInfo\n    ? decoding.readVarUint(decoder) === 1\n    : false;\n\n  const parentYKey =\n    // parentYKey\n    canCopyParentInfo && hasParentYKey ? decoding.readVarString(decoder) : null;\n\n  let parent = null;\n  if (canCopyParentInfo && !hasParentYKey) {\n    // parent\n    parent = readID(decoder);\n  }\n\n  if (canCopyParentInfo && (info & binary.BIT6) === binary.BIT6) {\n    decoding.readVarString(decoder);\n  }\n\n  const itemContent = readItemContent(decoder, info);\n\n  return new AbstractStruct(\n    DATA_TYPES.ITEM,\n    client,\n    clock,\n    itemContent,\n    null,\n    origin,\n    null,\n    rightOrigin,\n    parentYKey,\n    parent,\n  );\n}\n\nfunction readItemContent(decoder, info) {\n  return contentRefs[info & binary.BITS5](decoder);\n}\n","/**\n * @since 2021-06-24\n * @author vivaxy\n */\nimport { EditorState } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Schema, DOMParser } from 'prosemirror-model';\nimport { schema } from 'prosemirror-schema-basic';\nimport { addListNodes } from 'prosemirror-schema-list';\nimport { exampleSetup } from 'prosemirror-example-setup';\nimport * as Y from 'yjs';\nimport yjsPlugin from './yjs-plugin';\nimport { p2y } from './helpers';\nimport updateDecoder from '../data-visualization/src/update-decoder';\n\nconst mySchema = new Schema({\n  nodes: addListNodes(schema.spec.nodes, 'paragraph block*', 'block'),\n  marks: schema.spec.marks,\n});\n\nfunction broadcast(update, sourceId) {\n  const otherViews = window.views.filter(function (view) {\n    return yjsPlugin.getState(view.state).id !== sourceId;\n  });\n  console.log('update', updateDecoder(update));\n  setTimeout(function () {\n    otherViews.forEach(function (view) {\n      const { xmlFragment } = yjsPlugin.getState(view.state);\n      console.log('broadcast to', xmlFragment.doc.clientID);\n      Y.applyUpdate(xmlFragment.doc, update, 'remote');\n    });\n  }, 300);\n}\n\nfunction createEditor($container, initialUpdate) {\n  const yDoc = new Y.Doc();\n  yDoc.clientID = Number($container.id.split('-')[1]);\n  Y.applyUpdate(yDoc, initialUpdate);\n  const xmlFragment = yDoc.get('prosemirror', Y.XmlFragment);\n  const view = new EditorView($container, {\n    state: EditorState.create({\n      doc: pDoc,\n      yjs: {\n        id: $container.id,\n        xmlFragment,\n        onLocalUpdate: broadcast,\n        getView() {\n          return view;\n        },\n      },\n      plugins: [...exampleSetup({ schema: mySchema }), yjsPlugin],\n    }),\n  });\n  return view;\n}\n\nconst pDoc = DOMParser.fromSchema(mySchema).parse(\n  document.querySelector('#content'),\n);\n\nconst yDoc = new Y.Doc();\nconst xmlFragment = yDoc.get('prosemirror', Y.XmlFragment);\np2y(pDoc, xmlFragment);\nconst initialUpdate = Y.encodeStateAsUpdate(yDoc);\n\nwindow.views = [\n  createEditor(document.getElementById('editor-1'), initialUpdate),\n  createEditor(document.getElementById('editor-2'), initialUpdate),\n];\n","/**\n * @since 2021-07-08\n * @author vivaxy\n */\nimport * as decoding from 'lib0/decoding';\n\nexport default function readDeleteSet(decoder) {\n  if (!(decoder instanceof decoding.Decoder)) {\n    decoder = decoding.createDecoder(decoder);\n  }\n  const ds = {\n    clients: {},\n  };\n  const numClients = decoding.readVarUint(decoder);\n  for (let i = 0; i < numClients; i++) {\n    const client = decoding.readVarUint(decoder);\n    const numberOfDeletes = decoding.readVarUint(decoder);\n    if (numberOfDeletes > 0) {\n      ds.clients[client] = [];\n      for (let i = 0; i < numberOfDeletes; i++) {\n        ds.clients[client].push({\n          clock: decoding.readVarUint(decoder),\n          length: decoding.readVarUint(decoder),\n        });\n      }\n    }\n  }\n  return ds;\n}\n"],"names":["OrderedMap","content","this","prototype","constructor","find","key","i","length","get","found","undefined","update","value","newKey","self","remove","slice","push","splice","addToStart","concat","addToEnd","addBefore","place","without","forEach","f","prepend","map","from","size","subtract","append","result","prop","findDiffStart","a","b","pos","childCount","childA","child","childB","sameMarkup","isText","text","j","inner","nodeSize","findDiffEnd","posA","posB","iA","iB","same","minSize","Math","min","Fragment","prototypeAccessors","firstChild","configurable","lastChild","nodesBetween","to","nodeStart","parent","end","start","max","descendants","textBetween","blockSeparator","leafText","separated","node","isLeaf","isBlock","other","last","first","withText","cut","cutByIndex","empty","replaceChild","index","current","copy","eq","RangeError","maybeChild","p","otherPos","findIndex","round","retIndex","curPos","toString","toStringInner","join","toJSON","n","fromJSON","schema","Array","isArray","nodeFromJSON","fromArray","array","joined","nodes","attrs","Object","defineProperties","offset","compareDeep","p$1","Mark","type","ReplaceError","message","err","Error","call","__proto__","addToSet","set","placed","excludes","rank","removeFromSet","isInSet","obj","name","_","json","marks","create","sameSet","setFrom","none","sort","Slice","openStart","openEnd","prototypeAccessors$1","removeRange","ref","ref$1","indexTo","offsetTo","insertInto","dist","insert","canReplace","replace","$from","$to","depth","replaceOuter","$along","extra","resolveNoCache","prepareSliceForReplace","replaceThreeWay","parentOffset","replaceTwoWay","checkJoin","main","sub","compatibleContent","joinable","$before","$after","addNode","target","addRange","$start","$end","startIndex","endIndex","textOffset","nodeAfter","nodeBefore","validContent","insertAt","fragment","removeBetween","maxOpen","openIsolating","spec","isolating","n$1","ResolvedPos","path","prototypeAccessors$2","doc","resolveDepth","val","indexAfter","before","after","dOff","posAtIndex","tmp","inclusive","marksAcross","isInline","next","sharedDepth","blockRange","pred","d","inlineContent","NodeRange","sameParent","str","resolve","rem","resolveCached","resolveCache","cached","resolveCachePos","resolveCacheSize","prototypeAccessors$1$1","emptyAttrs","prototypeAccessors$3","textContent","isTextblock","isAtom","startPos","hasMarkup","defaultAttrs","mark","includeParents","nodeAt","childAfter","childBefore","rangeHasMark","toDebugString","wrapMarks","contentMatchAt","match","contentMatch","matchFragment","replacement","one","two","validEnd","allowsMarks","canReplaceWith","matchType","canAppend","check","m","markFromJSON","nodeType","TextNode","Node","JSON","stringify","base","ContentMatch","wrapCache","prototypeAccessors$4","defaultType","edgeCount","parse","string","nodeTypes","stream","TokenStream","expr","parseExpr","nfa","labeled","connect","compile","exprs","reduce","out","loop","edge","loop$1","cur","i$1","next$1","i$2","next$2","term","edges","explore","states","known","indexOf","nullFrom","state","states$1","cmp","work","dead","hasRequiredAttrs","checkForDeadEnds","frag","compatible","fillBefore","toEnd","seen","search","types","finished","tp","createAndFill","findWrapping","computed","computeWrapping","active","via","shift","reverse","scan","inline","tokens","split","pop","prototypeAccessors$1$2","parseExprSeq","eat","parseExprSubscript","test","typeName","type$1","groups","resolveName","parseExprAtom","parseExprRange","parseNum","Number","defaults","attrName","attr","hasDefault","default","computeAttrs","built","given","initAttrs","Attribute","tok","SyntaxError","NodeType","group","markSet","prototypeAccessors$5","atom","isRequired","createChecked","allowsMarkType","markType","allowedMarks","topType","topNode","options","hasOwnProperty","prototypeAccessors$1$3","MarkType","excluded","instance","Schema","contentExprCache","prop$1","contentExpr","markExpr","gatherMarks","prop$2","excl","bind","topNodeType","wrappings","ok","mark$1","text$1","rules","this$1","tags","styles","rule","tag","style","normalizeLists","some","r","dom","context","ParseContext","addAll","finish","parseSlice","matchTag","matches","namespace","namespaceURI","matchesContext","getAttrs","matchStyle","charCodeAt","schemaRules","priority","rules$1","parseDOM","name$1","fromSchema","domParser","blockTags","address","article","aside","blockquote","canvas","dd","div","dl","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","li","noscript","ol","output","pre","section","table","tfoot","ul","ignoreTags","head","object","script","title","listTags","wsOptionsFor","preserveWhitespace","NodeContext","pendingMarks","solid","activeMarks","stashMarks","fill","wrap","exec","popFromStashMark","applyPending","nextType","pending","markMayApply","inlineContext","parentNode","nodeName","toLowerCase","parser","open","isOpen","topContext","topOptions","topMatch","findPositions","needsBlock","prototypeAccessors$6","top","currentPos","selector","msMatchesSelector","webkitMatchesSelector","mozMatchesSelector","v","returned","addDOM","addTextNode","getAttribute","readStyles","re","trim","parseStyles","addPendingMark","addElement","removePendingMark","nodeValue","domNodeBefore","previousSibling","insertNode","findInText","findInside","matchAfter","ruleID","prevItem","nextSibling","appendChild","normalizeList","ruleFromNode","ignore","ignoreFallback","skip","closeParent","sync","oldNeedsBlock","leafFallback","addElementByRule","consuming","ownerDocument","createTextNode","findPlace","continueAfter","enter","startIn","getContent","contentDOM","contentElement","querySelector","findAround","childNodes","findAtPoint","route","cx","enterInner","block","textblockFromContext","closeExtra","preserveWS","topOpen","contains","compareDocumentPosition","textNode","parts","option","useRoot","minDepth","part","$context","deflt","findSameMarkInSet","upto","level","lastIndexOf","stashMark","DOMSerializer","gatherToDOM","toDOM","document","window","serializeFragment","createDocumentFragment","keep","rendered","spanning","add","markDOM","serializeMark","serializeNodeInner","renderSpec","onContent","serializeNode","structure","xmlNS","tagName","space","createElementNS","createElement","space$1","setAttributeNS","setAttribute","innerContent","domSerializer","nodesFromSchema","marksFromSchema","factor16","pow","recoverIndex","MapResult","deleted","recover","StepMap","ranges","inverted","diff","recoverOffset","mapResult","assoc","_map","simple","oldIndex","newIndex","oldSize","newSize","touches","oldStart","newStart","invert","Mapping","maps","mirror","TransformError","appendMap","mirrors","setMirror","appendMapping","mapping","startSize","mirr","getMirror","appendMappingInverted","totalSize","inverse","corr","Transform","steps","docs","docChanged","mustOverride","step","maybeStep","failed","apply","addStep","getMap","stepsByID","Step","_doc","_mapping","merge","_other","stepType","jsonID","id","stepClass","StepResult","fail","fromReplace","e","ReplaceStep","contentBetween","slice$1","ReplaceAroundStep","gapFrom","gapTo","gap","inserted","canCut","liftTarget","range","innerRange","around","outer","findWrappingOutside","inside","innerMatch","findWrappingInside","withAttrs","canSplit","typesAfter","$pos","innerType","index$1","rest","baseType","joinPoint","dir","dropPoint","pass","bias","insertPos","fits","wrapping","mapFragment","mapped","lift","gapStart","gapEnd","splitting","d$1","splitting$1","wrappers","setBlockType","mapFrom","canChangeType","clearIncompatible","startM","endM","setNodeMarkup","newNode","replaceWith","typeAfter","AddMarkStep","oldSlice","RemoveMarkStep","fitsTrivially","addMark","removed","added","removing","adding","newSet","s","removeMark","matched","toRemove","found$1","parentType","delSteps","allowed","Fitter","fit","replaceStep","delete","unplaced","frontier","dropFromFragment","count","addToFragment","contentAt","closeNodeStart","contentAfterFits","invalidMarks","closeFragment","oldOpen","newOpen","coveredDepths","findFittable","placeNodes","openMore","dropNode","moveInline","mustMoveInline","placedSize","close","sliceDepth","frontierDepth","inject","openAtEnd","closeFrontierNode","openFrontierNode","taken","openEndCount","findCloseLevel","dropInner","match$1","move","replaceRange","deleteRange","targetDepths","preferredTarget","unshift","defining","preferredTargetIndex","leftNodes","preferredDepth","openDepth","targetDepth","expand","startSteps","replaceRangeWith","point","insertPoint","covered","classesById","Selection","$anchor","$head","SelectionRange","anchor","tr","lastNode","lastParent","selectionToInsertionEnd","findFrom","textOnly","TextSelection","findSelectionIn","near","AllSelection","atStart","atEnd","cls","selectionClass","getBookmark","between","visible","$cursor","ensureMarks","TextBookmark","dPos","NodeSelection","NodeBookmark","isSelectable","selectable","sel","selection","setSelection","AllBookmark","startLen","_from","_to","_newFrom","newTo","Transaction","time","Date","now","curSelection","curSelectionFor","storedMarks","updated","meta","selectionSet","storedMarksSet","isGeneric","scrolledIntoView","setStoredMarks","addStoredMark","removeStoredMark","setTime","replaceSelection","replaceSelectionWith","inheritMarks","deleteSelection","insertText","setMeta","getMeta","scrollIntoView","FieldDesc","desc","init","baseFields","config","_marks","_old","prev","Configuration","plugins","fields","pluginsByKey","plugin","EditorState","applyTransaction","filterTransaction","rootTr","transactions","trs","newState","applyInner","haveNew","appendTransaction","oldState","newInstance","field","applyListeners","$config","reconfigure","pluginFields","addApplyListener","removeApplyListener","bindProps","Function","Plugin","props","createKey","getState","keys","PluginKey","navigator","ie_edge","userAgent","ie_upto10","ie_11up","mac","platform","ie","ie_version","documentMode","gecko","gecko_version","chrome","chrome_version","safari","vendor","ios","maxTouchPoints","android","webkit","documentElement","webkit_version","domIndex","assignedSlot","host","reusedRange","textRange","createRange","setEnd","setStart","isEquivalentPosition","off","targetNode","targetOff","scanFor","atomElements","hasBlockDesc","contentEditable","pmViewDesc","selectionCollapsed","domSel","collapsed","isCollapsed","rangeCount","getRangeAt","keyEvent","keyCode","event","createEvent","initEvent","code","windowRect","left","right","clientWidth","bottom","clientHeight","getSide","side","clientRect","rect","getBoundingClientRect","scaleX","width","offsetWidth","scaleY","height","offsetHeight","scrollRectIntoView","view","startDOM","scrollThreshold","someProp","scrollMargin","atTop","body","bounding","moveX","moveY","defaultView","scrollBy","startX","scrollLeft","startY","scrollTop","dX","dY","scrollStack","stack","restoreScrollStack","dTop","preventScrollSupported","findOffsetInNode","coords","closest","coordsClosest","dxClosest","rowBot","rowTop","childIndex","rects","getClientRects","dx","len","singleRect","inRect","findOffsetInText","elementFromPoint","element","box","startI","floor","posAtCoords","assign","assign$1","caretPositionFromPoint","pos$1","offsetNode","caretRangeFromPoint","startContainer","startOffset","elt","root","draggable","targetKludge","box$1","outside","docView","nearestDesc","posBefore","posAfter","posFromDOM","posFromCaret","posFromElement","posAtStart","border","BIDI","coordsAtPos","domFromPos","supportEmptyRange","takeSide","flattenV","rectBefore","rectAfter","flattenH","before$1","after$1","ignoreForCoords","target$1","x","y","withFlushedState","viewState","activeElement","updateState","focus","maybeRTL","cachedState","cachedDir","cachedResult","ViewDesc","children","dirty","posAtEnd","contentLost","domAtom","matchesWidget","matchesMark","matchesNode","matchesHack","_nodeName","parseRule","stopEvent","destroy","posBeforeChild","localPosFromDOM","domBefore","domAfter","desc$1","search$1","onlyNodes","getDesc","nodeDOM","descAt","TrailingHackViewDesc","WidgetViewDesc","widget","prev$1","enter$1","parseRange","fromOffset","toOffset","childBase","emptyChildAt","j$1","domAfterPos","force","anchorDOM","headDOM","getSelection","brKludge","offset$1","focusNode","focusOffset","anchorNode","anchorOffset","domSelExtended","extend","collapse","DOMException","removeAllRanges","ignoreMutation","mutation","markDirty","startInside","endInside","markParentsDirty","nothing","raw","classList","stop","ignoreSelection","CompositionViewDesc","textDOM","mut","oldValue","MarkViewDesc","custom","nodeViews","replaceNodes","NodeViewDesc","outerDeco","innerDeco","updateChildren","descObj","hasAttribute","applyOuterDeco","CustomNodeViewDesc","TextViewDesc","reparseInView","sameOuterDeco","composition","composing","localCompositionInfo","localComposition","compositionInChild","updater","ViewTreeUpdater","deco","onWidget","onNode","locals","decoIndex","restNode","parentIndex","widgets","compareSide","child$1","cutAt","i$3","filter","forChild","iterDeco","insideNode","syncToMarks","placeWidget","compIndex","findNodeMatch","findIndexWithChild","updateNodeAt","updateNextNode","addTextblockHacks","destroyRest","changed","protectLocalComposition","renderDescs","oldCSS","cssText","getComputedStyle","listStyle","iosHacks","nearbyTextNode","textPos","childStart","findTextInFragment","removeChild","compositionNodes","updateInner","updateOuterDeco","needsWrap","oldDOM","patchOuterDeco","computeOuterDeco","selectNode","deselectNode","removeAttribute","docViewDesc","pmIsDeco","inParent","trackWrites","parentDOM","arguments","descs","written","childDOM","rm","insertBefore","OuterDecoLevel","noDeco","class","outerDOM","prevComputed","curComputed","curDOM","patchAttributes","prevList","Boolean","curList","removeProperty","lockedNode","lock","preMatch","fI","dI","Map","selectionFromDOM","origin","inWidget","isOnEdge","selectionBetween","editorOwnsSelection","editable","hasFocus","hasSelection","selectionToDOM","syncNodeSelection","mouseDown","allowDefault","delayedSelectionSync","domObserver","setCurSelection","disconnectSelection","cursorWrapper","img","disabled","selectCursorWrapper","resetEditableFrom","resetEditableTo","brokenSelectBetweenUneditable","temporarilyEditableNear","resetEditable","removeEventListener","hideSelectionGuard","addEventListener","setTimeout","removeClassOnSelectionChange","connectSelection","destroyBetween","maxKeep","markDesc","has","domNode","nextDOM","addHackNode","className","setEditable","wasDraggable","lastSelectedViewDesc","clearNodeSelection","moveSelectionBlock","$side","dispatch","selectHorizontally","mods","endOfTextblock","nodePos","nodeLen","isIgnorable","skipIgnoredNodesLeft","moveNode","moveOffset","isBlockNode","setSelFocus","skipIgnoredNodesRight","selectVertically","beyond","stopNativeHorizontalDelete","nextNode","switchEditable","resolveSelection","parsedSel","skipClosingAndOpening","fromEnd","mayOpen","serializeForClipboard","serializer","detachedDoc","wrapMap","wrapper","parseFromClipboard","html","plainText","inCode","asText","parsed","metas","firstTag","innerHTML","readHTML","querySelectorAll","restoreReplacedSpaces","contextNode","sliceData","addContext","closeSlice","lastWrap","inLast","addToSibling","closeRight","wrapped","withWrappers","normalizeSiblings","node$1","sibling","closeRange","thead","tbody","caption","colgroup","col","td","th","_detachedDoc","implementation","createHTMLDocument","observeOptions","childList","characterData","characterDataOldValue","attributes","attributeOldValue","subtree","useCharData","SelectionState","DOMObserver","handleDOMChange","queue","flushingSoon","observer","MutationObserver","mutations","removedNodes","flushSoon","flush","currentSelection","onCharData","prevValue","onSelectionChange","suppressingSelectionUpdates","forceFlush","clearTimeout","observe","take","takeRecords","disconnect","suppressSelectionUpdates","ignoreSelectionChange","container","commonAncestorContainer","newSel","typeOver","result$1","registerMutation","brs","cssChecked","whiteSpace","console","attributeName","addedNodes","handlers","editHandlers","setSelectionOrigin","lastSelectionOrigin","lastSelectionTime","ensureListeners","currentHandlers","eventHandlers","runCustomHandler","handler","defaultPrevented","eventCoords","clientX","clientY","runHandlerOnContext","propName","updateSelection","focused","handleDoubleClick","handleTripleClick","button","defaultTripleClick","forceDOMFlush","endComposition","keydown","shiftKey","inOrNearComposition","lastKeyCode","lastKeyCodeTime","ctrlKey","altKey","metaKey","getMods","safariDownArrowBug","captureKeyDown","preventDefault","lastIOSEnter","lastIOSEnterFallbackTimeout","keyup","keypress","charCode","String","fromCharCode","selectNodeModifier","mousedown","flushed","lastClick","click","dy","isNear","done","MouseDown","targetPos","startDoc","mightDrag","targetDesc","addAttr","setUneditable","up","abs","timeStamp","compositionEndedAt","selectedNode","selectAt","selectClickedNode","selectClickedLeaf","handleSingleClick","buttons","touchdown","contextmenu","timeoutComposition","scheduleComposeEnd","delay","composingTimeout","clearComposition","forceUpdate","compositionstart","compositionupdate","markCursor","compositionend","brokenClipboardAPI","doPaste","singleNode","sliceSingleNode","data","clipboardData","clearData","setData","selectNodeContents","blur","captureCopy","paste","getData","capturePaste","Dragging","dragCopyModifier","dragstart","dataTransfer","effectAllowed","dragging","dragend","dragover","dragenter","drop","eventPos","$mouse","isNode","beforeInsert","relatedTarget","beforeinput","inputType","domChangeCount","compareObjs","WidgetType","noSpec","span","oldOffset","Decoration","valid","InlineType","inclusiveStart","inclusiveEnd","is","DecorationSet","local","decorations","buildTree","predicate","findInner","childOff","mapInner","newLocal","onRemove","oldChildren","oldEnd","newEnd","dSize","mustRebuild","fromLocal","toLocal","childOffset","childNode","gather","mapAndGatherRemainingDecorations","from$1","byPos","mapChildren","addInner","baseOffset","takeSpansForNode","moveSpans","withoutNulls","removeInner","span$1","dec","localSet","DecorationGroup","removeOverlap","localsInner","members","spans","hasNulls","localStart","working","insertAhead","viewDecorations","mappedDecos","member","sorted","EditorView","_props","directPlugins","checkStateComponent","_root","mount","mounted","getEditable","updateCursorWrapper","buildNodeViews","computeDocDeco","lastAndroidDelete","tr$1","shared","from_","to_","editableContent","anchor$1","parseBetween","preferredPos","preferredSide","compare","change","endA","endB","findDiff","sel$1","nextSel","inlineChange","old","$newStart","$newEnd","$next","looksLikeJoin","toB","markChange","$from1","chFrom","chTo","curMarks","prevMarks","isMarkChange","sel$2","readDOMChange","bubbles","eventBelongsToView","initInput","prevDirectPlugins","pluginViews","updatePluginViews","contenteditable","translate","handleDOMEvents","updateStateInner","setProps","reconfigured","redraw","updateSel","nA","nB","changedNodeViews","scroll","scrollToSelection","updateDoc","sel1","sel2","refDOM","refTop","newRefTop","oldScrollPos","overflowAnchor","innerHeight","localRect","storeScrollPos","forceSelUpdate","chromeKludge","destroyPluginViews","prevState","pluginView","plugin$1","setActive","stored","preventScroll","focusPreventScroll","getPrototypeOf","domAtPos","posAtDOM","nearest","boxes","endOfTextblockVertical","modify","oldRange","oldNode","oldOff","oldBidiLevel","caretBidiLevel","endOfTextblockHorizontal","destroyInput","dispatchEvent","dispatchTransaction","pDOM","blockquoteDOM","hrDOM","preDOM","brDOM","emDOM","strongDOM","codeDOM","paragraph","horizontal_rule","heading","code_block","image","src","alt","hard_break","link","href","em","strong","fontWeight","olDOM","ulDOM","liDOM","orderedList","order","bulletList","listItem","wrapInList","listType","doJoin","outerRange","$insert","joinBefore","splitDepth","splitPos","doWrapInList","brokenModifierNames","normalizeKeyName","ctrl","mod","modifiers","keymap","bindings","handleKeyDown","keydownHandler","normalize","baseName","keyName","isChar","direct","fromCode","withShift","GOOD_LEAF_SIZE","RopeSequence","leafAppend","leafPrepend","appendInner","Append","sliceInner","getInner","forEachInner","forEachInvertedInner","values","Leaf","flatten","leftLen","Branch","items","eventCount","popEvent","preserveItems","remap","remapping","remaining","transform","addAfter","item","Item","addTransform","histOptions","newItems","oldItems","lastItem","merged","cutPoint","overflow","DEPTH_OVERFLOW","mirrorPos","mirrorOffset","addMaps","rebased","rebasedTransform","rebasedCount","rebasedItems","newUntil","iRebased","newMaps","branch","emptyItemCount","compress","events","newItem","HistoryState","undone","prevRanges","prevTime","rangesFor","mapRanges","histTransaction","history","redo","mustPreserveItems","historyKey","newHist","historyState","cachedPreserveItems","cachedPreserveItemsPlugins","historyPreserveItems","closeHistoryKey","undo","hist","textblockAt","only","findCutBefore","findCutAfter","joinUp","nodeSel","joinDown","defaultBlockAt","exitCode","above","selectParentNode","deleteBarrier","$cut","conn","joinMaybeClear","canDelAfter","joinAt","selAfter","at","wrap$1","afterText","afterDepth","end$1","wrapIn","applicable","toggleMark","can","markApplies","ref$2","$from$1","$to$1","spaceStart","spaceEnd","chainCommands","commands","backspace","del","pcBaseKeymap","$first","macBaseKeymap","baseKeymap","os","dropCursor","editorView","DropCursorView","color","cursorPos","timeout","setCursor","updateOverlay","nodeRect","parentLeft","parentTop","offsetParent","position","pageXOffset","pageYOffset","rect$1","scheduleRemoval","dragleave","GapCursor","GapBookmark","closedBefore","closedAfter","override","allowGapCursor","mustMove","$cur","$cur$1","arrow","axis","dirStr","$found","handleClick","drawGapCursor","crelt","SVG","prefix","prefix$1","MenuItem","render","icon","hash","hashPath","getElementById","collection","display","sym","buildSVG","svg","location","cloneNode","css","getIcon","label","run","select","selected","enabled","enable","setClass","lastMenuEvent","markMenuEvent","isMenuEvent","Dropdown","renderDropdownItems","updates","combineUpdates","something","listeningOnClose","menuDOM","DropdownSubmenu","icons","joinUpItem","liftItem","selectParentNodeItem","undoItem","redoItem","blockTypeItem","command","passedOptions","on","prefix$2","MenuBarView","menu","spacer","maxHeight","widthForMaxHeight","floating","separators","localUpdates","localNodes","update$1","needSep","hasContent","renderGrouped","contentUpdate","agent","isIOS","updateFloat","potentialScrollers","res","getAllWrapping","scrollFunc","el","updateScrollCursor","minHeight","selRect","DOCUMENT_POSITION_FOLLOWING","selectionIsInverted","menuRect","scrollable","scrollHeight","findWrappingScrollable","scrollAncestor","editorRect","InputRule","cutOff","textBefore","undoInputRule","undoable","isInputRules","toUndo","emDash","ellipsis","smartQuotes","wrappingInputRule","regexp","joinPredicate","textblockTypeInputRule","openPrompt","mouseOutside","domFields","submitButton","cancelButton","innerWidth","submit","params","read","bad","validate","reportInvalid","clean","getValues","callback","input","elements","msg","offsetLeft","offsetTop","Field","validateType","_value","required","TextField","placeholder","autocomplete","canInsert","cmdItem","cmd","markActive","markItem","wrapListItem","buildMenuItems","toggleStrong","toggleEm","toggleCode","toggleLink","insertImage","bullet_list","wrapBulletList","ordered_list","wrapOrderedList","wrapBlockQuote","wrapItem","makeParagraph","makeCodeBlock","insertHorizontalRule","arr","insertMenu","typeMenu","makeHead1","makeHead2","makeHead3","makeHead4","makeHead5","makeHead6","inlineMenu","blockMenu","fullMenu","buildKeymap","mapKeys","itemType","br","list_item","grandParent","depthBefore","depthAfter","endOfList","liftToOuterList","list","indexBefore","liftOutOfList","liftListItem","nestedBefore","sinkListItem","buildInputRules","bulletListRule","codeBlockRule","maxLevel","RegExp","headingRule","handleTextInput","inputRules","exampleSetup","createSelectionBetween","_view","menuBar","floatingMenu","menuContent","newGroupDelay","historyTr","appended","newGroup","adjacent","isAdjacentTo","handled","k","setIfUndefined","createT","Set","appendTo","dest","ceil","imul","log10","log2","log","sqrt","isNegativeZero","isNaN","sign","trimLeftRegex","fromCodePoint","fromCamelCaseRegex","fromCamelCase","separator","trimLeft","TextEncoder","utf8TextDecoder","TextDecoder","fatal","ignoreBOM","decode","Uint8Array","_localStorage","setItem","newValue","getItem","usePolyfill","localStorage","varStorage","process","release","args","pargs","argv","currParamName","parg","kv","computeParams","hasParam","env","toUpperCase","getVariable","createUint8ArrayViewFromArrayBuffer","buffer","byteOffset","BIT7","BIT8","BITS7","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","num","isFinite","Encoder","cpos","cbuf","bufs","createEncoder","toUint8Array","encoder","uint8arr","write","bufferLen","writeUint8","writeVarUint","writeVarInt","isNegative","writeVarString","encodedString","unescape","encodeURIComponent","codePointAt","writeUint8Array","uint8Array","leftCopyLen","rightCopyLen","subarray","writeVarUint8Array","byteLength","writeOnDataView","verifyLen","dview","DataView","floatTestBed","ArrayBuffer","writeAny","setFloat32","getFloat32","writeFloat32","setFloat64","writeFloat64","setBigInt64","writeBigInt64","RleEncoder","writer","super","w","flushUintOptRleEncoder","UintOptRleEncoder","flushIntDiffOptRleEncoder","encodedDiff","IntDiffOptRleEncoder","StringEncoder","sarr","lensE","Decoder","createDecoder","readVarUint8Array","decoder","readUint8Array","readVarUint","readUint8","readVarInt","readVarString","remainingLen","nextLen","bytes","decodeURIComponent","escape","readFromDataView","dv","readAnyLookupTable","getFloat64","getBigInt64","readAny","RleDecoder","reader","UintOptRleDecoder","IntDiffOptRleDecoder","hasCount","StringDecoder","spos","performance","isoCrypto","crypto","cryptoRandomBuffer","buf","getRandomValues","random","uint32","Uint32Array","uuidv4Template","uuidv4","c","methodUnimplemented","unexpectedCase","callAll","fs","Symbol","Pair","getUnixTime","DOMParser","ELEMENT_NODE","TEXT_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","BOLD","UNBOLD","BLUE","GREY","GREEN","RED","PURPLE","ORANGE","UNCOLOR","_browserStyleMap","_nodeStyleMap","computeLoggingArgs","strBuilder","logArgs","arg","currentStyle","vconsoles","createIterator","iterator","iteratorMap","fmap","DeleteItem","clock","DeleteSet","clients","iterateDeletedStructs","transaction","ds","deletes","clientid","structs","store","iterateStructs","isDeleted","dis","client","midindex","mid","midclock","findIndexDS","sortAndMergeDeleteSet","dels","addToDeleteSet","createDeleteSet","writeDeleteSet","restEncoder","dsitems","resetDsCurVal","writeDsClock","writeDsLen","readDeleteSet","numClients","restDecoder","numberOfDeletes","dsField","readDsClock","readDsLen","readAndApplyDeleteSet","unappliedDS","clockEnd","findIndexSS","struct","splitItem","UpdateEncoderV2","generateNewClientId","Doc","_observers","once","_f","observers","emit","guid","gc","gcFilter","autoLoad","clientID","share","StructStore","_transaction","_transactionCleanups","subdocs","_item","shouldLoad","load","transact","subdocsLoaded","getSubdocs","getSubdocGuids","TypeConstructor","AbstractType","t","_integrate","Constr","_start","_length","getArray","YArray","getText","YText","YMap","getXmlFragment","YXmlFragment","subdoc","opts","subdocsAdded","subdocsRemoved","eventName","DSDecoderV1","UpdateDecoderV1","readLeftID","createID","readRightID","readClient","readInfo","readString","readParentInfo","readTypeRef","readLen","readBuf","newBuf","readJSON","readKey","UpdateDecoderV2","dsCurrVal","keyClockDecoder","clientDecoder","leftClockDecoder","rightClockDecoder","infoDecoder","stringDecoder","parentInfoDecoder","typeRefDecoder","lenDecoder","ID","keyClock","UpdateEncoderV1","writeLeftID","writeRightID","writeClient","writeInfo","info","writeString","writeParentInfo","isYKey","writeTypeRef","writeLen","any","writeBuf","writeJSON","embed","writeKey","keyMap","keyClockEncoder","clientEncoder","leftClockEncoder","rightClockEncoder","infoEncoder","stringEncoder","parentInfoEncoder","typeRefEncoder","lenEncoder","writeClientsStructs","_sm","sm","getStateVector","entries","startNewStructs","firstStruct","writeStructs","applyUpdateV2","ydoc","transactionOrigin","YDecoder","structDecoder","retry","ss","clientRefs","numOfStateUpdates","numberOfStructs","refs","GC","Skip","cantCopyParentInfo","readItemContent","readClientsStructRefs","restStructs","clientsStructRefs","clientsStructRefsIds","getNextStructTarget","nextStructsTarget","curStructsTarget","missingSV","updateMissingSv","mclock","stackHead","addStackToRestSS","unapplicableItems","missing","getMissing","structRefs","integrate","integrateStructs","pendingStructs","mergeUpdatesV2","dsRest","pendingDs","pendingDSUpdate","dsRest2","readUpdateV2","applyUpdate","encodeStateAsUpdateV2","encodedTargetStateVector","targetStateVector","createDeleteSetFromStructStore","writeStateAsUpdate","decodeStateVector","diffUpdateV2","mergeUpdates","convertUpdateFormatV2ToV1","decodedState","ssLength","readStateVector","EventHandler","l","createEventHandler","addEventHandlerListener","eventHandler","removeEventHandlerListener","g","error","callEventHandlerListeners","arg0","arg1","compareIDs","Snapshot","sv","isVisible","snapshot","splitSnapshotAffectedStructs","getItemCleanStart","lastStruct","addStruct","findIndexCleanStart","getItemCleanEnd","clockStart","deleteSet","beforeState","afterState","changedParentTypes","_mergeStructs","writeUpdateMessageFromTransaction","writeStructsFromTransaction","addChangedTypeToTransaction","parentSub","tryToMergeWithLeft","mergeWith","cleanupTransactions","transactionCleanups","mergeStructs","subs","itemtype","_callObserver","currentTarget","event1","event2","_dEH","deleteItems","di","deleteItem","endDeleteItemClock","si","tryGcDeleteSet","tryMergeDeleteSet","beforeClock","firstChangePos","replacedStructPos","vc","print","loaded","initialCall","LazyStructReader","filterSkips","gen","lazyStructReaderGenerator","curr","LazyStructWriter","currClient","startClock","clientStructs","sliceStruct","leftItem","rightOrigin","YEncoder","updateDecoders","lazyStructDecoders","currWrite","updateEncoder","lazyStructEncoder","dec1","dec2","clockDiff","currDecoder","firstClient","iterated","writeStructToLazyStructWriter","finishLazyStructWriting","dss","dssI","delsLeft","mergeDeleteSets","lazyStructWriter","svClock","flushLazyStructWriter","lazyWriter","partStructs","updateDecoder","lazyDecoder","convertUpdateFormat","YEvent","_changes","_keys","_delta","getPathTo","action","adds","delta","changes","lastOp","packOp","retain","globalSearchMarkerTimestamp","ArraySearchMarker","marker","timestamp","overwriteMarker","findMarker","yarray","_searchMarker","pindex","refreshMarkerTimestamp","countable","searchMarker","pm","markPosition","updateMarkerChanges","callTypeObservers","changedType","_eH","_copy","clone","_write","_first","parentSubs","observeDeep","unobserve","unobserveDeep","typeListSlice","cs","typeListToArray","typeListForEach","typeListMap","typeListCreateIterator","currentContent","currentContentIndex","typeListGet","typeListInsertGenericsAfter","referenceItem","ownClientId","jsonContent","packJsonContent","lastId","ContentAny","ContentBinary","ContentDoc","ContentType","lengthExceeded","typeListInsertGenerics","typeListDelete","startLength","typeMapDelete","typeMapSet","typeMapGet","typeMapGetAll","typeMapHas","createMapIterator","entry","YArrayEvent","_prelimContent","static","toArray","YArrayRefID","YMapEvent","ymap","keysChanged","clear","YMapRefID","equalAttrs","hasProperty","ItemTextListPosition","currentAttributes","forward","ContentFormat","updateCurrentAttributes","findNextPosition","findPosition","insertNegatedAttributes","currPos","negatedAttributes","nextFormat","format","minimizeAttributeChanges","insertAttributes","currentVal","ContentString","ContentEmbed","getLength","formatText","newlines","cleanupFormattingGap","startAttributes","endAttributes","cleanups","deleteText","startAttrs","YTextEvent","ytext","childListChanged","oldAttributes","deleteLen","addOp","op","curVal","_pending","applyDelta","toDelta","foundFormattingItem","afterClock","cleanupYTextFormatting","cleanupContextlessFormattingGap","sanitize","ins","prevSnapshot","computeYChange","ops","packStr","addAttributes","user","insertEmbed","attributeValue","getAttributes","YTextRefID","YXmlTreeWalker","_filter","_currentNode","_firstCall","YXmlElement","createTreeWalker","query","YXmlEvent","xml","_document","hooks","binding","_createAssociation","xmlType","insertAfter","refItem","pc","YXmlFragmentRefID","_prelimAttrs","prevSibling","stringBuilder","keysLen","toLocaleLowerCase","yxml","YXmlElementRefID","attributesChanged","YXmlHook","hookName","hook","createDom","YXmlHookRefID","YXmlText","nestedNodes","YXmlTextRefID","AbstractStruct","encodingRef","isCountable","getRef","ContentDeleted","markDeleted","ContentJSON","firstCharCode","typeRefs","rightItem","redone","isMarked","doKeep","doDelete","parentItem","o","conflictingItems","itemsBeforeOrigin","parentGCd","newStruct","replaceStruct","ykey","findRootTypeKey","contentRefs","glo","global","importIdentifier","warn","errors","INSERTED","insertXmlFragment","xmlFragment","absPos","yNodes","insertXmlText","insertXmlElement","xmlElement","xmlText","yNode","yXmlText","fn","getTextFromYXmlText","removeHandlers","removedLength","totalLength","rl","tl","removeFromTypeArray","oLength","removeHandler","p2yInsertIntoFragment","yFragment","p2yFragment","yText","p2yText","yElement","attrKey","p2yNode","forEachTypeArray","y2pFragment","forEachTypeMap","lastValue","y2pElement","y2pText","pluginKey","yjs","onLocalUpdate","getView","pDoc","y2p","yState","oldEditorState","newEditorState","contentDecoder","binary","contentType","con","parentYKey","readItem","canCopyParentInfo","hasParentYKey","itemContent","mySchema","listGroup","broadcast","sourceId","otherViews","views","clientsStructs","infoType","decodeV1","createEditor","$container","initialUpdate","yDoc","assert","p2y"],"sourceRoot":""}